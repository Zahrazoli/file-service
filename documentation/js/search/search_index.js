var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,1.079,1,2.475]],["body/modules/AppModule.html",[0,1.95,1,4.851,2,2.082,3,2.211,4,2.511,5,2.511,6,2.211,7,2.353,8,2.511,9,4.244,10,4.244,11,4.446,12,0.021,13,3.054,14,2.511,15,2.511,16,0.334,17,0.299,18,0.299,19,4.968,20,3.27,21,0.486,22,0.748,23,2.891,24,1.409,25,4.968,26,4.968,27,4.968,28,4.968,29,0.334,30,0.174,31,0.017,32,0.017]],["title/guards/AuthenticateGuard.html",[33,2.734,34,1.822]],["body/guards/AuthenticateGuard.html",[12,0.022,16,0.27,17,0.241,18,0.241,21,0.498,22,0.603,24,1.137,29,0.27,30,0.14,31,0.015,32,0.015,34,2.666,35,3.041,36,3.041,37,0.458,38,1.668,39,2.202,40,4.753,41,2.666,42,4.01,43,3.945,44,0.794,45,4.01,46,1.762,47,1.202,48,0.744,49,1.762,50,2.98,51,4.002,52,4.753,53,4.01,54,3.425,55,1.268,56,4.002,57,1.762,58,2.499,59,1.899,60,1.97,61,3.07,62,3.041,63,1.899,64,1.585,65,3.623,66,2.169,67,2.333,68,1.2,69,2.333,70,3.041,71,2.026,72,1.68,73,1.42,74,2.333,75,3.041,76,1.899,77,3.425,78,3.041,79,1.785,80,1.585,81,3.945,82,1.497,83,3.425,84,3.425,85,3.425,86,3.041,87,3.425,88,1.497,89,1.785,90,3.425,91,3.425,92,3.425,93,2.524,94,3.041,95,1.785,96,1.899,97,3.425,98,1.342,99,2.026,100,3.425,101,2.753]],["title/classes/CallBackDTO.html",[30,0.126,102,2.475]],["body/classes/CallBackDTO.html",[12,0.021,16,0.349,17,0.312,18,0.312,29,0.349,30,0.182,31,0.018,32,0.018,37,0.593,44,0.999,48,0.936,98,1.815,102,4.262,103,1.555,104,4.436,105,1.667,106,2.783,107,5.035,108,5.035,109,5.193,110,5.193,111,5.193]],["title/classes/CreatePlanDTO.html",[30,0.126,112,2.269]],["body/classes/CreatePlanDTO.html",[12,0.022,16,0.187,17,0.167,18,0.167,21,0.361,29,0.187,30,0.17,31,0.012,32,0.012,37,0.318,44,0.857,47,1.104,48,0.947,98,1.04,103,0.833,105,1.098,112,2.574,113,2.377,114,3.677,115,3.052,116,2.821,117,2.548,118,1.448,119,3.875,120,4.534,121,4.089,122,4.089,123,3.585,124,4.849,125,2.782,126,2.574,127,2.782,128,2.574,129,2.782,130,4.089,131,4.089,132,2.782,133,3.052,134,4.089,135,2.782,136,1.317,137,2.782,138,3.748,139,3.052,140,1.751,141,1.751,142,1.619,143,1.619]],["title/controllers/DashboardController.html",[144,1.346,145,2.475]],["body/controllers/DashboardController.html",[12,0.021,16,0.312,17,0.279,18,0.348,21,0.493,22,0.698,29,0.312,30,0.162,31,0.017,32,0.017,34,2.344,37,0.53,38,1.832,39,2.359,44,0.698,46,1.549,47,1.056,48,0.654,49,1.549,55,1.466,58,3.134,60,1.732,72,1.944,74,3.676,82,2.359,88,1.732,118,1.179,144,1.732,145,3.978,146,1.732,147,3.962,148,2.919,149,4.638,150,5.793,151,4.638,152,4.638,153,4.638,154,2.197,155,2.919,156,2.919,157,3.185,158,2.927,159,2.197,160,3.185,161,4.638,162,2.509,163,3.517,164,4.638,165,3.185,166,4.638,167,3.962,168,3.962,169,3.517,170,3.962,171,3.517,172,3.962]],["title/modules/DashboardModule.html",[0,1.079,173,2.269]],["body/modules/DashboardModule.html",[0,1.889,2,1.939,3,2.059,4,2.338,5,2.338,6,2.059,7,2.989,8,2.338,12,0.021,13,2.923,14,2.338,15,2.338,16,0.311,17,0.278,18,0.348,20,3.13,21,0.517,22,0.696,23,2.692,24,1.312,29,0.311,30,0.162,31,0.017,32,0.017,66,2.503,145,4.334,146,2.16,159,2.191,173,4.482,174,3.953,175,3.953,176,3.953,177,3.756,178,4.37,179,4.627,180,4.627,181,4.627,182,2.503,183,3.509,184,4.627]],["title/injectables/DashboardService.html",[57,1.204,178,2.269]],["body/injectables/DashboardService.html",[12,0.021,16,0.374,17,0.334,18,0.334,21,0.415,22,0.837,29,0.374,30,0.194,31,0.019,32,0.019,57,2.159,178,4.069,185,3.009,186,4.752]],["title/classes/FileModel.html",[30,0.126,187,2.475]],["body/classes/FileModel.html",[12,0.021,16,0.235,17,0.21,18,0.21,21,0.41,24,0.992,29,0.418,30,0.122,31,0.014,32,0.014,37,0.4,44,1.009,47,1.35,48,1.001,50,2.433,63,1.657,64,1.904,68,1.775,73,1.159,89,2.929,95,2.45,96,1.657,98,1.751,103,1.048,105,1.293,106,2.307,116,3.203,117,2.651,118,1.634,187,3.306,188,2.203,189,3.465,190,5.504,191,3.78,192,3.78,193,3.45,194,3.5,195,3.913,196,2.143,197,3.5,198,4.815,199,3.5,200,4.044,201,3.5,202,3.5,203,2.607,204,3.465,205,3.465,206,3.5,207,3.5,208,3.651,209,3.5,210,2.801,211,4.044,212,3.203,213,2.203,214,2.801,215,2.403,216,2.203,217,2.203,218,3.306,219,3.306,220,3.651,221,2.654,222,2.654,223,2.203,224,2.99,225,2.203,226,2.403,227,1.768,228,3.651,229,2.99,230,2.99,231,3.5,232,2.403,233,2.99]],["title/controllers/FileServiceController.html",[144,1.346,234,2.475]],["body/controllers/FileServiceController.html",[12,0.022,16,0.182,17,0.163,18,0.367,21,0.42,22,0.408,29,0.182,30,0.095,31,0.011,32,0.011,34,1.369,37,0.309,38,1.268,39,2.565,44,0.848,46,1.881,47,1.39,48,0.794,49,1.881,55,1.781,58,3.199,59,3.199,60,1.497,73,1.54,74,3.889,76,3.295,79,1.205,80,1.071,82,2.103,88,1.497,95,2.625,98,1.5,116,2.777,118,1.432,144,1.011,146,1.011,148,1.705,154,1.283,155,1.705,156,1.705,157,1.86,158,2.026,159,2.793,160,1.86,162,1.465,163,2.054,165,3.623,191,3.278,234,2.753,235,3.712,236,2.314,237,2.709,238,4.774,239,4.009,240,3.425,241,4.009,242,4.774,243,2.709,244,2.709,245,2.709,246,4.009,247,2.709,248,4.009,249,2.709,250,3.425,251,2.709,252,2.709,253,2.709,254,2.709,255,2.709,256,2.709,257,2.709,258,4.774,259,2.709,260,2.709,261,3.041,262,2.314,263,3.041,264,4.009,265,2.709,266,2.709,267,2.054,268,2.709,269,2.709,270,2.709,271,2.314,272,2.709,273,4.078,274,3.041,275,3.425,276,2.314,277,2.054,278,2.314,279,2.709,280,2.709,281,2.314,282,4.009,283,2.314,284,1.705,285,2.709,286,4.009,287,2.054,288,2.314,289,2.709,290,2.314,291,2.314,292,2.709,293,2.709,294,2.709,295,2.709,296,1.86,297,4.009,298,3.041,299,2.709,300,2.709,301,2.709,302,4.009,303,1.465,304,1.86,305,2.709,306,3.005,307,1.86,308,2.753,309,2.709,310,2.709,311,2.709,312,2.709,313,2.709,314,2.709,315,2.709,316,2.709,317,2.314,318,2.709]],["title/modules/FileServiceModule.html",[0,1.079,177,1.95]],["body/modules/FileServiceModule.html",[0,1.796,2,1.741,3,1.849,4,2.099,5,2.099,6,1.849,7,2.842,8,3.032,12,0.022,13,2.729,14,2.099,15,2.099,16,0.279,17,0.25,18,0.361,20,2.248,21,0.53,22,0.625,23,2.417,24,1.178,29,0.279,30,0.145,31,0.015,32,0.015,60,1.551,66,2.248,146,2.017,158,3.638,159,1.968,160,2.853,177,3.844,182,2.922,232,3.709,234,4.121,235,2.615,267,3.151,319,3.549,320,3.549,321,3.549,322,4.189,323,4.155,324,4.155,325,4.155,326,5.401,327,4.155,328,2.922,329,2.099,330,3.549,331,3.549,332,2.853,333,4.155,334,4.155]],["title/injectables/FileServiceService.html",[57,1.204,158,1.822]],["body/injectables/FileServiceService.html",[12,0.022,16,0.127,17,0.114,18,0.335,21,0.4,22,0.285,24,0.538,29,0.127,30,0.066,31,0.009,32,0.009,37,0.217,38,0.962,39,2.554,41,0.958,44,0.908,46,1.921,47,1.399,48,0.88,49,1.921,55,1.763,57,1.017,63,0.898,64,0.75,67,1.103,68,1.142,71,2.579,72,2.248,73,1.479,79,1.697,80,2.385,82,2.294,88,1.785,89,1.943,95,2.908,96,3.146,98,1.761,105,0.817,106,2.004,116,3.435,117,2.204,118,0.774,136,0.898,154,2.417,158,1.538,159,2.91,162,1.026,169,1.438,171,1.438,185,1.026,187,1.302,189,1.194,191,2.998,193,1.103,196,1.943,203,0.898,214,2.781,224,1.62,227,2.416,235,3.867,240,3.258,261,2.308,287,1.438,288,3.73,291,2.601,298,3.311,322,2.97,329,0.958,330,1.62,331,1.62,335,1.62,336,3.814,337,2.619,338,3.044,339,3.044,340,3.044,341,3.044,342,3.044,343,2.601,344,3.044,345,1.896,346,3.044,347,3.044,348,1.896,349,3.258,350,3.044,351,1.896,352,3.044,353,5.903,354,1.896,355,3.009,356,3.044,357,1.896,358,3.044,359,1.896,360,1.896,361,3.73,362,3.73,363,1.896,364,2.308,365,3.044,366,2.09,367,1.896,368,3.044,369,3.044,370,1.896,371,3.044,372,1.896,373,2.09,374,2.401,375,1.026,376,1.302,377,1.896,378,3.871,379,1.896,380,2.063,381,1.896,382,1.103,383,1.62,384,1.302,385,1.62,386,1.771,387,1.62,388,1.438,389,1.62,390,5.576,391,1.896,392,1.896,393,1.896,394,1.896,395,3.044,396,3.044,397,2.601,398,3.044,399,1.896,400,1.896,401,1.896,402,2.601,403,1.896,404,3.044,405,1.896,406,1.896,407,1.896,408,1.896,409,1.896,410,1.62,411,1.62,412,1.896,413,3.044,414,3.814,415,3.044,416,2.601,417,3.044,418,1.896,419,1.896,420,1.896,421,3.044,422,1.896,423,1.896,424,1.896,425,1.896]],["title/classes/IsLoggedInException.html",[30,0.126,426,2.269]],["body/classes/IsLoggedInException.html",[12,0.021,16,0.36,17,0.321,18,0.321,21,0.399,22,0.805,29,0.36,30,0.187,31,0.018,32,0.018,41,3.398,44,0.805,68,1.601,103,1.601,426,3.977,427,4.57,428,5.397,429,5.744,430,5.349,431,5.349,432,5.349]],["title/classes/IsLoggedInExceptionFilter.html",[30,0.126,433,2.734]],["body/classes/IsLoggedInExceptionFilter.html",[12,0.021,16,0.327,17,0.292,18,0.292,21,0.481,22,0.731,29,0.327,30,0.17,31,0.017,32,0.017,37,0.555,38,1.885,44,0.731,46,1.622,47,1.106,48,0.685,49,1.622,55,1.536,59,2.3,60,1.814,68,1.454,69,3.468,73,1.169,76,2.3,103,1.454,303,3.489,426,4.233,433,4.521,434,4.093,435,4.149,436,4.891,437,4.521,438,4.891,439,5.1,440,4.857,441,3.683,442,4.149,443,4.857,444,3.683,445,4.149]],["title/guards/IsLoggedInGuard.html",[33,2.734,446,2.475]],["body/guards/IsLoggedInGuard.html",[12,0.021,16,0.327,17,0.293,18,0.293,21,0.481,22,0.733,29,0.327,30,0.17,31,0.017,32,0.017,35,3.693,37,0.556,38,1.888,40,5.238,44,0.733,46,1.626,47,1.109,48,0.686,49,1.626,51,4.528,52,5.105,54,4.16,55,1.539,58,2.827,60,1.818,68,1.458,69,3.474,73,1.172,75,3.693,79,2.167,80,1.925,88,1.818,89,2.167,101,4.1,426,3.758,442,4.16,446,4.1,447,4.16,448,4.869,449,4.869]],["title/classes/LoginDTO.html",[30,0.126,450,1.95]],["body/classes/LoginDTO.html",[12,0.022,16,0.119,17,0.107,18,0.107,21,0.215,29,0.283,30,0.173,31,0.008,32,0.008,37,0.203,44,0.435,48,0.514,98,1.654,99,1.46,103,0.532,105,0.776,117,0.703,118,0.734,119,1.818,120,4.604,123,1.818,126,1.818,128,1.119,138,3.725,139,4.058,140,1.119,141,1.119,142,1.034,143,1.034,196,0.791,380,0.961,450,1.563,451,1.119,452,2.502,453,2.502,454,3.176,455,1.777,456,3.403,457,3.403,458,1.777,459,1.22,460,1.22,461,0.961,462,1.681,463,0.961,464,3.737,465,3.403,466,1.681,467,1.681,468,1.984,469,1.46,470,0.898,471,1.22,472,1.22,473,1.034]],["title/classes/NotFoundExceptionFilter.html",[30,0.126,474,2.734]],["body/classes/NotFoundExceptionFilter.html",[12,0.021,16,0.328,17,0.293,18,0.293,21,0.446,22,0.734,29,0.328,30,0.171,31,0.017,32,0.017,37,0.557,38,1.89,44,0.734,46,1.63,47,1.112,48,0.688,49,1.63,55,1.543,59,2.312,60,1.823,68,1.461,69,3.479,73,1.175,76,2.312,103,1.461,303,3.497,374,4.241,434,4.106,436,4.902,437,4.534,438,4.902,439,5.109,441,3.702,444,3.702,474,4.534,475,4.17,476,4.881,477,4.881,478,4.881]],["title/classes/OrderModel.html",[30,0.126,479,2.475]],["body/classes/OrderModel.html",[12,0.021,16,0.237,17,0.211,18,0.211,21,0.411,24,0.998,29,0.419,30,0.123,31,0.014,32,0.014,37,0.402,44,1.01,47,0.801,48,1.007,50,2.442,63,1.666,64,1.911,68,1.447,73,1.163,89,2.772,95,2.457,96,2.289,98,1.808,103,1.053,105,1.298,106,2.314,117,2.349,118,1.636,189,3.475,192,3.791,193,3.458,195,4.051,200,3.741,204,3.475,205,3.741,208,4.507,210,2.812,211,4.149,212,3.212,213,2.215,214,2.812,215,2.416,216,2.215,217,2.215,221,2.668,222,2.668,223,2.215,225,2.215,386,3.212,479,3.319,480,2.215,481,4.186,482,4.716,483,4.186,484,3.518,485,3.518,486,3.518,487,2.442,488,3.518,489,3.518,490,4.186,491,3.518,492,3.518,493,3.518,494,3.665,495,4.129,496,3.518,497,3.518,498,3.518,499,3.665,500,3.006,501,3.006,502,3.518,503,2.416,504,3.006]],["title/controllers/OthersController.html",[144,1.346,505,2.475]],["body/controllers/OthersController.html",[12,0.021,16,0.348,17,0.311,18,0.311,21,0.462,22,0.779,29,0.348,30,0.181,31,0.018,32,0.018,37,0.591,38,1.959,44,0.779,55,1.637,118,1.317,144,2.314,146,1.934,148,3.26,155,3.26,156,3.26,446,3.556,505,4.256,506,4.424,507,6.873,508,5.179,509,5.179,510,3.928,511,5.179,512,5.179,513,5.179]],["title/modules/OthersModule.html",[0,1.079,514,2.269]],["body/modules/OthersModule.html",[0,1.898,2,2.254,7,2.547,12,0.021,16,0.362,17,0.323,18,0.323,21,0.472,22,0.809,29,0.362,30,0.188,31,0.018,32,0.018,146,2.367,505,4.628,514,3.99,515,5.379,516,5.379]],["title/controllers/PaymentController.html",[144,1.346,517,2.475]],["body/controllers/PaymentController.html",[12,0.022,16,0.281,17,0.251,18,0.251,21,0.492,22,0.629,29,0.281,30,0.146,31,0.016,32,0.016,37,0.478,38,1.715,39,2.247,44,0.629,46,1.397,47,1.235,48,0.589,49,1.397,55,1.322,59,3.016,60,1.561,72,1.752,73,1.305,76,3.125,82,2.025,88,1.561,102,4.374,106,2.273,107,4.113,108,3.171,115,2.632,118,1.063,136,1.98,144,1.561,146,1.561,148,2.632,154,2.568,162,2.262,296,2.871,303,2.262,304,2.871,306,3.789,307,2.871,308,3.724,376,2.871,483,3.171,517,3.724,518,3.572,519,4.181,520,5.423,521,4.181,522,5.423,523,4.181,524,4.133,525,4.181,526,4.181,527,3.256,528,3.572,529,4.181,530,4.181,531,4.181,532,3.572,533,4.181,534,4.181,535,4.181,536,4.181,537,4.181,538,4.181,539,4.181,540,3.572,541,4.181]],["title/modules/PaymentModule.html",[0,1.079,542,2.097]],["body/modules/PaymentModule.html",[0,1.855,2,1.864,3,1.98,4,2.248,5,2.248,6,1.98,7,2.935,8,3.132,12,0.022,13,2.851,14,2.248,15,2.248,16,0.299,17,0.267,18,0.267,20,2.406,21,0.527,22,0.669,23,2.588,24,1.261,29,0.299,30,0.156,31,0.016,32,0.016,136,2.107,146,2.107,328,3.053,329,2.248,332,3.054,503,3.875,517,4.256,527,3.933,528,3.8,542,4.062,543,3.8,544,3.8,545,3.8,546,4.448,547,4.448,548,4.448,549,3.373,550,3.8,551,3.283,552,4.448,553,4.448,554,4.448]],["title/injectables/PaymentService.html",[57,1.204,527,1.95]],["body/injectables/PaymentService.html",[12,0.022,16,0.162,17,0.145,18,0.145,21,0.451,22,0.363,24,0.684,29,0.162,30,0.084,31,0.011,32,0.011,37,0.275,38,1.162,39,2.512,41,1.218,43,3.695,44,0.933,46,1.885,47,1.378,48,0.906,49,1.885,55,1.694,57,1.227,63,1.142,64,0.953,67,1.403,71,3.133,72,2.65,73,1.492,79,1.635,80,1.968,82,2.4,88,2,95,2.384,96,1.74,98,1.737,105,0.987,106,1.865,107,3.775,108,4.796,115,1.518,117,0.953,118,1.132,136,1.142,154,2.537,162,1.304,185,1.304,196,1.073,203,1.142,227,1.218,278,2.06,329,1.218,337,3.056,366,2.523,373,2.523,374,2.313,375,1.304,378,1.828,380,1.304,384,1.656,386,3.284,387,2.06,388,1.828,389,2.06,479,1.656,481,3.775,482,3.802,483,1.828,487,1.218,490,1.828,494,2.786,527,1.988,532,3.139,540,2.06,549,1.828,550,2.06,555,2.06,556,4.451,557,3.375,558,3.674,559,3.674,560,3.674,561,3.674,562,2.411,563,4.977,564,3.674,565,3.674,566,3.674,567,2.411,568,3.674,569,2.411,570,3.674,571,2.411,572,3.674,573,2.411,574,3.674,575,2.411,576,3.674,577,2.411,578,2.786,579,2.411,580,3.674,581,1.828,582,2.411,583,4.252,584,2.411,585,2.411,586,2.411,587,4.451,588,2.411,589,4.451,590,4.451,591,2.411,592,2.411,593,2.411,594,4.451,595,2.411,596,3.674,597,2.411,598,3.674,599,2.411,600,2.411,601,2.06,602,2.411,603,3.674,604,2.411,605,2.411,606,2.411,607,2.411,608,2.411,609,2.411,610,2.411,611,2.411,612,2.411,613,3.674,614,2.411,615,2.06,616,2.411,617,2.411,618,2.411,619,2.411,620,2.411,621,2.411,622,2.06,623,2.411,624,2.411]],["title/controllers/PlansController.html",[144,1.346,625,2.475]],["body/controllers/PlansController.html",[12,0.022,16,0.206,17,0.184,18,0.184,21,0.459,22,0.461,29,0.206,30,0.107,31,0.013,32,0.013,34,1.547,37,0.35,38,1.386,39,2.464,44,0.841,46,1.71,47,1.166,48,0.722,49,1.71,55,1.767,58,3.002,59,3.171,60,1.143,72,1.283,73,1.525,74,3.688,76,3.271,82,2.087,88,1.143,98,1.302,112,3.724,118,1.421,144,1.143,146,1.143,148,1.927,155,1.927,156,1.927,157,2.102,162,1.656,165,3.838,262,2.615,263,3.324,271,2.615,273,4.374,274,3.324,275,3.744,276,2.615,277,3.324,281,2.615,283,2.615,284,1.927,287,2.321,290,2.615,296,3.01,303,2.371,304,3.01,306,3.519,307,3.01,308,3.838,317,2.615,382,1.781,386,2.979,510,2.321,524,3.516,601,2.615,625,3.01,626,2.615,627,3.061,628,4.383,629,4.383,630,5.12,631,5.59,632,3.061,633,3.061,634,3.061,635,3.061,636,3.061,637,3.061,638,3.061,639,3.061,640,3.061,641,3.061,642,3.061,643,2.55,644,2.615,645,2.615,646,2.102,647,2.615,648,3.061,649,3.061,650,3.061,651,3.061,652,2.615,653,3.061,654,3.061,655,4.383,656,3.061,657,3.061,658,3.061,659,3.744,660,3.061,661,4.383,662,3.061,663,3.061,664,3.061,665,2.615,666,3.061,667,3.061,668,3.061,669,3.061,670,3.061,671,3.061]],["title/modules/PlansModule.html",[0,1.079,672,2.269]],["body/modules/PlansModule.html",[0,1.865,2,1.886,3,2.002,4,2.273,5,2.273,6,2.002,7,2.951,8,2.273,12,0.021,13,2.872,14,2.273,15,2.273,16,0.302,17,0.27,18,0.27,20,3.075,21,0.528,22,0.677,23,2.618,24,1.276,29,0.302,30,0.157,31,0.016,32,0.016,66,2.434,136,2.131,146,2.122,182,3.075,328,3.075,329,2.273,332,3.089,542,4.011,551,3.307,625,4.278,643,4.011,644,3.844,672,4.458,673,3.844,674,3.844,675,4.499,676,4.499,677,4.499,678,3.844]],["title/injectables/PlansService.html",[57,1.204,643,2.097]],["body/injectables/PlansService.html",[12,0.022,16,0.182,17,0.163,18,0.163,21,0.455,22,0.408,24,0.769,29,0.182,30,0.095,31,0.012,32,0.012,37,0.31,38,1.269,39,2.391,41,1.371,43,3.007,44,0.888,46,1.764,47,1.344,48,0.903,49,1.764,55,1.51,57,1.34,63,1.285,64,1.072,67,1.578,68,0.812,71,2.982,72,2.559,73,1.47,79,2.126,80,2.414,82,2.28,88,1.972,95,2.79,96,2.795,98,1.628,105,1.078,106,2.002,112,3.324,114,3.623,115,3.007,116,2.78,117,2.333,118,1.02,133,1.707,136,1.285,154,1.901,162,1.467,185,1.467,193,1.578,196,1.786,203,1.901,214,2.78,227,2.028,284,2.526,329,1.371,337,3.281,355,1.707,361,4.511,362,4.511,364,3.044,373,2.756,374,2.526,375,1.467,378,2.057,382,1.578,383,2.317,384,1.863,385,2.317,386,3.072,416,2.317,481,2.057,487,1.371,527,2.857,557,3.623,578,3.044,583,3.429,615,4.815,622,2.317,643,2.335,645,2.317,659,2.317,679,2.317,680,3.044,681,4.777,682,4.013,683,2.712,684,2.712,685,4.013,686,4.013,687,2.712,688,2.712,689,2.712,690,4.013,691,2.712,692,2.712,693,2.712,694,4.082,695,2.712,696,2.712,697,2.712,698,2.712,699,2.712,700,2.317,701,4.013,702,2.712,703,2.712,704,2.712,705,2.712,706,2.712,707,2.712,708,2.712,709,2.712,710,2.712,711,2.712,712,2.712,713,2.712,714,2.712,715,2.712,716,2.712,717,4.013,718,2.712,719,4.013,720,2.712,721,2.712]],["title/interfaces/Request.html",[58,1.707,93,2.269]],["body/interfaces/Request.html",[12,0.022,16,0.278,17,0.248,18,0.248,21,0.502,22,0.621,24,1.171,29,0.278,30,0.144,31,0.015,32,0.015,34,2.086,36,3.131,37,0.471,39,1.541,40,4.079,41,2.086,43,3.385,48,0.893,50,2.718,51,3.131,52,4.079,56,3.131,57,1.796,58,2.833,59,1.955,60,2.008,61,3.129,62,3.131,63,1.955,64,1.632,65,4.352,66,2.233,67,2.402,68,1.236,69,2.402,70,3.131,71,2.086,72,1.73,73,1.44,74,2.402,75,3.131,76,1.955,77,3.527,78,3.131,79,1.837,80,1.632,81,4.32,82,1.541,83,3.527,84,3.527,85,3.527,86,3.131,87,3.527,88,1.541,89,1.837,90,3.527,91,3.527,92,3.527,93,2.599,94,4.806,95,1.837,96,1.955,97,3.527,98,1.368,99,2.086,100,3.527,101,2.835,105,1.444,366,3.693,722,4.128]],["title/injectables/S3Service.html",[57,1.204,322,2.097]],["body/injectables/S3Service.html",[12,0.021,16,0.241,17,0.215,18,0.398,21,0.365,22,0.539,29,0.241,30,0.125,31,0.014,32,0.014,37,0.409,38,1.547,39,2.553,44,0.901,46,1.861,47,1.269,48,0.884,49,1.861,55,1.762,56,3.711,57,1.634,68,1.668,71,2.816,72,2.336,73,0.862,80,1.935,82,1.338,88,2.081,98,1.714,105,1.314,117,1.416,154,2.639,185,1.938,191,3.827,235,3.946,284,3.08,298,2.717,322,2.847,343,3.061,349,5.116,355,2.255,366,3.36,410,4.761,411,5.528,524,2.46,723,3.061,724,6.471,725,4.893,726,4.893,727,4.893,728,4.893,729,3.583,730,4.893,731,3.583,732,4.893,733,3.583,734,4.893,735,4.893,736,4.893,737,4.893,738,4.893,739,4.893,740,4.893,741,4.893,742,4.893,743,4.893,744,4.893,745,4.893,746,3.583,747,3.061,748,3.061,749,5.573,750,5.573,751,4.761,752,3.583,753,3.583,754,3.583,755,3.583,756,3.583]],["title/classes/ServicePlansModel.html",[30,0.126,487,1.822]],["body/classes/ServicePlansModel.html",[12,0.021,16,0.229,17,0.204,18,0.204,21,0.404,24,0.965,29,0.428,30,0.119,31,0.014,32,0.014,37,0.389,44,1.002,47,1.334,48,1.016,64,1.867,68,1.414,73,1.136,89,3.079,98,1.774,103,1.019,105,1.268,106,2.273,114,4.113,115,3.414,116,3.155,117,2.633,118,1.619,133,3.414,189,3.414,192,3.724,193,3.408,195,4.009,200,4.31,203,2.568,204,4.009,205,3.414,210,2.747,211,4.111,212,3.155,213,2.141,215,2.336,216,2.141,217,2.141,218,3.242,219,3.242,223,2.141,225,2.141,226,2.336,227,1.719,376,2.336,382,1.979,487,2.386,551,1.979,751,2.906,757,2.141,758,3.402,759,3.402,760,3.402,761,3.402,762,3.402,763,3.402,764,3.402,765,3.402,766,3.581,767,3.581,768,4.034,769,4.034,770,3.402,771,3.581,772,2.906,773,3.402,774,2.906]],["title/classes/SignupDTO.html",[30,0.126,461,1.95]],["body/classes/SignupDTO.html",[12,0.022,16,0.115,17,0.103,18,0.103,21,0.209,29,0.276,30,0.17,31,0.008,32,0.008,37,0.195,44,0.535,48,0.579,98,1.655,99,1.414,103,0.512,105,0.751,117,0.676,118,0.903,119,1.761,120,4.599,123,2.236,126,2.236,128,1.076,138,3.68,139,4.024,140,1.076,141,1.076,142,0.994,143,0.994,196,0.76,380,0.924,450,0.924,451,1.076,452,2.451,453,2.451,454,3.111,456,3.527,457,3.527,459,1.173,460,1.173,461,1.514,462,2.389,463,0.924,464,3.68,465,3.341,466,1.628,467,1.628,468,1.921,469,1.414,470,0.863,471,1.173,472,1.173,473,0.994,775,1.709,776,1.709,777,1.709]],["title/classes/UnAuthenticatedException.html",[30,0.126,61,2.097]],["body/classes/UnAuthenticatedException.html",[12,0.021,16,0.36,17,0.321,18,0.321,21,0.399,22,0.805,29,0.36,30,0.187,31,0.018,32,0.018,41,3.398,44,0.805,61,3.676,68,1.601,103,1.601,428,5.397,429,5.744,778,4.57,779,5.349,780,5.349,781,5.349]],["title/classes/UnAuthenticatedExceptionFilter.html",[30,0.126,782,2.734]],["body/classes/UnAuthenticatedExceptionFilter.html",[12,0.021,16,0.327,17,0.292,18,0.292,21,0.481,22,0.731,29,0.327,30,0.17,31,0.017,32,0.017,37,0.555,38,1.885,44,0.731,46,1.622,47,1.106,48,0.685,49,1.622,55,1.536,59,2.3,60,1.814,61,3.913,62,3.683,68,1.454,69,3.468,73,1.169,76,2.3,103,1.454,303,3.489,434,4.093,436,4.891,437,4.521,438,4.891,439,5.1,441,3.683,444,3.683,782,4.521,783,4.149,784,4.857,785,4.857,786,4.857]],["title/controllers/UserController.html",[144,1.346,787,2.475]],["body/controllers/UserController.html",[12,0.022,16,0.295,17,0.141,18,0.217,21,0.434,22,0.354,29,0.158,30,0.082,31,0.01,32,0.01,34,1.189,37,0.269,38,1.14,39,2.501,41,1.189,44,0.841,46,1.867,47,1.273,48,0.788,49,1.867,55,1.768,58,3.262,59,3.109,60,0.879,71,1.822,72,1.511,73,1.445,74,4.049,76,3.222,78,2.735,79,1.047,80,0.93,81,2.27,82,2.386,86,1.784,88,1.835,89,2.187,118,1.422,144,1.346,146,0.879,154,2.328,155,1.481,156,1.481,157,1.616,158,1.822,159,1.114,160,1.616,163,1.784,165,3.011,167,2.01,168,2.01,169,1.784,170,2.01,171,1.784,172,2.01,263,1.784,277,2.735,296,3.375,303,2.659,304,3.375,306,3.779,307,3.375,308,4.123,388,1.784,445,3.081,450,2.867,452,2.372,453,2.659,461,2.867,462,2.098,463,2.867,470,2.678,510,1.784,524,4.671,646,1.616,647,2.01,652,4.199,665,2.01,680,3.325,787,2.476,788,2.01,789,3.606,790,4.199,791,3.606,792,4.199,793,4.384,794,2.353,795,2.353,796,2.353,797,2.353,798,2.353,799,2.353,800,2.353,801,3.606,802,2.353,803,2.353,804,2.353,805,2.353,806,2.353,807,3.606,808,2.353,809,2.353,810,2.353,811,2.353,812,3.606,813,3.606,814,2.551,815,2.01,816,2.01,817,2.353,818,2.353,819,3.606,820,3.606,821,3.606,822,3.606,823,3.606,824,3.606,825,2.353,826,2.353,827,2.353,828,2.353,829,2.353,830,2.353,831,3.606,832,3.606,833,3.606,834,2.353,835,2.353,836,2.353,837,2.353,838,2.353,839,2.353]],["title/classes/UserCreateDTO.html",[30,0.126,470,1.822]],["body/classes/UserCreateDTO.html",[12,0.022,16,0.099,17,0.089,18,0.089,21,0.184,29,0.252,30,0.158,31,0.007,32,0.007,37,0.168,44,0.759,48,0.74,98,1.657,99,1.894,103,0.441,105,0.665,117,0.979,118,1.283,119,2.014,120,4.593,123,2.359,126,3.026,128,1.558,138,3.506,139,3.888,140,0.928,141,0.928,142,0.858,143,0.858,196,1.102,380,1.339,450,0.797,451,0.928,452,2.26,453,2.26,454,2.869,456,3.301,457,3.301,459,1.012,460,1.012,461,0.797,462,2.181,463,0.797,464,3.916,465,3.603,466,2.181,467,2.181,468,2.197,469,1.894,470,1.251,471,1.7,472,1.012,473,1.861,840,1.474,841,1.474,842,1.474,843,1.474,844,1.474,845,1.474,846,1.474,847,1.474,848,1.474]],["title/classes/UserModel.html",[30,0.126,50,1.822]],["body/classes/UserModel.html",[12,0.021,16,0.228,17,0.204,18,0.204,21,0.404,24,0.963,29,0.393,30,0.119,31,0.014,32,0.014,37,0.388,44,1.017,47,0.773,48,1.019,50,2.383,64,1.343,65,2.332,68,1.906,73,1.135,89,2.906,98,1.873,99,2.738,101,4.02,103,1.017,105,1.266,106,2.271,118,1.719,182,1.837,195,4.255,200,3.685,203,2.566,204,2.969,205,3.685,210,2.744,211,4.308,212,3.152,213,2.138,223,2.138,225,2.138,226,2.332,227,1.716,402,4.029,452,2.931,453,2.931,466,3.152,467,3.152,469,2.738,473,3.152,766,3.576,849,2.332,850,5.418,851,3.396,852,4.716,853,3.396,854,3.396,855,3.396,856,3.396,857,3.396,858,4.716,859,3.396,860,3.396,861,3.396,862,3.396,863,3.396,864,3.576,865,2.901,866,2.901]],["title/modules/UserModule.html",[0,1.079,867,2.269]],["body/modules/UserModule.html",[0,1.861,2,1.877,3,1.993,4,2.263,5,2.263,6,1.993,7,2.944,8,2.263,12,0.021,13,2.864,14,2.263,15,2.263,16,0.301,17,0.269,18,0.341,20,3.066,21,0.527,22,0.674,23,2.606,24,1.27,29,0.301,30,0.157,31,0.016,32,0.016,66,2.423,136,2.121,146,2.116,159,2.121,177,3.725,182,3.066,183,3.396,328,3.066,329,2.263,332,3.075,551,3.297,787,4.269,814,4.006,815,3.826,867,4.454,868,3.826,869,4.478,870,3.826,871,4.478,872,4.478]],["title/injectables/UserService.html",[57,1.204,814,2.097]],["body/injectables/UserService.html",[12,0.022,16,0.166,17,0.148,18,0.148,21,0.465,22,0.371,24,0.699,29,0.166,30,0.086,31,0.011,32,0.011,37,0.282,38,1.182,39,2.5,43,3.724,44,0.917,46,1.807,47,1.232,48,0.879,49,1.807,50,1.246,55,1.711,57,1.248,63,1.168,64,0.975,66,1.334,67,1.435,70,2.834,71,3.153,72,2.615,73,1.577,79,2.633,80,2.339,81,3.927,82,2.447,88,1.685,95,1.097,96,2.886,98,1.773,99,1.888,105,1.004,106,1.033,118,1.147,133,1.552,136,1.168,154,2.137,185,1.334,196,1.097,203,1.168,227,1.246,250,3.193,261,3.818,329,1.246,337,3.099,364,2.834,373,2.566,374,2.352,375,1.334,382,1.435,452,3.297,453,3.497,462,3.313,466,2.174,467,2.174,469,1.888,470,2.544,473,2.174,487,1.246,557,3.422,578,2.834,581,2.834,680,2.834,694,4.302,700,2.107,790,3.193,792,3.193,814,2.174,816,2.107,873,2.107,874,4.513,875,3.737,876,3.737,877,3.737,878,2.466,879,3.737,880,2.466,881,3.737,882,2.466,883,3.737,884,2.466,885,2.466,886,3.737,887,2.466,888,2.466,889,2.466,890,2.466,891,3.193,892,5.035,893,4.513,894,5.035,895,5.035,896,3.737,897,3.737,898,2.466,899,5.411,900,2.466,901,2.466,902,2.466,903,2.466,904,2.466,905,2.466,906,2.466]],["title/classes/UserUpdateDTO.html",[30,0.126,463,1.95]],["body/classes/UserUpdateDTO.html",[12,0.022,16,0.111,17,0.099,18,0.099,21,0.203,29,0.271,30,0.167,31,0.008,32,0.008,37,0.189,44,0.606,48,0.627,98,1.658,99,2.034,103,0.495,105,0.731,117,0.654,118,1.024,119,1.714,120,4.601,123,1.041,126,2.534,128,1.041,138,3.642,139,3.995,140,1.041,141,1.041,142,0.962,143,0.962,196,0.736,380,0.895,450,0.895,451,1.041,452,1.879,453,1.879,454,2.765,456,3.057,457,3.057,459,1.136,460,1.136,461,0.895,462,1.585,463,1.474,464,4.058,465,3.765,466,2.342,467,2.342,468,2.384,469,2.034,470,0.836,471,1.136,472,1.136,473,0.962,907,1.654,908,1.654,909,1.654,910,1.654]],["title/classes/UsersPlanModel.html",[30,0.126,375,1.95]],["body/classes/UsersPlanModel.html",[12,0.021,16,0.25,17,0.223,18,0.223,21,0.423,24,1.053,29,0.427,30,0.13,31,0.014,32,0.014,37,0.424,44,0.984,47,0.845,48,0.99,63,1.758,64,1.982,68,1.501,73,1.206,81,2.337,89,2.975,95,2.526,96,2.374,98,1.663,103,1.111,105,1.346,106,2.379,118,1.545,189,3.572,192,3.897,193,3.955,195,3.825,200,4.116,203,2.688,204,3.572,205,3.825,208,4.608,210,2.916,211,3.995,212,3.302,213,2.337,214,2.916,215,2.549,216,2.337,217,2.337,218,3.442,219,3.442,220,3.801,223,2.337,225,2.337,226,2.549,227,1.876,328,2.008,375,3.288,382,2.16,384,3.897,386,3.302,487,2.533,911,2.337,912,3.712,913,3.712,914,3.712,915,3.712,916,3.712,917,3.712,918,3.801,919,3.172,920,3.172,921,3.712,922,3.172]],["title/modules/V1Module.html",[0,1.079,11,2.269]],["body/modules/V1Module.html",[0,1.832,2,1.815,3,1.927,4,2.188,5,2.188,6,1.927,7,2.05,8,2.188,11,4.63,12,0.021,13,2.803,14,2.188,15,2.188,16,0.291,17,0.26,18,0.333,20,3.001,21,0.517,22,0.651,29,0.291,30,0.151,31,0.016,32,0.016,159,2.05,173,4.296,177,3.693,183,3.283,514,4.296,542,3.971,672,4.296,678,3.699,867,4.296,923,3.699,924,3.699,925,4.329,926,4.329,927,4.329,928,4.329,929,4.329]],["title/coverage.html",[930,3.726]],["body/coverage.html",[6,1.425,12,0.021,18,0.192,30,0.248,31,0.013,32,0.013,33,3.431,34,1.618,36,3.431,48,0.451,50,1.618,57,2.086,58,1.516,61,1.863,80,1.266,93,2.015,102,2.198,104,2.735,112,2.015,113,2.735,144,2.332,145,2.198,147,2.735,158,1.618,159,2.143,178,2.015,182,1.732,186,2.735,187,2.198,188,3.304,196,3.324,228,2.428,232,2.198,234,2.198,235,3.304,236,2.735,322,1.863,328,1.732,335,2.735,375,1.732,426,2.015,427,2.735,433,2.428,434,3.604,435,2.735,446,2.198,447,2.735,450,1.732,451,3.591,461,1.732,463,1.732,470,1.618,474,2.428,475,2.735,479,2.198,480,3.304,487,1.618,499,2.428,503,2.198,505,2.198,506,2.735,517,2.198,518,2.735,527,1.732,551,1.863,555,2.735,625,2.198,626,2.735,643,1.863,646,2.198,679,2.735,723,2.735,757,3.304,771,2.428,778,2.735,782,2.428,783,2.735,787,2.198,788,2.735,814,1.863,849,3.604,864,2.428,873,2.735,911,3.304,918,2.428,930,2.428,931,3.201,932,3.201,933,3.201,934,6.67,935,5.248,936,2.735,937,3.201,938,6.96,939,6.018,940,6.838,941,4.525,942,5.248,943,2.735,944,4.525,945,3.201,946,5.248,947,4.525,948,3.201,949,3.201]],["title/dependencies.html",[3,1.929,950,2.574]],["body/dependencies.html",[3,2.156,12,0.022,22,0.729,24,1.374,30,0.208,31,0.017,32,0.017,60,2.222,64,1.915,94,3.674,142,2.819,143,2.819,216,3.05,217,3.05,267,3.674,549,3.674,581,3.674,747,4.139,748,4.139,891,4.139,951,4.845,952,4.845,953,4.845,954,5.952,955,4.845,956,4.845,957,4.845,958,4.845,959,4.845,960,4.845,961,4.845,962,4.845,963,4.845,964,4.845,965,4.845,966,4.845,967,4.845,968,4.845,969,4.845,970,4.845,971,4.845,972,4.845,973,4.845,974,4.845,975,4.845,976,4.845,977,4.845,978,4.845,979,4.845]],["title/miscellaneous/enumerations.html",[980,1.523,981,3.703]],["body/miscellaneous/enumerations.html",[12,0.021,31,0.017,32,0.017,37,0.535,133,3.668,188,2.947,203,3.298,218,4.781,219,4.781,220,5.035,221,4.419,222,4.419,355,4.655,480,2.947,490,4.419,494,4.419,495,4.979,757,2.947,767,4.419,768,4.979,769,4.979,911,2.947,980,2.366,981,4,982,3.551,983,4.419,984,3.551,985,3.551]],["title/miscellaneous/functions.html",[980,1.523,986,3.703]],["body/miscellaneous/functions.html",[6,3.07,12,0.019,31,0.019,32,0.019,37,0.65,936,4.863,980,2.876,986,4.863,987,5.692]],["title/index.html",[37,0.344,988,3.013,989,3.013]],["body/index.html",[12,0.021,17,0.273,31,0.016,32,0.016,274,3.444,397,3.879,469,2.295,767,3.444,930,3.444,990,4.541,991,4.541,992,5.717,993,4.541,994,4.541,995,4.541,996,4.541,997,4.541,998,4.541,999,6.257,1000,4.541,1001,4.541,1002,4.541,1003,6.257,1004,7.014,1005,4.541,1006,4.541,1007,4.541,1008,6.91,1009,4.541,1010,5.717,1011,4.541,1012,4.541,1013,4.541,1014,5.717,1015,5.717,1016,4.541,1017,4.541,1018,4.541,1019,5.717,1020,5.717,1021,4.541,1022,4.541,1023,4.541,1024,4.541,1025,4.541,1026,3.879,1027,4.541,1028,4.541,1029,4.541,1030,4.541,1031,4.541,1032,4.541,1033,4.541,1034,4.541,1035,4.541,1036,4.541,1037,3.879,1038,4.541,1039,4.541,1040,4.541,1041,4.541,1042,4.541,1043,4.541,1044,3.879]],["title/modules.html",[2,2.059]],["body/modules.html",[1,3.575,2,2.182,11,3.277,12,0.018,31,0.018,32,0.018,173,3.277,177,2.817,514,3.277,542,3.029,672,3.277,867,3.277,1026,6.166,1045,7.218,1046,7.218,1047,7.276,1048,5.207,1049,5.207]],["title/overview.html",[1050,4.198]],["body/overview.html",[0,1.203,1,4.307,2,1.684,3,1.788,4,2.03,5,2.03,6,1.788,7,1.903,8,2.03,9,3.432,10,3.432,11,4.575,12,0.021,13,2.67,14,2.03,15,2.03,31,0.015,32,0.015,35,3.047,93,2.529,103,1.203,146,1.5,158,3.445,173,4.292,174,3.432,175,3.432,176,3.432,177,3.852,178,3.716,185,2.174,319,3.432,320,3.432,321,3.432,322,3.967,380,2.174,514,3.716,527,3.689,542,3.967,543,3.432,544,3.432,545,3.432,643,3.435,672,4.292,673,3.432,674,3.432,814,3.435,867,4.292,868,3.432,870,3.432,923,3.432,924,3.432,1050,3.432,1051,4.018,1052,5.284,1053,4.018,1054,4.018]],["title/properties.html",[105,1.164,950,2.574]],["body/properties.html",[12,0.021,31,0.019,32,0.019,105,1.515,469,2.851,1037,4.821,1044,4.821,1055,5.643,1056,5.643,1057,5.643]],["title/miscellaneous/typealiases.html",[980,1.523,1058,4.334]],["body/miscellaneous/typealiases.html",[12,0.018,31,0.018,32,0.018,37,0.613,48,0.756,65,4.345,188,3.376,214,3.916,230,5.406,376,4.345,480,3.376,501,5.406,757,3.376,766,4.799,849,3.683,911,3.376,920,5.406,980,2.71,982,4.068,983,4.068,984,4.068,985,4.068,1059,5.364,1060,4.582]],["title/miscellaneous/variables.html",[980,1.523,1061,3.703]],["body/miscellaneous/variables.html",[12,0.022,31,0.015,32,0.015,37,0.451,39,1.476,47,1.476,48,0.914,68,2.126,73,1.41,79,1.759,80,2.067,82,1.476,182,2.828,188,2.488,210,3.771,212,3.771,228,4.441,229,3.377,232,3.589,233,3.377,284,3.29,306,2.488,328,2.828,355,4.469,480,2.488,499,4.441,500,3.377,503,3.589,504,3.377,551,3.041,646,3.589,757,2.488,771,4.441,772,3.377,774,3.377,849,2.714,864,4.441,865,3.377,866,3.377,911,2.488,918,4.441,919,3.377,922,3.377,943,3.377,980,1.997,982,3.964,983,3.964,984,3.964,985,3.964,1060,4.466,1061,3.377,1062,3.953,1063,3.953,1064,3.953,1065,3.953,1066,3.953,1067,5.227,1068,3.953,1069,3.953,1070,3.953,1071,3.953,1072,3.953,1073,3.953]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthenticateGuard.html":{},"classes/CallBackDTO.html":{},"classes/CreatePlanDTO.html":{},"controllers/DashboardController.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"classes/FileModel.html":{},"controllers/FileServiceController.html":{},"modules/FileServiceModule.html":{},"injectables/FileServiceService.html":{},"classes/IsLoggedInException.html":{},"classes/IsLoggedInExceptionFilter.html":{},"guards/IsLoggedInGuard.html":{},"classes/LoginDTO.html":{},"classes/NotFoundExceptionFilter.html":{},"classes/OrderModel.html":{},"controllers/OthersController.html":{},"modules/OthersModule.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"controllers/PlansController.html":{},"modules/PlansModule.html":{},"injectables/PlansService.html":{},"interfaces/Request.html":{},"injectables/S3Service.html":{},"classes/ServicePlansModel.html":{},"classes/SignupDTO.html":{},"classes/UnAuthenticatedException.html":{},"classes/UnAuthenticatedExceptionFilter.html":{},"controllers/UserController.html":{},"classes/UserCreateDTO.html":{},"classes/UserModel.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/UserUpdateDTO.html":{},"classes/UsersPlanModel.html":{},"modules/V1Module.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":196,"title":{},"body":{"classes/FileModel.html":{},"injectables/FileServiceService.html":{},"classes/LoginDTO.html":{},"injectables/PaymentService.html":{},"injectables/PlansService.html":{},"classes/SignupDTO.html":{},"classes/UserCreateDTO.html":{},"injectables/UserService.html":{},"classes/UserUpdateDTO.html":{},"coverage.html":{}}}],["0.0.1",{"_index":1056,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":977,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":961,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":960,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":938,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":941,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":945,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":934,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":935,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":947,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":946,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":944,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":942,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":939,"title":{},"body":{"coverage.html":{}}}],["033ddgevolakgllu",{"_index":745,"title":{},"body":{"injectables/S3Service.html":{}}}],["1",{"_index":380,"title":{},"body":{"injectables/FileServiceService.html":{},"classes/LoginDTO.html":{},"injectables/PaymentService.html":{},"classes/SignupDTO.html":{},"classes/UserCreateDTO.html":{},"classes/UserUpdateDTO.html":{},"overview.html":{}}}],["1.17.3",{"_index":965,"title":{},"body":{"dependencies.html":{}}}],["1.6.2",{"_index":958,"title":{},"body":{"dependencies.html":{}}}],["1.7.4",{"_index":972,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":364,"title":{},"body":{"injectables/FileServiceService.html":{},"injectables/PlansService.html":{},"injectables/UserService.html":{}}}],["10.0.0",{"_index":954,"title":{},"body":{"dependencies.html":{}}}],["10.0.2",{"_index":955,"title":{},"body":{"dependencies.html":{}}}],["10.2.9",{"_index":952,"title":{},"body":{"dependencies.html":{}}}],["1024",{"_index":288,"title":{},"body":{"controllers/FileServiceController.html":{},"injectables/FileServiceService.html":{}}}],["1024)).tofixed(2",{"_index":289,"title":{},"body":{"controllers/FileServiceController.html":{}}}],["16",{"_index":1053,"title":{},"body":{"overview.html":{}}}],["2",{"_index":1054,"title":{},"body":{"overview.html":{}}}],["2.1525.0",{"_index":956,"title":{},"body":{"dependencies.html":{}}}],["2.29.4",{"_index":971,"title":{},"body":{"dependencies.html":{}}}],["3.0.0",{"_index":970,"title":{},"body":{"dependencies.html":{}}}],["3.0.1",{"_index":951,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":974,"title":{},"body":{"dependencies.html":{}}}],["3cc3d2994d87",{"_index":743,"title":{},"body":{"injectables/S3Service.html":{}}}],["401",{"_index":781,"title":{},"body":{"classes/UnAuthenticatedException.html":{}}}],["403",{"_index":432,"title":{},"body":{"classes/IsLoggedInException.html":{}}}],["46ad",{"_index":741,"title":{},"body":{"injectables/S3Service.html":{}}}],["5.1.1",{"_index":959,"title":{},"body":{"dependencies.html":{}}}],["5.3.2",{"_index":967,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":1052,"title":{},"body":{"overview.html":{}}}],["7.1.0",{"_index":964,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":979,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":1051,"title":{},"body":{"overview.html":{}}}],["94ae",{"_index":740,"title":{},"body":{"injectables/S3Service.html":{}}}],["_id",{"_index":416,"title":{},"body":{"injectables/FileServiceService.html":{},"injectables/PlansService.html":{}}}],["aa52",{"_index":742,"title":{},"body":{"injectables/S3Service.html":{}}}],["access",{"_index":97,"title":{},"body":{"guards/AuthenticateGuard.html":{},"interfaces/Request.html":{}}}],["accesskeyid",{"_index":744,"title":{},"body":{"injectables/S3Service.html":{}}}],["activatestarterplans",{"_index":875,"title":{},"body":{"injectables/UserService.html":{}}}],["activatestarterplans(userid",{"_index":877,"title":{},"body":{"injectables/UserService.html":{}}}],["active",{"_index":218,"title":{},"body":{"classes/FileModel.html":{},"classes/ServicePlansModel.html":{},"classes/UsersPlanModel.html":{},"miscellaneous/enumerations.html":{}}}],["alert",{"_index":294,"title":{},"body":{"controllers/FileServiceController.html":{}}}],["aliases",{"_index":1059,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["amazing",{"_index":1027,"title":{},"body":{"index.html":{}}}],["amount",{"_index":481,"title":{},"body":{"classes/OrderModel.html":{},"injectables/PaymentService.html":{},"injectables/PlansService.html":{}}}],["any).destroy",{"_index":839,"title":{},"body":{"controllers/UserController.html":{}}}],["app",{"_index":1006,"title":{},"body":{"index.html":{}}}],["applications",{"_index":998,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["argumentshost",{"_index":439,"title":{},"body":{"classes/IsLoggedInExceptionFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"classes/UnAuthenticatedExceptionFilter.html":{}}}],["array",{"_index":858,"title":{},"body":{"classes/UserModel.html":{}}}],["array.isarray(e.response.message",{"_index":307,"title":{},"body":{"controllers/FileServiceController.html":{},"controllers/PaymentController.html":{},"controllers/PlansController.html":{},"controllers/UserController.html":{}}}],["async",{"_index":39,"title":{},"body":{"guards/AuthenticateGuard.html":{},"controllers/DashboardController.html":{},"controllers/FileServiceController.html":{},"injectables/FileServiceService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/PlansController.html":{},"injectables/PlansService.html":{},"interfaces/Request.html":{},"injectables/S3Service.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["authenticateguard",{"_index":34,"title":{"guards/AuthenticateGuard.html":{}},"body":{"guards/AuthenticateGuard.html":{},"controllers/DashboardController.html":{},"controllers/FileServiceController.html":{},"controllers/PlansController.html":{},"interfaces/Request.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["author",{"_index":1037,"title":{},"body":{"index.html":{},"properties.html":{}}}],["available",{"_index":1049,"title":{},"body":{"modules.html":{}}}],["await",{"_index":82,"title":{},"body":{"guards/AuthenticateGuard.html":{},"controllers/DashboardController.html":{},"controllers/FileServiceController.html":{},"injectables/FileServiceService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/PlansController.html":{},"injectables/PlansService.html":{},"interfaces/Request.html":{},"injectables/S3Service.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["aws",{"_index":747,"title":{},"body":{"injectables/S3Service.html":{},"dependencies.html":{}}}],["axios",{"_index":957,"title":{},"body":{"dependencies.html":{}}}],["backers",{"_index":1028,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":261,"title":{},"body":{"controllers/FileServiceController.html":{},"injectables/FileServiceService.html":{},"injectables/UserService.html":{}}}],["badrequestexception(errors",{"_index":1073,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bank",{"_index":519,"title":{},"body":{"controllers/PaymentController.html":{}}}],["banktoken",{"_index":482,"title":{},"body":{"classes/OrderModel.html":{},"injectables/PaymentService.html":{}}}],["baseurl",{"_index":553,"title":{},"body":{"modules/PaymentModule.html":{}}}],["bcrypt",{"_index":891,"title":{},"body":{"injectables/UserService.html":{},"dependencies.html":{}}}],["bcrypt.compare(password",{"_index":900,"title":{},"body":{"injectables/UserService.html":{}}}],["bcrypt.hash(password",{"_index":896,"title":{},"body":{"injectables/UserService.html":{}}}],["body",{"_index":524,"title":{},"body":{"controllers/PaymentController.html":{},"controllers/PlansController.html":{},"injectables/S3Service.html":{},"controllers/UserController.html":{}}}],["boolean",{"_index":101,"title":{},"body":{"guards/AuthenticateGuard.html":{},"guards/IsLoggedInGuard.html":{},"interfaces/Request.html":{},"classes/UserModel.html":{}}}],["bootstrap",{"_index":6,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"modules/FileServiceModule.html":{},"modules/PaymentModule.html":{},"modules/PlansModule.html":{},"modules/UserModule.html":{},"modules/V1Module.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":1047,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1045,"title":{},"body":{"modules.html":{}}}],["bucket",{"_index":750,"title":{},"body":{"injectables/S3Service.html":{}}}],["buffer",{"_index":298,"title":{},"body":{"controllers/FileServiceController.html":{},"injectables/FileServiceService.html":{},"injectables/S3Service.html":{}}}],["building",{"_index":993,"title":{},"body":{"index.html":{}}}],["byte",{"_index":398,"title":{},"body":{"injectables/FileServiceService.html":{}}}],["c5107f54",{"_index":739,"title":{},"body":{"injectables/S3Service.html":{}}}],["callback",{"_index":520,"title":{},"body":{"controllers/PaymentController.html":{}}}],["callback(@query",{"_index":530,"title":{},"body":{"controllers/PaymentController.html":{}}}],["callback(body",{"_index":521,"title":{},"body":{"controllers/PaymentController.html":{}}}],["callbackdto",{"_index":102,"title":{"classes/CallBackDTO.html":{}},"body":{"classes/CallBackDTO.html":{},"controllers/PaymentController.html":{},"coverage.html":{}}}],["callbackurl",{"_index":591,"title":{},"body":{"injectables/PaymentService.html":{}}}],["canactivate",{"_index":40,"title":{},"body":{"guards/AuthenticateGuard.html":{},"guards/IsLoggedInGuard.html":{},"interfaces/Request.html":{}}}],["canactivate(context",{"_index":51,"title":{},"body":{"guards/AuthenticateGuard.html":{},"guards/IsLoggedInGuard.html":{},"interfaces/Request.html":{}}}],["catch",{"_index":303,"title":{},"body":{"controllers/FileServiceController.html":{},"classes/IsLoggedInExceptionFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"controllers/PaymentController.html":{},"controllers/PlansController.html":{},"classes/UnAuthenticatedExceptionFilter.html":{},"controllers/UserController.html":{}}}],["catch(exception",{"_index":437,"title":{},"body":{"classes/IsLoggedInExceptionFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"classes/UnAuthenticatedExceptionFilter.html":{}}}],["catch(isloggedinexception",{"_index":443,"title":{},"body":{"classes/IsLoggedInExceptionFilter.html":{}}}],["catch(notfoundexception",{"_index":477,"title":{},"body":{"classes/NotFoundExceptionFilter.html":{}}}],["catch(unauthenticatedexception",{"_index":785,"title":{},"body":{"classes/UnAuthenticatedExceptionFilter.html":{}}}],["class",{"_index":30,"title":{"classes/CallBackDTO.html":{},"classes/CreatePlanDTO.html":{},"classes/FileModel.html":{},"classes/IsLoggedInException.html":{},"classes/IsLoggedInExceptionFilter.html":{},"classes/LoginDTO.html":{},"classes/NotFoundExceptionFilter.html":{},"classes/OrderModel.html":{},"classes/ServicePlansModel.html":{},"classes/SignupDTO.html":{},"classes/UnAuthenticatedException.html":{},"classes/UnAuthenticatedExceptionFilter.html":{},"classes/UserCreateDTO.html":{},"classes/UserModel.html":{},"classes/UserUpdateDTO.html":{},"classes/UsersPlanModel.html":{}},"body":{"modules/AppModule.html":{},"guards/AuthenticateGuard.html":{},"classes/CallBackDTO.html":{},"classes/CreatePlanDTO.html":{},"controllers/DashboardController.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"classes/FileModel.html":{},"controllers/FileServiceController.html":{},"modules/FileServiceModule.html":{},"injectables/FileServiceService.html":{},"classes/IsLoggedInException.html":{},"classes/IsLoggedInExceptionFilter.html":{},"guards/IsLoggedInGuard.html":{},"classes/LoginDTO.html":{},"classes/NotFoundExceptionFilter.html":{},"classes/OrderModel.html":{},"controllers/OthersController.html":{},"modules/OthersModule.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"controllers/PlansController.html":{},"modules/PlansModule.html":{},"injectables/PlansService.html":{},"interfaces/Request.html":{},"injectables/S3Service.html":{},"classes/ServicePlansModel.html":{},"classes/SignupDTO.html":{},"classes/UnAuthenticatedException.html":{},"classes/UnAuthenticatedExceptionFilter.html":{},"controllers/UserController.html":{},"classes/UserCreateDTO.html":{},"classes/UserModel.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/UserUpdateDTO.html":{},"classes/UsersPlanModel.html":{},"modules/V1Module.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":103,"title":{},"body":{"classes/CallBackDTO.html":{},"classes/CreatePlanDTO.html":{},"classes/FileModel.html":{},"classes/IsLoggedInException.html":{},"classes/IsLoggedInExceptionFilter.html":{},"classes/LoginDTO.html":{},"classes/NotFoundExceptionFilter.html":{},"classes/OrderModel.html":{},"classes/ServicePlansModel.html":{},"classes/SignupDTO.html":{},"classes/UnAuthenticatedException.html":{},"classes/UnAuthenticatedExceptionFilter.html":{},"classes/UserCreateDTO.html":{},"classes/UserModel.html":{},"classes/UserUpdateDTO.html":{},"classes/UsersPlanModel.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":9,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_dashboardmodule",{"_index":174,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_dashboardmodule_imports",{"_index":175,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_dashboardmodule_providers",{"_index":176,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_fileservicemodule",{"_index":319,"title":{},"body":{"modules/FileServiceModule.html":{},"overview.html":{}}}],["cluster_fileservicemodule_exports",{"_index":321,"title":{},"body":{"modules/FileServiceModule.html":{},"overview.html":{}}}],["cluster_fileservicemodule_providers",{"_index":320,"title":{},"body":{"modules/FileServiceModule.html":{},"overview.html":{}}}],["cluster_paymentmodule",{"_index":543,"title":{},"body":{"modules/PaymentModule.html":{},"overview.html":{}}}],["cluster_paymentmodule_exports",{"_index":544,"title":{},"body":{"modules/PaymentModule.html":{},"overview.html":{}}}],["cluster_paymentmodule_providers",{"_index":545,"title":{},"body":{"modules/PaymentModule.html":{},"overview.html":{}}}],["cluster_plansmodule",{"_index":673,"title":{},"body":{"modules/PlansModule.html":{},"overview.html":{}}}],["cluster_plansmodule_imports",{"_index":675,"title":{},"body":{"modules/PlansModule.html":{}}}],["cluster_plansmodule_providers",{"_index":674,"title":{},"body":{"modules/PlansModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":868,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":869,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_providers",{"_index":870,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_v1module",{"_index":923,"title":{},"body":{"modules/V1Module.html":{},"overview.html":{}}}],["cluster_v1module_imports",{"_index":924,"title":{},"body":{"modules/V1Module.html":{},"overview.html":{}}}],["collection",{"_index":223,"title":{},"body":{"classes/FileModel.html":{},"classes/OrderModel.html":{},"classes/ServicePlansModel.html":{},"classes/UserModel.html":{},"classes/UsersPlanModel.html":{}}}],["component/guards/authenticate.guard",{"_index":157,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/FileServiceController.html":{},"controllers/PlansController.html":{},"controllers/UserController.html":{}}}],["component/guards/isloggedin.guard",{"_index":511,"title":{},"body":{"controllers/OthersController.html":{}}}],["confirm",{"_index":494,"title":{},"body":{"classes/OrderModel.html":{},"injectables/PaymentService.html":{},"miscellaneous/enumerations.html":{}}}],["confirm(trackid",{"_index":566,"title":{},"body":{"injectables/PaymentService.html":{}}}],["confirmpassword",{"_index":462,"title":{},"body":{"classes/LoginDTO.html":{},"classes/SignupDTO.html":{},"controllers/UserController.html":{},"classes/UserCreateDTO.html":{},"injectables/UserService.html":{},"classes/UserUpdateDTO.html":{}}}],["conflictexception",{"_index":694,"title":{},"body":{"injectables/PlansService.html":{},"injectables/UserService.html":{}}}],["connect",{"_index":962,"title":{},"body":{"dependencies.html":{}}}],["console.log(e",{"_index":305,"title":{},"body":{"controllers/FileServiceController.html":{}}}],["const",{"_index":73,"title":{},"body":{"guards/AuthenticateGuard.html":{},"classes/FileModel.html":{},"controllers/FileServiceController.html":{},"injectables/FileServiceService.html":{},"classes/IsLoggedInExceptionFilter.html":{},"guards/IsLoggedInGuard.html":{},"classes/NotFoundExceptionFilter.html":{},"classes/OrderModel.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/PlansController.html":{},"injectables/PlansService.html":{},"interfaces/Request.html":{},"injectables/S3Service.html":{},"classes/ServicePlansModel.html":{},"classes/UnAuthenticatedExceptionFilter.html":{},"controllers/UserController.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{},"classes/UsersPlanModel.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":41,"title":{},"body":{"guards/AuthenticateGuard.html":{},"injectables/FileServiceService.html":{},"classes/IsLoggedInException.html":{},"injectables/PaymentService.html":{},"injectables/PlansService.html":{},"interfaces/Request.html":{},"classes/UnAuthenticatedException.html":{},"controllers/UserController.html":{}}}],["constructor(ipg",{"_index":562,"title":{},"body":{"injectables/PaymentService.html":{}}}],["constructor(ipgservice",{"_index":683,"title":{},"body":{"injectables/PlansService.html":{}}}],["constructor(private",{"_index":162,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/FileServiceController.html":{},"injectables/FileServiceService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/PlansController.html":{},"injectables/PlansService.html":{}}}],["constructor(s3service",{"_index":345,"title":{},"body":{"injectables/FileServiceService.html":{}}}],["constructor(usermodel",{"_index":42,"title":{},"body":{"guards/AuthenticateGuard.html":{}}}],["contentlength",{"_index":752,"title":{},"body":{"injectables/S3Service.html":{}}}],["contenttype",{"_index":753,"title":{},"body":{"injectables/S3Service.html":{}}}],["context",{"_index":54,"title":{},"body":{"guards/AuthenticateGuard.html":{},"guards/IsLoggedInGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":75,"title":{},"body":{"guards/AuthenticateGuard.html":{},"guards/IsLoggedInGuard.html":{},"interfaces/Request.html":{}}}],["context.switchtohttp().getresponse",{"_index":77,"title":{},"body":{"guards/AuthenticateGuard.html":{},"interfaces/Request.html":{}}}],["controller",{"_index":144,"title":{"controllers/DashboardController.html":{},"controllers/FileServiceController.html":{},"controllers/OthersController.html":{},"controllers/PaymentController.html":{},"controllers/PlansController.html":{},"controllers/UserController.html":{}},"body":{"controllers/DashboardController.html":{},"controllers/FileServiceController.html":{},"controllers/OthersController.html":{},"controllers/PaymentController.html":{},"controllers/PlansController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('/bank",{"_index":529,"title":{},"body":{"controllers/PaymentController.html":{}}}],["controller('/v1.0/files",{"_index":268,"title":{},"body":{"controllers/FileServiceController.html":{}}}],["controller('v1.0/dashboard",{"_index":161,"title":{},"body":{"controllers/DashboardController.html":{}}}],["controller('v1.0/plans",{"_index":648,"title":{},"body":{"controllers/PlansController.html":{}}}],["controllers",{"_index":146,"title":{},"body":{"controllers/DashboardController.html":{},"modules/DashboardModule.html":{},"controllers/FileServiceController.html":{},"modules/FileServiceModule.html":{},"controllers/OthersController.html":{},"modules/OthersModule.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"controllers/PlansController.html":{},"modules/PlansModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["convertedclass",{"_index":1065,"title":{},"body":{"miscellaneous/variables.html":{}}}],["converttomb",{"_index":353,"title":{},"body":{"injectables/FileServiceService.html":{}}}],["coverage",{"_index":930,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":680,"title":{},"body":{"injectables/PlansService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["create(body",{"_index":794,"title":{},"body":{"controllers/UserController.html":{}}}],["create(data",{"_index":686,"title":{},"body":{"injectables/PlansService.html":{}}}],["create(id",{"_index":879,"title":{},"body":{"injectables/UserService.html":{}}}],["createdat",{"_index":189,"title":{},"body":{"classes/FileModel.html":{},"injectables/FileServiceService.html":{},"classes/OrderModel.html":{},"classes/ServicePlansModel.html":{},"classes/UsersPlanModel.html":{}}}],["createduser",{"_index":905,"title":{},"body":{"injectables/UserService.html":{}}}],["createplan",{"_index":628,"title":{},"body":{"controllers/PlansController.html":{}}}],["createplan(@body",{"_index":651,"title":{},"body":{"controllers/PlansController.html":{}}}],["createplan(body",{"_index":632,"title":{},"body":{"controllers/PlansController.html":{}}}],["createplandto",{"_index":112,"title":{"classes/CreatePlanDTO.html":{}},"body":{"classes/CreatePlanDTO.html":{},"controllers/PlansController.html":{},"injectables/PlansService.html":{},"coverage.html":{}}}],["createreadstream",{"_index":755,"title":{},"body":{"injectables/S3Service.html":{}}}],["createusererrors",{"_index":836,"title":{},"body":{"controllers/UserController.html":{}}}],["credentials",{"_index":737,"title":{},"body":{"injectables/S3Service.html":{}}}],["dashboard.controller",{"_index":180,"title":{},"body":{"modules/DashboardModule.html":{}}}],["dashboard.service",{"_index":181,"title":{},"body":{"modules/DashboardModule.html":{}}}],["dashboard/dashboard.module",{"_index":927,"title":{},"body":{"modules/V1Module.html":{}}}],["dashboardcontroller",{"_index":145,"title":{"controllers/DashboardController.html":{}},"body":{"controllers/DashboardController.html":{},"modules/DashboardModule.html":{},"coverage.html":{}}}],["dashboardmodule",{"_index":173,"title":{"modules/DashboardModule.html":{}},"body":{"modules/DashboardModule.html":{},"modules/V1Module.html":{},"modules.html":{},"overview.html":{}}}],["dashboardservice",{"_index":178,"title":{"injectables/DashboardService.html":{}},"body":{"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"coverage.html":{},"overview.html":{}}}],["data",{"_index":284,"title":{},"body":{"controllers/FileServiceController.html":{},"controllers/PlansController.html":{},"injectables/PlansService.html":{},"injectables/S3Service.html":{},"miscellaneous/variables.html":{}}}],["date",{"_index":193,"title":{},"body":{"classes/FileModel.html":{},"injectables/FileServiceService.html":{},"classes/OrderModel.html":{},"injectables/PlansService.html":{},"classes/ServicePlansModel.html":{},"classes/UsersPlanModel.html":{}}}],["date().gettime",{"_index":704,"title":{},"body":{"injectables/PlansService.html":{}}}],["date(plan.expiredat).gettime",{"_index":705,"title":{},"body":{"injectables/PlansService.html":{}}}],["day",{"_index":619,"title":{},"body":{"injectables/PaymentService.html":{}}}],["declarations",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"modules/FileServiceModule.html":{},"modules/PaymentModule.html":{},"modules/PlansModule.html":{},"modules/UserModule.html":{},"modules/V1Module.html":{},"overview.html":{}}}],["declare",{"_index":90,"title":{},"body":{"guards/AuthenticateGuard.html":{},"interfaces/Request.html":{}}}],["decorators",{"_index":118,"title":{},"body":{"classes/CreatePlanDTO.html":{},"controllers/DashboardController.html":{},"classes/FileModel.html":{},"controllers/FileServiceController.html":{},"injectables/FileServiceService.html":{},"classes/LoginDTO.html":{},"classes/OrderModel.html":{},"controllers/OthersController.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/PlansController.html":{},"injectables/PlansService.html":{},"classes/ServicePlansModel.html":{},"classes/SignupDTO.html":{},"controllers/UserController.html":{},"classes/UserCreateDTO.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{},"classes/UserUpdateDTO.html":{},"classes/UsersPlanModel.html":{}}}],["default",{"_index":68,"title":{},"body":{"guards/AuthenticateGuard.html":{},"classes/FileModel.html":{},"injectables/FileServiceService.html":{},"classes/IsLoggedInException.html":{},"classes/IsLoggedInExceptionFilter.html":{},"guards/IsLoggedInGuard.html":{},"classes/NotFoundExceptionFilter.html":{},"classes/OrderModel.html":{},"injectables/PlansService.html":{},"interfaces/Request.html":{},"injectables/S3Service.html":{},"classes/ServicePlansModel.html":{},"classes/UnAuthenticatedException.html":{},"classes/UnAuthenticatedExceptionFilter.html":{},"classes/UserModel.html":{},"classes/UsersPlanModel.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":44,"title":{},"body":{"guards/AuthenticateGuard.html":{},"classes/CallBackDTO.html":{},"classes/CreatePlanDTO.html":{},"controllers/DashboardController.html":{},"classes/FileModel.html":{},"controllers/FileServiceController.html":{},"injectables/FileServiceService.html":{},"classes/IsLoggedInException.html":{},"classes/IsLoggedInExceptionFilter.html":{},"guards/IsLoggedInGuard.html":{},"classes/LoginDTO.html":{},"classes/NotFoundExceptionFilter.html":{},"classes/OrderModel.html":{},"controllers/OthersController.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/PlansController.html":{},"injectables/PlansService.html":{},"injectables/S3Service.html":{},"classes/ServicePlansModel.html":{},"classes/SignupDTO.html":{},"classes/UnAuthenticatedException.html":{},"classes/UnAuthenticatedExceptionFilter.html":{},"controllers/UserController.html":{},"classes/UserCreateDTO.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{},"classes/UserUpdateDTO.html":{},"classes/UsersPlanModel.html":{}}}],["delete",{"_index":338,"title":{},"body":{"injectables/FileServiceService.html":{}}}],["delete(filetoken",{"_index":347,"title":{},"body":{"injectables/FileServiceService.html":{}}}],["deleted",{"_index":219,"title":{},"body":{"classes/FileModel.html":{},"classes/ServicePlansModel.html":{},"classes/UsersPlanModel.html":{},"miscellaneous/enumerations.html":{}}}],["deletefile",{"_index":238,"title":{},"body":{"controllers/FileServiceController.html":{}}}],["deletefile(fileid",{"_index":243,"title":{},"body":{"controllers/FileServiceController.html":{}}}],["deleteobject",{"_index":756,"title":{},"body":{"injectables/S3Service.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"modules/FileServiceModule.html":{},"modules/PaymentModule.html":{},"modules/PlansModule.html":{},"modules/UserModule.html":{},"modules/V1Module.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":469,"title":{},"body":{"classes/LoginDTO.html":{},"classes/SignupDTO.html":{},"classes/UserCreateDTO.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{},"classes/UserUpdateDTO.html":{},"index.html":{},"properties.html":{}}}],["details",{"_index":368,"title":{},"body":{"injectables/FileServiceService.html":{}}}],["development",{"_index":1007,"title":{},"body":{"index.html":{}}}],["docs",{"_index":710,"title":{},"body":{"injectables/PlansService.html":{}}}],["documentation",{"_index":931,"title":{},"body":{"coverage.html":{}}}],["dowload",{"_index":339,"title":{},"body":{"injectables/FileServiceService.html":{}}}],["dowload(filetoken",{"_index":350,"title":{},"body":{"injectables/FileServiceService.html":{}}}],["downloadcount",{"_index":190,"title":{},"body":{"classes/FileModel.html":{}}}],["downloadfile",{"_index":239,"title":{},"body":{"controllers/FileServiceController.html":{}}}],["downloadfile(@param('id",{"_index":310,"title":{},"body":{"controllers/FileServiceController.html":{}}}],["downloadfile(id",{"_index":247,"title":{},"body":{"controllers/FileServiceController.html":{}}}],["downloadfroms3",{"_index":725,"title":{},"body":{"injectables/S3Service.html":{}}}],["downloadfroms3(filetoken",{"_index":728,"title":{},"body":{"injectables/S3Service.html":{}}}],["downloadresult",{"_index":311,"title":{},"body":{"controllers/FileServiceController.html":{}}}],["downloadresult.stream.pipe(res",{"_index":315,"title":{},"body":{"controllers/FileServiceController.html":{}}}],["draw",{"_index":273,"title":{},"body":{"controllers/FileServiceController.html":{},"controllers/PlansController.html":{}}}],["dto",{"_index":1064,"title":{},"body":{"miscellaneous/variables.html":{}}}],["duration",{"_index":114,"title":{},"body":{"classes/CreatePlanDTO.html":{},"injectables/PlansService.html":{},"classes/ServicePlansModel.html":{}}}],["e",{"_index":304,"title":{},"body":{"controllers/FileServiceController.html":{},"controllers/PaymentController.html":{},"controllers/PlansController.html":{},"controllers/UserController.html":{}}}],["e.response.message",{"_index":308,"title":{},"body":{"controllers/FileServiceController.html":{},"controllers/PaymentController.html":{},"controllers/PlansController.html":{},"controllers/UserController.html":{}}}],["e2e",{"_index":1016,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":994,"title":{},"body":{"index.html":{}}}],["email",{"_index":452,"title":{},"body":{"classes/LoginDTO.html":{},"classes/SignupDTO.html":{},"controllers/UserController.html":{},"classes/UserCreateDTO.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{},"classes/UserUpdateDTO.html":{}}}],["endpoint",{"_index":734,"title":{},"body":{"injectables/S3Service.html":{}}}],["enum",{"_index":204,"title":{},"body":{"classes/FileModel.html":{},"classes/OrderModel.html":{},"classes/ServicePlansModel.html":{},"classes/UserModel.html":{},"classes/UsersPlanModel.html":{}}}],["enumerations",{"_index":981,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["errors",{"_index":306,"title":{},"body":{"controllers/FileServiceController.html":{},"controllers/PaymentController.html":{},"controllers/PlansController.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["errors.length",{"_index":1072,"title":{},"body":{"miscellaneous/variables.html":{}}}],["example",{"_index":1003,"title":{},"body":{"index.html":{}}}],["exception",{"_index":441,"title":{},"body":{"classes/IsLoggedInExceptionFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"classes/UnAuthenticatedExceptionFilter.html":{}}}],["exceptionfilter",{"_index":436,"title":{},"body":{"classes/IsLoggedInExceptionFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"classes/UnAuthenticatedExceptionFilter.html":{}}}],["exceptions/isloggedin.exception",{"_index":442,"title":{},"body":{"classes/IsLoggedInExceptionFilter.html":{},"guards/IsLoggedInGuard.html":{}}}],["exceptions/unauthenticated.exception",{"_index":62,"title":{},"body":{"guards/AuthenticateGuard.html":{},"interfaces/Request.html":{},"classes/UnAuthenticatedExceptionFilter.html":{}}}],["executioncontext",{"_index":52,"title":{},"body":{"guards/AuthenticateGuard.html":{},"guards/IsLoggedInGuard.html":{},"interfaces/Request.html":{}}}],["expired",{"_index":220,"title":{},"body":{"classes/FileModel.html":{},"classes/UsersPlanModel.html":{},"miscellaneous/enumerations.html":{}}}],["expiredat",{"_index":384,"title":{},"body":{"injectables/FileServiceService.html":{},"injectables/PaymentService.html":{},"injectables/PlansService.html":{},"classes/UsersPlanModel.html":{}}}],["export",{"_index":29,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthenticateGuard.html":{},"classes/CallBackDTO.html":{},"classes/CreatePlanDTO.html":{},"controllers/DashboardController.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"classes/FileModel.html":{},"controllers/FileServiceController.html":{},"modules/FileServiceModule.html":{},"injectables/FileServiceService.html":{},"classes/IsLoggedInException.html":{},"classes/IsLoggedInExceptionFilter.html":{},"guards/IsLoggedInGuard.html":{},"classes/LoginDTO.html":{},"classes/NotFoundExceptionFilter.html":{},"classes/OrderModel.html":{},"controllers/OthersController.html":{},"modules/OthersModule.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"controllers/PlansController.html":{},"modules/PlansModule.html":{},"injectables/PlansService.html":{},"interfaces/Request.html":{},"injectables/S3Service.html":{},"classes/ServicePlansModel.html":{},"classes/SignupDTO.html":{},"classes/UnAuthenticatedException.html":{},"classes/UnAuthenticatedExceptionFilter.html":{},"controllers/UserController.html":{},"classes/UserCreateDTO.html":{},"classes/UserModel.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/UserUpdateDTO.html":{},"classes/UsersPlanModel.html":{},"modules/V1Module.html":{}}}],["exports",{"_index":8,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"modules/FileServiceModule.html":{},"modules/PaymentModule.html":{},"modules/PlansModule.html":{},"modules/UserModule.html":{},"modules/V1Module.html":{},"overview.html":{}}}],["express",{"_index":60,"title":{},"body":{"guards/AuthenticateGuard.html":{},"controllers/DashboardController.html":{},"controllers/FileServiceController.html":{},"modules/FileServiceModule.html":{},"classes/IsLoggedInExceptionFilter.html":{},"guards/IsLoggedInGuard.html":{},"classes/NotFoundExceptionFilter.html":{},"controllers/PaymentController.html":{},"controllers/PlansController.html":{},"interfaces/Request.html":{},"classes/UnAuthenticatedExceptionFilter.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["express.multer.file",{"_index":258,"title":{},"body":{"controllers/FileServiceController.html":{}}}],["extends",{"_index":428,"title":{},"body":{"classes/IsLoggedInException.html":{},"classes/UnAuthenticatedException.html":{}}}],["failed",{"_index":495,"title":{},"body":{"classes/OrderModel.html":{},"miscellaneous/enumerations.html":{}}}],["false",{"_index":402,"title":{},"body":{"injectables/FileServiceService.html":{},"classes/UserModel.html":{}}}],["file",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthenticateGuard.html":{},"classes/CallBackDTO.html":{},"classes/CreatePlanDTO.html":{},"controllers/DashboardController.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"classes/FileModel.html":{},"controllers/FileServiceController.html":{},"modules/FileServiceModule.html":{},"injectables/FileServiceService.html":{},"classes/IsLoggedInException.html":{},"classes/IsLoggedInExceptionFilter.html":{},"guards/IsLoggedInGuard.html":{},"classes/LoginDTO.html":{},"classes/NotFoundExceptionFilter.html":{},"classes/OrderModel.html":{},"controllers/OthersController.html":{},"modules/OthersModule.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"controllers/PlansController.html":{},"modules/PlansModule.html":{},"injectables/PlansService.html":{},"interfaces/Request.html":{},"injectables/S3Service.html":{},"classes/ServicePlansModel.html":{},"classes/SignupDTO.html":{},"classes/UnAuthenticatedException.html":{},"classes/UnAuthenticatedExceptionFilter.html":{},"controllers/UserController.html":{},"classes/UserCreateDTO.html":{},"classes/UserModel.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/UserUpdateDTO.html":{},"classes/UsersPlanModel.html":{},"modules/V1Module.html":{},"coverage.html":{}}}],["file._id}/${name",{"_index":412,"title":{},"body":{"injectables/FileServiceService.html":{}}}],["file.downloadcount",{"_index":421,"title":{},"body":{"injectables/FileServiceService.html":{}}}],["file.model",{"_index":862,"title":{},"body":{"classes/UserModel.html":{}}}],["file.save",{"_index":414,"title":{},"body":{"injectables/FileServiceService.html":{}}}],["file.status",{"_index":413,"title":{},"body":{"injectables/FileServiceService.html":{}}}],["filedocument",{"_index":230,"title":{},"body":{"classes/FileModel.html":{},"miscellaneous/typealiases.html":{}}}],["fileid",{"_index":246,"title":{},"body":{"controllers/FileServiceController.html":{}}}],["fileinfo",{"_index":422,"title":{},"body":{"injectables/FileServiceService.html":{}}}],["fileinterceptor",{"_index":266,"title":{},"body":{"controllers/FileServiceController.html":{}}}],["filemodel",{"_index":187,"title":{"classes/FileModel.html":{}},"body":{"classes/FileModel.html":{},"injectables/FileServiceService.html":{},"coverage.html":{}}}],["filemodel.name",{"_index":233,"title":{},"body":{"classes/FileModel.html":{},"miscellaneous/variables.html":{}}}],["filemodeldefinition",{"_index":232,"title":{},"body":{"classes/FileModel.html":{},"modules/FileServiceModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["files",{"_index":224,"title":{},"body":{"classes/FileModel.html":{},"injectables/FileServiceService.html":{}}}],["files.foreach((item",{"_index":400,"title":{},"body":{"injectables/FileServiceService.html":{}}}],["fileschema",{"_index":228,"title":{},"body":{"classes/FileModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["fileschema.plugin(mongoosepaginate",{"_index":231,"title":{},"body":{"classes/FileModel.html":{}}}],["filescount",{"_index":167,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/UserController.html":{}}}],["fileservice",{"_index":163,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/FileServiceController.html":{},"controllers/UserController.html":{}}}],["fileservicecontroller",{"_index":234,"title":{"controllers/FileServiceController.html":{}},"body":{"controllers/FileServiceController.html":{},"modules/FileServiceModule.html":{},"coverage.html":{}}}],["fileservicemodule",{"_index":177,"title":{"modules/FileServiceModule.html":{}},"body":{"modules/DashboardModule.html":{},"modules/FileServiceModule.html":{},"modules/UserModule.html":{},"modules/V1Module.html":{},"modules.html":{},"overview.html":{}}}],["fileserviceservice",{"_index":158,"title":{"injectables/FileServiceService.html":{}},"body":{"controllers/DashboardController.html":{},"controllers/FileServiceController.html":{},"modules/FileServiceModule.html":{},"injectables/FileServiceService.html":{},"controllers/UserController.html":{},"coverage.html":{},"overview.html":{}}}],["filesize",{"_index":410,"title":{},"body":{"injectables/FileServiceService.html":{},"injectables/S3Service.html":{}}}],["filesrepo",{"_index":336,"title":{},"body":{"injectables/FileServiceService.html":{}}}],["filetoken",{"_index":349,"title":{},"body":{"injectables/FileServiceService.html":{},"injectables/S3Service.html":{}}}],["filetoken}/${file.name",{"_index":419,"title":{},"body":{"injectables/FileServiceService.html":{}}}],["filter((plan",{"_index":703,"title":{},"body":{"injectables/PlansService.html":{}}}],["filters/isloggedin.exception.filter.ts",{"_index":435,"title":{},"body":{"classes/IsLoggedInExceptionFilter.html":{},"coverage.html":{}}}],["filters/isloggedin.exception.filter.ts:9",{"_index":440,"title":{},"body":{"classes/IsLoggedInExceptionFilter.html":{}}}],["filters/notfound.exception.filter.ts",{"_index":475,"title":{},"body":{"classes/NotFoundExceptionFilter.html":{},"coverage.html":{}}}],["filters/notfound.exception.filter.ts:13",{"_index":476,"title":{},"body":{"classes/NotFoundExceptionFilter.html":{}}}],["filters/unauthenticated.exception.filter.ts",{"_index":783,"title":{},"body":{"classes/UnAuthenticatedExceptionFilter.html":{},"coverage.html":{}}}],["filters/unauthenticated.exception.filter.ts:9",{"_index":784,"title":{},"body":{"classes/UnAuthenticatedExceptionFilter.html":{}}}],["firstname",{"_index":466,"title":{},"body":{"classes/LoginDTO.html":{},"classes/SignupDTO.html":{},"classes/UserCreateDTO.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{},"classes/UserUpdateDTO.html":{}}}],["flat",{"_index":1071,"title":{},"body":{"miscellaneous/variables.html":{}}}],["framework",{"_index":992,"title":{},"body":{"index.html":{}}}],["free",{"_index":768,"title":{},"body":{"classes/ServicePlansModel.html":{},"miscellaneous/enumerations.html":{}}}],["freestorage",{"_index":404,"title":{},"body":{"injectables/FileServiceService.html":{}}}],["function",{"_index":937,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":986,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get('')@useguards(isloggedinguard)@render('others/index",{"_index":508,"title":{},"body":{"controllers/OthersController.html":{}}}],["get('/')@useguards(authenticateguard)@render('panel/files",{"_index":255,"title":{},"body":{"controllers/FileServiceController.html":{}}}],["get('/:id",{"_index":248,"title":{},"body":{"controllers/FileServiceController.html":{}}}],["get('/callback",{"_index":522,"title":{},"body":{"controllers/PaymentController.html":{}}}],["get('/delete/:id",{"_index":316,"title":{},"body":{"controllers/FileServiceController.html":{}}}],["get('/delete/:id')@useguards(authenticateguard",{"_index":244,"title":{},"body":{"controllers/FileServiceController.html":{}}}],["get('/list",{"_index":271,"title":{},"body":{"controllers/FileServiceController.html":{},"controllers/PlansController.html":{}}}],["get('/list')@useguards(authenticateguard",{"_index":252,"title":{},"body":{"controllers/FileServiceController.html":{}}}],["get('/logout",{"_index":837,"title":{},"body":{"controllers/UserController.html":{}}}],["get('/logout')@redirect",{"_index":804,"title":{},"body":{"controllers/UserController.html":{}}}],["get('/profile",{"_index":826,"title":{},"body":{"controllers/UserController.html":{}}}],["get('/profile')@useguards(authenticateguard)@render('panel/profile",{"_index":798,"title":{},"body":{"controllers/UserController.html":{}}}],["get('/purchase/:id",{"_index":668,"title":{},"body":{"controllers/PlansController.html":{}}}],["getindexpage",{"_index":507,"title":{},"body":{"controllers/OthersController.html":{}}}],["getobject",{"_index":754,"title":{},"body":{"injectables/S3Service.html":{}}}],["getorderdetails",{"_index":558,"title":{},"body":{"injectables/PaymentService.html":{}}}],["getorderdetails(trackid",{"_index":568,"title":{},"body":{"injectables/PaymentService.html":{}}}],["getplanslist",{"_index":681,"title":{},"body":{"injectables/PlansService.html":{}}}],["getplanslist(userid",{"_index":688,"title":{},"body":{"injectables/PlansService.html":{}}}],["getprofileview",{"_index":789,"title":{},"body":{"controllers/UserController.html":{}}}],["getprofileview(@req",{"_index":828,"title":{},"body":{"controllers/UserController.html":{}}}],["getprofileview(req",{"_index":797,"title":{},"body":{"controllers/UserController.html":{}}}],["getting",{"_index":988,"title":{"index.html":{}},"body":{}}],["gettotalstorage",{"_index":340,"title":{},"body":{"injectables/FileServiceService.html":{}}}],["gettotalstorage(userid",{"_index":352,"title":{},"body":{"injectables/FileServiceService.html":{}}}],["getusedstorage",{"_index":341,"title":{},"body":{"injectables/FileServiceService.html":{}}}],["getusedstorage(userid",{"_index":356,"title":{},"body":{"injectables/FileServiceService.html":{}}}],["getuserfilescount",{"_index":342,"title":{},"body":{"injectables/FileServiceService.html":{}}}],["getuserfilescount(userid",{"_index":358,"title":{},"body":{"injectables/FileServiceService.html":{}}}],["getuserfileslist",{"_index":240,"title":{},"body":{"controllers/FileServiceController.html":{},"injectables/FileServiceService.html":{}}}],["getuserfileslist(@req",{"_index":272,"title":{},"body":{"controllers/FileServiceController.html":{}}}],["getuserfileslist(req",{"_index":251,"title":{},"body":{"controllers/FileServiceController.html":{}}}],["getuserfileslist(userid",{"_index":360,"title":{},"body":{"injectables/FileServiceService.html":{}}}],["getuserfilesview",{"_index":241,"title":{},"body":{"controllers/FileServiceController.html":{}}}],["getuserfilesview(@req",{"_index":270,"title":{},"body":{"controllers/FileServiceController.html":{}}}],["getuserfilesview(req",{"_index":254,"title":{},"body":{"controllers/FileServiceController.html":{}}}],["global",{"_index":91,"title":{},"body":{"guards/AuthenticateGuard.html":{},"interfaces/Request.html":{}}}],["graph",{"_index":1048,"title":{},"body":{"modules.html":{}}}],["grow",{"_index":1023,"title":{},"body":{"index.html":{}}}],["gt",{"_index":385,"title":{},"body":{"injectables/FileServiceService.html":{},"injectables/PlansService.html":{}}}],["guard",{"_index":33,"title":{"guards/AuthenticateGuard.html":{},"guards/IsLoggedInGuard.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":35,"title":{},"body":{"guards/AuthenticateGuard.html":{},"guards/IsLoggedInGuard.html":{},"overview.html":{}}}],["handlecallback",{"_index":559,"title":{},"body":{"injectables/PaymentService.html":{}}}],["handlecallback(trackid",{"_index":570,"title":{},"body":{"injectables/PaymentService.html":{}}}],["hashedpassword",{"_index":895,"title":{},"body":{"injectables/UserService.html":{}}}],["here",{"_index":1034,"title":{},"body":{"index.html":{}}}],["host",{"_index":438,"title":{},"body":{"classes/IsLoggedInExceptionFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"classes/UnAuthenticatedExceptionFilter.html":{}}}],["host.switchtohttp().getresponse",{"_index":444,"title":{},"body":{"classes/IsLoggedInExceptionFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"classes/UnAuthenticatedExceptionFilter.html":{}}}],["httpexception",{"_index":429,"title":{},"body":{"classes/IsLoggedInException.html":{},"classes/UnAuthenticatedException.html":{}}}],["httpmodule",{"_index":548,"title":{},"body":{"modules/PaymentModule.html":{}}}],["httpmodule.register",{"_index":552,"title":{},"body":{"modules/PaymentModule.html":{}}}],["https",{"_index":592,"title":{},"body":{"injectables/PaymentService.html":{}}}],["https://gateway.zibal.ir/start/${requestorderresult.data.trackid",{"_index":602,"title":{},"body":{"injectables/PaymentService.html":{}}}],["https://gateway.zibal.ir/v1",{"_index":554,"title":{},"body":{"modules/PaymentModule.html":{}}}],["https://nestjs.com",{"_index":1041,"title":{},"body":{"index.html":{}}}],["httpservice",{"_index":563,"title":{},"body":{"injectables/PaymentService.html":{}}}],["hydrateddocument",{"_index":766,"title":{},"body":{"classes/ServicePlansModel.html":{},"classes/UserModel.html":{},"miscellaneous/typealiases.html":{}}}],["id",{"_index":250,"title":{},"body":{"controllers/FileServiceController.html":{},"injectables/UserService.html":{}}}],["identifier",{"_index":932,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":69,"title":{},"body":{"guards/AuthenticateGuard.html":{},"classes/IsLoggedInExceptionFilter.html":{},"guards/IsLoggedInGuard.html":{},"classes/NotFoundExceptionFilter.html":{},"interfaces/Request.html":{},"classes/UnAuthenticatedExceptionFilter.html":{}}}],["import",{"_index":21,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthenticateGuard.html":{},"classes/CreatePlanDTO.html":{},"controllers/DashboardController.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"classes/FileModel.html":{},"controllers/FileServiceController.html":{},"modules/FileServiceModule.html":{},"injectables/FileServiceService.html":{},"classes/IsLoggedInException.html":{},"classes/IsLoggedInExceptionFilter.html":{},"guards/IsLoggedInGuard.html":{},"classes/LoginDTO.html":{},"classes/NotFoundExceptionFilter.html":{},"classes/OrderModel.html":{},"controllers/OthersController.html":{},"modules/OthersModule.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"controllers/PlansController.html":{},"modules/PlansModule.html":{},"injectables/PlansService.html":{},"interfaces/Request.html":{},"injectables/S3Service.html":{},"classes/ServicePlansModel.html":{},"classes/SignupDTO.html":{},"classes/UnAuthenticatedException.html":{},"classes/UnAuthenticatedExceptionFilter.html":{},"controllers/UserController.html":{},"classes/UserCreateDTO.html":{},"classes/UserModel.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/UserUpdateDTO.html":{},"classes/UsersPlanModel.html":{},"modules/V1Module.html":{}}}],["imports",{"_index":20,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"modules/FileServiceModule.html":{},"modules/PaymentModule.html":{},"modules/PlansModule.html":{},"modules/UserModule.html":{},"modules/V1Module.html":{}}}],["in_progress",{"_index":222,"title":{},"body":{"classes/FileModel.html":{},"classes/OrderModel.html":{},"miscellaneous/enumerations.html":{}}}],["includes(plan._id.tostring",{"_index":716,"title":{},"body":{"injectables/PlansService.html":{}}}],["index",{"_index":37,"title":{"index.html":{}},"body":{"guards/AuthenticateGuard.html":{},"classes/CallBackDTO.html":{},"classes/CreatePlanDTO.html":{},"controllers/DashboardController.html":{},"classes/FileModel.html":{},"controllers/FileServiceController.html":{},"injectables/FileServiceService.html":{},"classes/IsLoggedInExceptionFilter.html":{},"guards/IsLoggedInGuard.html":{},"classes/LoginDTO.html":{},"classes/NotFoundExceptionFilter.html":{},"classes/OrderModel.html":{},"controllers/OthersController.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/PlansController.html":{},"injectables/PlansService.html":{},"interfaces/Request.html":{},"injectables/S3Service.html":{},"classes/ServicePlansModel.html":{},"classes/SignupDTO.html":{},"classes/UnAuthenticatedExceptionFilter.html":{},"controllers/UserController.html":{},"classes/UserCreateDTO.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{},"classes/UserUpdateDTO.html":{},"classes/UsersPlanModel.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":16,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthenticateGuard.html":{},"classes/CallBackDTO.html":{},"classes/CreatePlanDTO.html":{},"controllers/DashboardController.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"classes/FileModel.html":{},"controllers/FileServiceController.html":{},"modules/FileServiceModule.html":{},"injectables/FileServiceService.html":{},"classes/IsLoggedInException.html":{},"classes/IsLoggedInExceptionFilter.html":{},"guards/IsLoggedInGuard.html":{},"classes/LoginDTO.html":{},"classes/NotFoundExceptionFilter.html":{},"classes/OrderModel.html":{},"controllers/OthersController.html":{},"modules/OthersModule.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"controllers/PlansController.html":{},"modules/PlansModule.html":{},"injectables/PlansService.html":{},"interfaces/Request.html":{},"injectables/S3Service.html":{},"classes/ServicePlansModel.html":{},"classes/SignupDTO.html":{},"classes/UnAuthenticatedException.html":{},"classes/UnAuthenticatedExceptionFilter.html":{},"controllers/UserController.html":{},"classes/UserCreateDTO.html":{},"classes/UserModel.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/UserUpdateDTO.html":{},"classes/UsersPlanModel.html":{},"modules/V1Module.html":{}}}],["injectable",{"_index":57,"title":{"injectables/DashboardService.html":{},"injectables/FileServiceService.html":{},"injectables/PaymentService.html":{},"injectables/PlansService.html":{},"injectables/S3Service.html":{},"injectables/UserService.html":{}},"body":{"guards/AuthenticateGuard.html":{},"injectables/DashboardService.html":{},"injectables/FileServiceService.html":{},"injectables/PaymentService.html":{},"injectables/PlansService.html":{},"interfaces/Request.html":{},"injectables/S3Service.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":185,"title":{},"body":{"injectables/DashboardService.html":{},"injectables/FileServiceService.html":{},"injectables/PaymentService.html":{},"injectables/PlansService.html":{},"injectables/S3Service.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injectmodel",{"_index":67,"title":{},"body":{"guards/AuthenticateGuard.html":{},"injectables/FileServiceService.html":{},"injectables/PaymentService.html":{},"injectables/PlansService.html":{},"interfaces/Request.html":{},"injectables/UserService.html":{}}}],["injectmodel(filemodel.name",{"_index":371,"title":{},"body":{"injectables/FileServiceService.html":{}}}],["injectmodel(ordermodel.name",{"_index":576,"title":{},"body":{"injectables/PaymentService.html":{}}}],["injectmodel(serviceplansmodel.name",{"_index":578,"title":{},"body":{"injectables/PaymentService.html":{},"injectables/PlansService.html":{},"injectables/UserService.html":{}}}],["injectmodel(usermodel.name",{"_index":70,"title":{},"body":{"guards/AuthenticateGuard.html":{},"interfaces/Request.html":{},"injectables/UserService.html":{}}}],["injectmodel(usersplanmodel.name",{"_index":373,"title":{},"body":{"injectables/FileServiceService.html":{},"injectables/PaymentService.html":{},"injectables/PlansService.html":{},"injectables/UserService.html":{}}}],["inprogress",{"_index":221,"title":{},"body":{"classes/FileModel.html":{},"classes/OrderModel.html":{},"miscellaneous/enumerations.html":{}}}],["inquiry",{"_index":560,"title":{},"body":{"injectables/PaymentService.html":{}}}],["inquiry(trackid",{"_index":572,"title":{},"body":{"injectables/PaymentService.html":{}}}],["installation",{"_index":1002,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":1005,"title":{},"body":{"index.html":{}}}],["interface",{"_index":93,"title":{"interfaces/Request.html":{}},"body":{"guards/AuthenticateGuard.html":{},"interfaces/Request.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":722,"title":{},"body":{"interfaces/Request.html":{}}}],["ioredis",{"_index":966,"title":{},"body":{"dependencies.html":{}}}],["ipg",{"_index":565,"title":{},"body":{"injectables/PaymentService.html":{}}}],["ipgservice",{"_index":685,"title":{},"body":{"injectables/PlansService.html":{}}}],["isadmin",{"_index":473,"title":{},"body":{"classes/LoginDTO.html":{},"classes/SignupDTO.html":{},"classes/UserCreateDTO.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{},"classes/UserUpdateDTO.html":{}}}],["isemail",{"_index":454,"title":{},"body":{"classes/LoginDTO.html":{},"classes/SignupDTO.html":{},"classes/UserCreateDTO.html":{},"classes/UserUpdateDTO.html":{}}}],["isenum",{"_index":137,"title":{},"body":{"classes/CreatePlanDTO.html":{}}}],["isenum(servicestypes",{"_index":134,"title":{},"body":{"classes/CreatePlanDTO.html":{}}}],["isloggedin",{"_index":100,"title":{},"body":{"guards/AuthenticateGuard.html":{},"interfaces/Request.html":{}}}],["isloggedinexception",{"_index":426,"title":{"classes/IsLoggedInException.html":{}},"body":{"classes/IsLoggedInException.html":{},"classes/IsLoggedInExceptionFilter.html":{},"guards/IsLoggedInGuard.html":{},"coverage.html":{}}}],["isloggedinexceptionfilter",{"_index":433,"title":{"classes/IsLoggedInExceptionFilter.html":{}},"body":{"classes/IsLoggedInExceptionFilter.html":{},"coverage.html":{}}}],["isloggedinguard",{"_index":446,"title":{"guards/IsLoggedInGuard.html":{}},"body":{"guards/IsLoggedInGuard.html":{},"controllers/OthersController.html":{},"coverage.html":{}}}],["isnotempty",{"_index":138,"title":{},"body":{"classes/CreatePlanDTO.html":{},"classes/LoginDTO.html":{},"classes/SignupDTO.html":{},"classes/UserCreateDTO.html":{},"classes/UserUpdateDTO.html":{}}}],["isnotempty({message",{"_index":123,"title":{},"body":{"classes/CreatePlanDTO.html":{},"classes/LoginDTO.html":{},"classes/SignupDTO.html":{},"classes/UserCreateDTO.html":{},"classes/UserUpdateDTO.html":{}}}],["isnumber",{"_index":119,"title":{},"body":{"classes/CreatePlanDTO.html":{},"classes/LoginDTO.html":{},"classes/SignupDTO.html":{},"classes/UserCreateDTO.html":{},"classes/UserUpdateDTO.html":{}}}],["isstring",{"_index":139,"title":{},"body":{"classes/CreatePlanDTO.html":{},"classes/LoginDTO.html":{},"classes/SignupDTO.html":{},"classes/UserCreateDTO.html":{},"classes/UserUpdateDTO.html":{}}}],["isstring({message",{"_index":126,"title":{},"body":{"classes/CreatePlanDTO.html":{},"classes/LoginDTO.html":{},"classes/SignupDTO.html":{},"classes/UserCreateDTO.html":{},"classes/UserUpdateDTO.html":{}}}],["isuserexist",{"_index":892,"title":{},"body":{"injectables/UserService.html":{}}}],["item",{"_index":392,"title":{},"body":{"injectables/FileServiceService.html":{}}}],["item.createdat",{"_index":293,"title":{},"body":{"controllers/FileServiceController.html":{}}}],["item.downloadcount",{"_index":292,"title":{},"body":{"controllers/FileServiceController.html":{}}}],["item.duration",{"_index":662,"title":{},"body":{"controllers/PlansController.html":{}}}],["item.name",{"_index":290,"title":{},"body":{"controllers/FileServiceController.html":{},"controllers/PlansController.html":{}}}],["item.planid",{"_index":393,"title":{},"body":{"injectables/FileServiceService.html":{}}}],["item.planid.tostring",{"_index":715,"title":{},"body":{"injectables/PlansService.html":{}}}],["item.price",{"_index":663,"title":{},"body":{"controllers/PlansController.html":{}}}],["item.purchased",{"_index":664,"title":{},"body":{"controllers/PlansController.html":{}}}],["item.size",{"_index":287,"title":{},"body":{"controllers/FileServiceController.html":{},"injectables/FileServiceService.html":{},"controllers/PlansController.html":{}}}],["join",{"_index":1030,"title":{},"body":{"index.html":{}}}],["kamil",{"_index":1038,"title":{},"body":{"index.html":{}}}],["key",{"_index":411,"title":{},"body":{"injectables/FileServiceService.html":{},"injectables/S3Service.html":{}}}],["lastname",{"_index":467,"title":{},"body":{"classes/LoginDTO.html":{},"classes/SignupDTO.html":{},"classes/UserCreateDTO.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{},"classes/UserUpdateDTO.html":{}}}],["legend",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"modules/FileServiceModule.html":{},"modules/PaymentModule.html":{},"modules/PlansModule.html":{},"modules/UserModule.html":{},"modules/V1Module.html":{},"overview.html":{}}}],["length",{"_index":275,"title":{},"body":{"controllers/FileServiceController.html":{},"controllers/PlansController.html":{}}}],["license",{"_index":1044,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":1020,"title":{},"body":{"index.html":{}}}],["limit",{"_index":362,"title":{},"body":{"injectables/FileServiceService.html":{},"injectables/PlansService.html":{}}}],["literal",{"_index":366,"title":{},"body":{"injectables/FileServiceService.html":{},"injectables/PaymentService.html":{},"interfaces/Request.html":{},"injectables/S3Service.html":{}}}],["login",{"_index":790,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["login(body",{"_index":800,"title":{},"body":{"controllers/UserController.html":{}}}],["login(email",{"_index":881,"title":{},"body":{"injectables/UserService.html":{}}}],["logindto",{"_index":450,"title":{"classes/LoginDTO.html":{}},"body":{"classes/LoginDTO.html":{},"classes/SignupDTO.html":{},"controllers/UserController.html":{},"classes/UserCreateDTO.html":{},"classes/UserUpdateDTO.html":{},"coverage.html":{}}}],["logout",{"_index":791,"title":{},"body":{"controllers/UserController.html":{}}}],["logout(@req",{"_index":838,"title":{},"body":{"controllers/UserController.html":{}}}],["logout(req",{"_index":803,"title":{},"body":{"controllers/UserController.html":{}}}],["map((item",{"_index":714,"title":{},"body":{"injectables/PlansService.html":{}}}],["map((value",{"_index":1069,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matching",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthenticateGuard.html":{},"classes/CallBackDTO.html":{},"classes/CreatePlanDTO.html":{},"controllers/DashboardController.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"classes/FileModel.html":{},"controllers/FileServiceController.html":{},"modules/FileServiceModule.html":{},"injectables/FileServiceService.html":{},"classes/IsLoggedInException.html":{},"classes/IsLoggedInExceptionFilter.html":{},"guards/IsLoggedInGuard.html":{},"classes/LoginDTO.html":{},"classes/NotFoundExceptionFilter.html":{},"classes/OrderModel.html":{},"controllers/OthersController.html":{},"modules/OthersModule.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"controllers/PlansController.html":{},"modules/PlansModule.html":{},"injectables/PlansService.html":{},"interfaces/Request.html":{},"injectables/S3Service.html":{},"classes/ServicePlansModel.html":{},"classes/SignupDTO.html":{},"classes/UnAuthenticatedException.html":{},"classes/UnAuthenticatedExceptionFilter.html":{},"controllers/UserController.html":{},"classes/UserCreateDTO.html":{},"classes/UserModel.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/UserUpdateDTO.html":{},"classes/UsersPlanModel.html":{},"modules/V1Module.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":140,"title":{},"body":{"classes/CreatePlanDTO.html":{},"classes/LoginDTO.html":{},"classes/SignupDTO.html":{},"classes/UserCreateDTO.html":{},"classes/UserUpdateDTO.html":{}}}],["max(1",{"_index":471,"title":{},"body":{"classes/LoginDTO.html":{},"classes/SignupDTO.html":{},"classes/UserCreateDTO.html":{},"classes/UserUpdateDTO.html":{}}}],["max(100000000000",{"_index":131,"title":{},"body":{"classes/CreatePlanDTO.html":{}}}],["max(365",{"_index":122,"title":{},"body":{"classes/CreatePlanDTO.html":{}}}],["maxlength",{"_index":459,"title":{},"body":{"classes/LoginDTO.html":{},"classes/SignupDTO.html":{},"classes/UserCreateDTO.html":{},"classes/UserUpdateDTO.html":{}}}],["maxlength(16",{"_index":465,"title":{},"body":{"classes/LoginDTO.html":{},"classes/SignupDTO.html":{},"classes/UserCreateDTO.html":{},"classes/UserUpdateDTO.html":{}}}],["maxlength(250",{"_index":468,"title":{},"body":{"classes/LoginDTO.html":{},"classes/SignupDTO.html":{},"classes/UserCreateDTO.html":{},"classes/UserUpdateDTO.html":{}}}],["maxlength(32",{"_index":457,"title":{},"body":{"classes/LoginDTO.html":{},"classes/SignupDTO.html":{},"classes/UserCreateDTO.html":{},"classes/UserUpdateDTO.html":{}}}],["mb",{"_index":291,"title":{},"body":{"controllers/FileServiceController.html":{},"injectables/FileServiceService.html":{}}}],["megabytes",{"_index":395,"title":{},"body":{"injectables/FileServiceService.html":{}}}],["megabytes.tofixed(2",{"_index":396,"title":{},"body":{"injectables/FileServiceService.html":{}}}],["memorystorage",{"_index":326,"title":{},"body":{"modules/FileServiceModule.html":{}}}],["merchant",{"_index":589,"title":{},"body":{"injectables/PaymentService.html":{}}}],["message",{"_index":120,"title":{},"body":{"classes/CreatePlanDTO.html":{},"classes/LoginDTO.html":{},"classes/SignupDTO.html":{},"classes/UserCreateDTO.html":{},"classes/UserUpdateDTO.html":{}}}],["metadata",{"_index":976,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":968,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":38,"title":{},"body":{"guards/AuthenticateGuard.html":{},"controllers/DashboardController.html":{},"controllers/FileServiceController.html":{},"injectables/FileServiceService.html":{},"classes/IsLoggedInExceptionFilter.html":{},"guards/IsLoggedInGuard.html":{},"classes/NotFoundExceptionFilter.html":{},"controllers/OthersController.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/PlansController.html":{},"injectables/PlansService.html":{},"injectables/S3Service.html":{},"classes/UnAuthenticatedExceptionFilter.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["mimetype",{"_index":191,"title":{},"body":{"classes/FileModel.html":{},"controllers/FileServiceController.html":{},"injectables/FileServiceService.html":{},"injectables/S3Service.html":{}}}],["min",{"_index":141,"title":{},"body":{"classes/CreatePlanDTO.html":{},"classes/LoginDTO.html":{},"classes/SignupDTO.html":{},"classes/UserCreateDTO.html":{},"classes/UserUpdateDTO.html":{}}}],["min(0",{"_index":128,"title":{},"body":{"classes/CreatePlanDTO.html":{},"classes/LoginDTO.html":{},"classes/SignupDTO.html":{},"classes/UserCreateDTO.html":{},"classes/UserUpdateDTO.html":{}}}],["min(1",{"_index":121,"title":{},"body":{"classes/CreatePlanDTO.html":{}}}],["min(5000000",{"_index":130,"title":{},"body":{"classes/CreatePlanDTO.html":{}}}],["minlength",{"_index":460,"title":{},"body":{"classes/LoginDTO.html":{},"classes/SignupDTO.html":{},"classes/UserCreateDTO.html":{},"classes/UserUpdateDTO.html":{}}}],["minlength(3",{"_index":464,"title":{},"body":{"classes/LoginDTO.html":{},"classes/SignupDTO.html":{},"classes/UserCreateDTO.html":{},"classes/UserUpdateDTO.html":{}}}],["minlength(8",{"_index":456,"title":{},"body":{"classes/LoginDTO.html":{},"classes/SignupDTO.html":{},"classes/UserCreateDTO.html":{},"classes/UserUpdateDTO.html":{}}}],["miscellaneous",{"_index":980,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1019,"title":{},"body":{"index.html":{}}}],["mode",{"_index":1010,"title":{},"body":{"index.html":{}}}],["model",{"_index":43,"title":{},"body":{"guards/AuthenticateGuard.html":{},"injectables/PaymentService.html":{},"injectables/PlansService.html":{},"interfaces/Request.html":{},"injectables/UserService.html":{}}}],["modeldefinition",{"_index":210,"title":{},"body":{"classes/FileModel.html":{},"classes/OrderModel.html":{},"classes/ServicePlansModel.html":{},"classes/UserModel.html":{},"classes/UsersPlanModel.html":{},"miscellaneous/variables.html":{}}}],["models/file.model",{"_index":330,"title":{},"body":{"modules/FileServiceModule.html":{},"injectables/FileServiceService.html":{}}}],["models/order.model",{"_index":550,"title":{},"body":{"modules/PaymentModule.html":{},"injectables/PaymentService.html":{}}}],["models/serviceplans.model",{"_index":136,"title":{},"body":{"classes/CreatePlanDTO.html":{},"injectables/FileServiceService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"modules/PlansModule.html":{},"injectables/PlansService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["models/user.model",{"_index":66,"title":{},"body":{"guards/AuthenticateGuard.html":{},"modules/DashboardModule.html":{},"modules/FileServiceModule.html":{},"modules/PlansModule.html":{},"interfaces/Request.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["models/usersplan.model",{"_index":329,"title":{},"body":{"modules/FileServiceModule.html":{},"injectables/FileServiceService.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"modules/PlansModule.html":{},"injectables/PlansService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"modules/FileServiceModule.html":{},"modules/OthersModule.html":{},"modules/PaymentModule.html":{},"modules/PlansModule.html":{},"modules/UserModule.html":{},"modules/V1Module.html":{}},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"modules/FileServiceModule.html":{},"modules/OthersModule.html":{},"modules/PaymentModule.html":{},"modules/PlansModule.html":{},"modules/UserModule.html":{},"modules/V1Module.html":{},"overview.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"modules/FileServiceModule.html":{},"modules/OthersModule.html":{},"modules/PaymentModule.html":{},"modules/PlansModule.html":{},"modules/UserModule.html":{},"modules/V1Module.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":581,"title":{},"body":{"injectables/PaymentService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["moment().add(plan.duration",{"_index":618,"title":{},"body":{"injectables/PaymentService.html":{}}}],["moment/moment",{"_index":582,"title":{},"body":{"injectables/PaymentService.html":{}}}],["mongodb://root:94cfaogeysaisvm2qrgbmim8@mongodb:27017/file",{"_index":27,"title":{},"body":{"modules/AppModule.html":{}}}],["mongoose",{"_index":64,"title":{},"body":{"guards/AuthenticateGuard.html":{},"classes/FileModel.html":{},"injectables/FileServiceService.html":{},"classes/OrderModel.html":{},"injectables/PaymentService.html":{},"injectables/PlansService.html":{},"interfaces/Request.html":{},"classes/ServicePlansModel.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{},"classes/UsersPlanModel.html":{},"dependencies.html":{}}}],["mongoosemodule",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"modules/FileServiceModule.html":{},"modules/PaymentModule.html":{},"modules/PlansModule.html":{},"modules/UserModule.html":{}}}],["mongoosemodule.forfeature",{"_index":332,"title":{},"body":{"modules/FileServiceModule.html":{},"modules/PaymentModule.html":{},"modules/PlansModule.html":{},"modules/UserModule.html":{}}}],["mongoosemodule.forfeature([usermodeldefinition",{"_index":184,"title":{},"body":{"modules/DashboardModule.html":{}}}],["mongoosemodule.forroot",{"_index":26,"title":{},"body":{"modules/AppModule.html":{}}}],["mongoosepaginate",{"_index":215,"title":{},"body":{"classes/FileModel.html":{},"classes/OrderModel.html":{},"classes/ServicePlansModel.html":{},"classes/UsersPlanModel.html":{}}}],["more",{"_index":1033,"title":{},"body":{"index.html":{}}}],["multer",{"_index":327,"title":{},"body":{"modules/FileServiceModule.html":{}}}],["multermodule",{"_index":325,"title":{},"body":{"modules/FileServiceModule.html":{}}}],["multermodule.register",{"_index":333,"title":{},"body":{"modules/FileServiceModule.html":{}}}],["myśliwiec",{"_index":1039,"title":{},"body":{"index.html":{}}}],["name",{"_index":47,"title":{},"body":{"guards/AuthenticateGuard.html":{},"classes/CreatePlanDTO.html":{},"controllers/DashboardController.html":{},"classes/FileModel.html":{},"controllers/FileServiceController.html":{},"injectables/FileServiceService.html":{},"classes/IsLoggedInExceptionFilter.html":{},"guards/IsLoggedInGuard.html":{},"classes/NotFoundExceptionFilter.html":{},"classes/OrderModel.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/PlansController.html":{},"injectables/PlansService.html":{},"injectables/S3Service.html":{},"classes/ServicePlansModel.html":{},"classes/UnAuthenticatedExceptionFilter.html":{},"controllers/UserController.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{},"classes/UsersPlanModel.html":{},"miscellaneous/variables.html":{}}}],["namespace",{"_index":92,"title":{},"body":{"guards/AuthenticateGuard.html":{},"interfaces/Request.html":{}}}],["nest",{"_index":999,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":1043,"title":{},"body":{"index.html":{}}}],["nestjs/axios",{"_index":549,"title":{},"body":{"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthenticateGuard.html":{},"controllers/DashboardController.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"controllers/FileServiceController.html":{},"modules/FileServiceModule.html":{},"injectables/FileServiceService.html":{},"classes/IsLoggedInException.html":{},"classes/IsLoggedInExceptionFilter.html":{},"guards/IsLoggedInGuard.html":{},"classes/NotFoundExceptionFilter.html":{},"controllers/OthersController.html":{},"modules/OthersModule.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"controllers/PlansController.html":{},"modules/PlansModule.html":{},"injectables/PlansService.html":{},"interfaces/Request.html":{},"injectables/S3Service.html":{},"classes/UnAuthenticatedException.html":{},"classes/UnAuthenticatedExceptionFilter.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"modules/V1Module.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":953,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mongoose",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthenticateGuard.html":{},"modules/DashboardModule.html":{},"classes/FileModel.html":{},"modules/FileServiceModule.html":{},"injectables/FileServiceService.html":{},"classes/OrderModel.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"modules/PlansModule.html":{},"injectables/PlansService.html":{},"interfaces/Request.html":{},"classes/ServicePlansModel.html":{},"classes/UserModel.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/UsersPlanModel.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":267,"title":{},"body":{"controllers/FileServiceController.html":{},"modules/FileServiceModule.html":{},"dependencies.html":{}}}],["new",{"_index":80,"title":{},"body":{"guards/AuthenticateGuard.html":{},"controllers/FileServiceController.html":{},"injectables/FileServiceService.html":{},"guards/IsLoggedInGuard.html":{},"injectables/PaymentService.html":{},"injectables/PlansService.html":{},"interfaces/Request.html":{},"injectables/S3Service.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["nin",{"_index":698,"title":{},"body":{"injectables/PlansService.html":{}}}],["node.js",{"_index":991,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":374,"title":{},"body":{"injectables/FileServiceService.html":{},"classes/NotFoundExceptionFilter.html":{},"injectables/PaymentService.html":{},"injectables/PlansService.html":{},"injectables/UserService.html":{}}}],["notfoundexceptionfilter",{"_index":474,"title":{"classes/NotFoundExceptionFilter.html":{}},"body":{"classes/NotFoundExceptionFilter.html":{},"coverage.html":{}}}],["number",{"_index":117,"title":{},"body":{"classes/CreatePlanDTO.html":{},"classes/FileModel.html":{},"injectables/FileServiceService.html":{},"classes/LoginDTO.html":{},"classes/OrderModel.html":{},"injectables/PaymentService.html":{},"injectables/PlansService.html":{},"injectables/S3Service.html":{},"classes/ServicePlansModel.html":{},"classes/SignupDTO.html":{},"classes/UserCreateDTO.html":{},"classes/UserUpdateDTO.html":{}}}],["object",{"_index":1063,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.values(orderstatustypes",{"_index":497,"title":{},"body":{"classes/OrderModel.html":{}}}],["object.values(servicestypes",{"_index":770,"title":{},"body":{"classes/ServicePlansModel.html":{}}}],["object.values(statustypes",{"_index":226,"title":{},"body":{"classes/FileModel.html":{},"classes/ServicePlansModel.html":{},"classes/UserModel.html":{},"classes/UsersPlanModel.html":{}}}],["object.values(value.constraints",{"_index":1070,"title":{},"body":{"miscellaneous/variables.html":{}}}],["offset",{"_index":361,"title":{},"body":{"injectables/FileServiceService.html":{},"injectables/PlansService.html":{}}}],["open",{"_index":1021,"title":{},"body":{"index.html":{}}}],["optional",{"_index":49,"title":{},"body":{"guards/AuthenticateGuard.html":{},"controllers/DashboardController.html":{},"controllers/FileServiceController.html":{},"injectables/FileServiceService.html":{},"classes/IsLoggedInExceptionFilter.html":{},"guards/IsLoggedInGuard.html":{},"classes/NotFoundExceptionFilter.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/PlansController.html":{},"injectables/PlansService.html":{},"injectables/S3Service.html":{},"classes/UnAuthenticatedExceptionFilter.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["order",{"_index":583,"title":{},"body":{"injectables/PaymentService.html":{},"injectables/PlansService.html":{}}}],["order._id",{"_index":600,"title":{},"body":{"injectables/PaymentService.html":{}}}],["order.banktoken",{"_index":595,"title":{},"body":{"injectables/PaymentService.html":{}}}],["order.rrn",{"_index":596,"title":{},"body":{"injectables/PaymentService.html":{}}}],["order.save",{"_index":598,"title":{},"body":{"injectables/PaymentService.html":{}}}],["order.status",{"_index":607,"title":{},"body":{"injectables/PaymentService.html":{}}}],["orderdefinition",{"_index":503,"title":{},"body":{"classes/OrderModel.html":{},"modules/PaymentModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["orderdetails",{"_index":532,"title":{},"body":{"controllers/PaymentController.html":{},"injectables/PaymentService.html":{}}}],["orderdetails.amount",{"_index":538,"title":{},"body":{"controllers/PaymentController.html":{}}}],["orderdetails.planid",{"_index":536,"title":{},"body":{"controllers/PaymentController.html":{}}}],["orderdetails.rrn",{"_index":539,"title":{},"body":{"controllers/PaymentController.html":{}}}],["orderdetails.status",{"_index":535,"title":{},"body":{"controllers/PaymentController.html":{}}}],["orderdetails.updatedat",{"_index":541,"title":{},"body":{"controllers/PaymentController.html":{}}}],["orderdocument",{"_index":501,"title":{},"body":{"classes/OrderModel.html":{},"miscellaneous/typealiases.html":{}}}],["ordererrors",{"_index":671,"title":{},"body":{"controllers/PlansController.html":{}}}],["orderid",{"_index":599,"title":{},"body":{"injectables/PaymentService.html":{}}}],["orderinfo",{"_index":613,"title":{},"body":{"injectables/PaymentService.html":{}}}],["orderinfo.rrn",{"_index":624,"title":{},"body":{"injectables/PaymentService.html":{}}}],["orderinfo.status",{"_index":620,"title":{},"body":{"injectables/PaymentService.html":{}}}],["orderinfo.updatedat",{"_index":623,"title":{},"body":{"injectables/PaymentService.html":{}}}],["ordermodel",{"_index":479,"title":{"classes/OrderModel.html":{}},"body":{"classes/OrderModel.html":{},"injectables/PaymentService.html":{},"coverage.html":{}}}],["ordermodel.name",{"_index":504,"title":{},"body":{"classes/OrderModel.html":{},"miscellaneous/variables.html":{}}}],["orderrepo",{"_index":556,"title":{},"body":{"injectables/PaymentService.html":{}}}],["orders",{"_index":496,"title":{},"body":{"classes/OrderModel.html":{}}}],["orderschema",{"_index":499,"title":{},"body":{"classes/OrderModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["orderschema.plugin(mongoosepaginate",{"_index":502,"title":{},"body":{"classes/OrderModel.html":{}}}],["orderstatustypes",{"_index":490,"title":{},"body":{"classes/OrderModel.html":{},"injectables/PaymentService.html":{},"miscellaneous/enumerations.html":{}}}],["orderstatustypes.confirm",{"_index":608,"title":{},"body":{"injectables/PaymentService.html":{}}}],["orderstatustypes.failed",{"_index":612,"title":{},"body":{"injectables/PaymentService.html":{}}}],["orderstatustypes.inprogress",{"_index":498,"title":{},"body":{"classes/OrderModel.html":{}}}],["originalname",{"_index":299,"title":{},"body":{"controllers/FileServiceController.html":{}}}],["others.controller",{"_index":516,"title":{},"body":{"modules/OthersModule.html":{}}}],["others/others.module",{"_index":928,"title":{},"body":{"modules/V1Module.html":{}}}],["otherscontroller",{"_index":505,"title":{"controllers/OthersController.html":{}},"body":{"controllers/OthersController.html":{},"modules/OthersModule.html":{},"coverage.html":{}}}],["othersmodule",{"_index":514,"title":{"modules/OthersModule.html":{}},"body":{"modules/OthersModule.html":{},"modules/V1Module.html":{},"modules.html":{},"overview.html":{}}}],["out",{"_index":15,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"modules/FileServiceModule.html":{},"modules/PaymentModule.html":{},"modules/PlansModule.html":{},"modules/UserModule.html":{},"modules/V1Module.html":{},"overview.html":{}}}],["output",{"_index":658,"title":{},"body":{"controllers/PlansController.html":{}}}],["override",{"_index":969,"title":{},"body":{"dependencies.html":{}}}],["overview",{"_index":1050,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":950,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["paginate",{"_index":216,"title":{},"body":{"classes/FileModel.html":{},"classes/OrderModel.html":{},"classes/ServicePlansModel.html":{},"classes/UsersPlanModel.html":{},"dependencies.html":{}}}],["paginatemodel",{"_index":214,"title":{},"body":{"classes/FileModel.html":{},"injectables/FileServiceService.html":{},"classes/OrderModel.html":{},"injectables/PlansService.html":{},"classes/UsersPlanModel.html":{},"miscellaneous/typealiases.html":{}}}],["param",{"_index":262,"title":{},"body":{"controllers/FileServiceController.html":{},"controllers/PlansController.html":{}}}],["param('id",{"_index":317,"title":{},"body":{"controllers/FileServiceController.html":{},"controllers/PlansController.html":{}}}],["parameters",{"_index":46,"title":{},"body":{"guards/AuthenticateGuard.html":{},"controllers/DashboardController.html":{},"controllers/FileServiceController.html":{},"injectables/FileServiceService.html":{},"classes/IsLoggedInExceptionFilter.html":{},"guards/IsLoggedInGuard.html":{},"classes/NotFoundExceptionFilter.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/PlansController.html":{},"injectables/PlansService.html":{},"injectables/S3Service.html":{},"classes/UnAuthenticatedExceptionFilter.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["partial",{"_index":886,"title":{},"body":{"injectables/UserService.html":{}}}],["password",{"_index":453,"title":{},"body":{"classes/LoginDTO.html":{},"classes/SignupDTO.html":{},"controllers/UserController.html":{},"classes/UserCreateDTO.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{},"classes/UserUpdateDTO.html":{}}}],["path",{"_index":388,"title":{},"body":{"injectables/FileServiceService.html":{},"injectables/PaymentService.html":{},"controllers/UserController.html":{}}}],["payment.controller",{"_index":547,"title":{},"body":{"modules/PaymentModule.html":{}}}],["payment.dto",{"_index":526,"title":{},"body":{"controllers/PaymentController.html":{}}}],["payment.service",{"_index":528,"title":{},"body":{"controllers/PaymentController.html":{},"modules/PaymentModule.html":{}}}],["payment/payment.module",{"_index":678,"title":{},"body":{"modules/PlansModule.html":{},"modules/V1Module.html":{}}}],["payment/payment.service",{"_index":696,"title":{},"body":{"injectables/PlansService.html":{}}}],["paymentcontroller",{"_index":517,"title":{"controllers/PaymentController.html":{}},"body":{"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"coverage.html":{}}}],["paymentdate",{"_index":540,"title":{},"body":{"controllers/PaymentController.html":{},"injectables/PaymentService.html":{}}}],["paymentmodule",{"_index":542,"title":{"modules/PaymentModule.html":{}},"body":{"modules/PaymentModule.html":{},"modules/PlansModule.html":{},"modules/V1Module.html":{},"modules.html":{},"overview.html":{}}}],["paymentservice",{"_index":527,"title":{"injectables/PaymentService.html":{}},"body":{"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"injectables/PlansService.html":{},"coverage.html":{},"overview.html":{}}}],["plaintoclass(dto",{"_index":1066,"title":{},"body":{"miscellaneous/variables.html":{}}}],["plan",{"_index":615,"title":{},"body":{"injectables/PaymentService.html":{},"injectables/PlansService.html":{}}}],["plan.dto",{"_index":645,"title":{},"body":{"controllers/PlansController.html":{},"injectables/PlansService.html":{}}}],["plan.name",{"_index":621,"title":{},"body":{"injectables/PaymentService.html":{}}}],["plan.price",{"_index":622,"title":{},"body":{"injectables/PaymentService.html":{},"injectables/PlansService.html":{}}}],["plan.save",{"_index":708,"title":{},"body":{"injectables/PlansService.html":{}}}],["plan.status",{"_index":706,"title":{},"body":{"injectables/PlansService.html":{}}}],["plan.tojson",{"_index":712,"title":{},"body":{"injectables/PlansService.html":{}}}],["planid",{"_index":386,"title":{},"body":{"injectables/FileServiceService.html":{},"classes/OrderModel.html":{},"injectables/PaymentService.html":{},"controllers/PlansController.html":{},"injectables/PlansService.html":{},"classes/UsersPlanModel.html":{}}}],["plans",{"_index":382,"title":{},"body":{"injectables/FileServiceService.html":{},"controllers/PlansController.html":{},"injectables/PlansService.html":{},"classes/ServicePlansModel.html":{},"injectables/UserService.html":{},"classes/UsersPlanModel.html":{}}}],["plans.controller",{"_index":677,"title":{},"body":{"modules/PlansModule.html":{}}}],["plans.docs.map((item",{"_index":660,"title":{},"body":{"controllers/PlansController.html":{}}}],["plans.docs.map((plan",{"_index":711,"title":{},"body":{"injectables/PlansService.html":{}}}],["plans.foreach",{"_index":391,"title":{},"body":{"injectables/FileServiceService.html":{}}}],["plans.service",{"_index":644,"title":{},"body":{"controllers/PlansController.html":{},"modules/PlansModule.html":{}}}],["plans.totaldocs",{"_index":659,"title":{},"body":{"controllers/PlansController.html":{},"injectables/PlansService.html":{}}}],["plans/plans.module",{"_index":929,"title":{},"body":{"modules/V1Module.html":{}}}],["planscontroller",{"_index":625,"title":{"controllers/PlansController.html":{}},"body":{"controllers/PlansController.html":{},"modules/PlansModule.html":{},"coverage.html":{}}}],["planservice",{"_index":649,"title":{},"body":{"controllers/PlansController.html":{}}}],["planslist",{"_index":629,"title":{},"body":{"controllers/PlansController.html":{}}}],["planslist(@req",{"_index":656,"title":{},"body":{"controllers/PlansController.html":{}}}],["planslist(req",{"_index":635,"title":{},"body":{"controllers/PlansController.html":{}}}],["plansmodule",{"_index":672,"title":{"modules/PlansModule.html":{}},"body":{"modules/PlansModule.html":{},"modules/V1Module.html":{},"modules.html":{},"overview.html":{}}}],["plansrepo",{"_index":557,"title":{},"body":{"injectables/PaymentService.html":{},"injectables/PlansService.html":{},"injectables/UserService.html":{}}}],["plansservice",{"_index":643,"title":{"injectables/PlansService.html":{}},"body":{"controllers/PlansController.html":{},"modules/PlansModule.html":{},"injectables/PlansService.html":{},"coverage.html":{},"overview.html":{}}}],["please",{"_index":1031,"title":{},"body":{"index.html":{}}}],["populate",{"_index":387,"title":{},"body":{"injectables/FileServiceService.html":{},"injectables/PaymentService.html":{}}}],["post",{"_index":263,"title":{},"body":{"controllers/FileServiceController.html":{},"controllers/PlansController.html":{},"controllers/UserController.html":{}}}],["post('/')@useguards(authenticateguard)@useinterceptors(undefined",{"_index":259,"title":{},"body":{"controllers/FileServiceController.html":{}}}],["post('/create",{"_index":834,"title":{},"body":{"controllers/UserController.html":{}}}],["post('/create')@useguards(authenticateguard",{"_index":795,"title":{},"body":{"controllers/UserController.html":{}}}],["post('/inquiry",{"_index":609,"title":{},"body":{"injectables/PaymentService.html":{}}}],["post('/login",{"_index":801,"title":{},"body":{"controllers/UserController.html":{}}}],["post('/request",{"_index":588,"title":{},"body":{"injectables/PaymentService.html":{}}}],["post('/signup",{"_index":807,"title":{},"body":{"controllers/UserController.html":{}}}],["post('/update",{"_index":829,"title":{},"body":{"controllers/UserController.html":{}}}],["post('/update')@useguards(authenticateguard",{"_index":810,"title":{},"body":{"controllers/UserController.html":{}}}],["post('/verify",{"_index":605,"title":{},"body":{"injectables/PaymentService.html":{}}}],["preconditionfailedexception",{"_index":580,"title":{},"body":{"injectables/PaymentService.html":{}}}],["prefix",{"_index":148,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/FileServiceController.html":{},"controllers/OthersController.html":{},"controllers/PaymentController.html":{},"controllers/PlansController.html":{}}}],["price",{"_index":115,"title":{},"body":{"classes/CreatePlanDTO.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"injectables/PlansService.html":{},"classes/ServicePlansModel.html":{}}}],["private",{"_index":71,"title":{},"body":{"guards/AuthenticateGuard.html":{},"injectables/FileServiceService.html":{},"injectables/PaymentService.html":{},"injectables/PlansService.html":{},"interfaces/Request.html":{},"injectables/S3Service.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["production",{"_index":1012,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":990,"title":{},"body":{"index.html":{}}}],["project",{"_index":1022,"title":{},"body":{"index.html":{}}}],["promise",{"_index":56,"title":{},"body":{"guards/AuthenticateGuard.html":{},"interfaces/Request.html":{},"injectables/S3Service.html":{}}}],["prop",{"_index":211,"title":{},"body":{"classes/FileModel.html":{},"classes/OrderModel.html":{},"classes/ServicePlansModel.html":{},"classes/UserModel.html":{},"classes/UsersPlanModel.html":{}}}],["prop(string",{"_index":198,"title":{},"body":{"classes/FileModel.html":{}}}],["prop({type",{"_index":195,"title":{},"body":{"classes/FileModel.html":{},"classes/OrderModel.html":{},"classes/ServicePlansModel.html":{},"classes/UserModel.html":{},"classes/UsersPlanModel.html":{}}}],["properties",{"_index":105,"title":{"properties.html":{}},"body":{"classes/CallBackDTO.html":{},"classes/CreatePlanDTO.html":{},"classes/FileModel.html":{},"injectables/FileServiceService.html":{},"classes/LoginDTO.html":{},"classes/OrderModel.html":{},"injectables/PaymentService.html":{},"injectables/PlansService.html":{},"interfaces/Request.html":{},"injectables/S3Service.html":{},"classes/ServicePlansModel.html":{},"classes/SignupDTO.html":{},"classes/UserCreateDTO.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{},"classes/UserUpdateDTO.html":{},"classes/UsersPlanModel.html":{},"properties.html":{}}}],["providers",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"modules/FileServiceModule.html":{},"modules/OthersModule.html":{},"modules/PaymentModule.html":{},"modules/PlansModule.html":{},"modules/UserModule.html":{},"modules/V1Module.html":{},"overview.html":{}}}],["pug",{"_index":973,"title":{},"body":{"dependencies.html":{}}}],["purchase",{"_index":682,"title":{},"body":{"injectables/PlansService.html":{}}}],["purchase(planid",{"_index":690,"title":{},"body":{"injectables/PlansService.html":{}}}],["purchased",{"_index":713,"title":{},"body":{"injectables/PlansService.html":{}}}],["purchaseplan",{"_index":630,"title":{},"body":{"controllers/PlansController.html":{}}}],["purchaseplan(planid",{"_index":638,"title":{},"body":{"controllers/PlansController.html":{}}}],["query",{"_index":525,"title":{},"body":{"controllers/PaymentController.html":{}}}],["read",{"_index":1032,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":72,"title":{},"body":{"guards/AuthenticateGuard.html":{},"controllers/DashboardController.html":{},"injectables/FileServiceService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/PlansController.html":{},"injectables/PlansService.html":{},"interfaces/Request.html":{},"injectables/S3Service.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["recordsfiltered",{"_index":283,"title":{},"body":{"controllers/FileServiceController.html":{},"controllers/PlansController.html":{}}}],["recordstotal",{"_index":281,"title":{},"body":{"controllers/FileServiceController.html":{},"controllers/PlansController.html":{}}}],["redirect",{"_index":812,"title":{},"body":{"controllers/UserController.html":{}}}],["redirecturl",{"_index":601,"title":{},"body":{"injectables/PaymentService.html":{},"controllers/PlansController.html":{}}}],["redis",{"_index":963,"title":{},"body":{"dependencies.html":{}}}],["ref",{"_index":208,"title":{},"body":{"classes/FileModel.html":{},"classes/OrderModel.html":{},"classes/UsersPlanModel.html":{}}}],["reflect",{"_index":975,"title":{},"body":{"dependencies.html":{}}}],["region",{"_index":736,"title":{},"body":{"injectables/S3Service.html":{}}}],["removefroms3",{"_index":726,"title":{},"body":{"injectables/S3Service.html":{}}}],["removefroms3(filetoken",{"_index":730,"title":{},"body":{"injectables/S3Service.html":{}}}],["render",{"_index":155,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/FileServiceController.html":{},"controllers/OthersController.html":{},"controllers/PlansController.html":{},"controllers/UserController.html":{}}}],["render('others/index",{"_index":513,"title":{},"body":{"controllers/OthersController.html":{}}}],["render('panel/dashboard",{"_index":164,"title":{},"body":{"controllers/DashboardController.html":{}}}],["render('panel/dashboard')@useguards(authenticateguard)@get",{"_index":152,"title":{},"body":{"controllers/DashboardController.html":{}}}],["render('panel/files",{"_index":269,"title":{},"body":{"controllers/FileServiceController.html":{}}}],["render('panel/plans",{"_index":650,"title":{},"body":{"controllers/PlansController.html":{}}}],["render('panel/plans')@useguards(authenticateguard)@get",{"_index":641,"title":{},"body":{"controllers/PlansController.html":{}}}],["render('panel/profile",{"_index":827,"title":{},"body":{"controllers/UserController.html":{}}}],["repository",{"_index":1001,"title":{},"body":{"index.html":{}}}],["req",{"_index":74,"title":{},"body":{"guards/AuthenticateGuard.html":{},"controllers/DashboardController.html":{},"controllers/FileServiceController.html":{},"controllers/PlansController.html":{},"interfaces/Request.html":{},"controllers/UserController.html":{}}}],["req.body",{"_index":832,"title":{},"body":{"controllers/UserController.html":{}}}],["req.query",{"_index":276,"title":{},"body":{"controllers/FileServiceController.html":{},"controllers/PlansController.html":{}}}],["req.session",{"_index":86,"title":{},"body":{"guards/AuthenticateGuard.html":{},"interfaces/Request.html":{},"controllers/UserController.html":{}}}],["req.session.access",{"_index":820,"title":{},"body":{"controllers/UserController.html":{}}}],["req.session.isloggedin",{"_index":78,"title":{},"body":{"guards/AuthenticateGuard.html":{},"interfaces/Request.html":{},"controllers/UserController.html":{}}}],["req.session.userid",{"_index":277,"title":{},"body":{"controllers/FileServiceController.html":{},"controllers/PlansController.html":{},"controllers/UserController.html":{}}}],["req.session.username",{"_index":822,"title":{},"body":{"controllers/UserController.html":{}}}],["req.user",{"_index":84,"title":{},"body":{"guards/AuthenticateGuard.html":{},"interfaces/Request.html":{}}}],["req.user._id",{"_index":297,"title":{},"body":{"controllers/FileServiceController.html":{}}}],["req.user.isadmin",{"_index":665,"title":{},"body":{"controllers/PlansController.html":{},"controllers/UserController.html":{}}}],["request",{"_index":58,"title":{"interfaces/Request.html":{}},"body":{"guards/AuthenticateGuard.html":{},"controllers/DashboardController.html":{},"controllers/FileServiceController.html":{},"guards/IsLoggedInGuard.html":{},"controllers/PlansController.html":{},"interfaces/Request.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["request.session.isloggedin",{"_index":449,"title":{},"body":{"guards/IsLoggedInGuard.html":{}}}],["requestorder",{"_index":561,"title":{},"body":{"injectables/PaymentService.html":{}}}],["requestorder(orderdetails",{"_index":574,"title":{},"body":{"injectables/PaymentService.html":{}}}],["requestorderresult",{"_index":586,"title":{},"body":{"injectables/PaymentService.html":{}}}],["requestorderresult.data.trackid",{"_index":597,"title":{},"body":{"injectables/PaymentService.html":{}}}],["required",{"_index":200,"title":{},"body":{"classes/FileModel.html":{},"classes/OrderModel.html":{},"classes/ServicePlansModel.html":{},"classes/UserModel.html":{},"classes/UsersPlanModel.html":{}}}],["res",{"_index":76,"title":{},"body":{"guards/AuthenticateGuard.html":{},"controllers/FileServiceController.html":{},"classes/IsLoggedInExceptionFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"controllers/PaymentController.html":{},"controllers/PlansController.html":{},"interfaces/Request.html":{},"classes/UnAuthenticatedExceptionFilter.html":{},"controllers/UserController.html":{}}}],["res.attachment(downloadresult.fileinfo.name",{"_index":314,"title":{},"body":{"controllers/FileServiceController.html":{}}}],["res.contenttype(downloadresult.fileinfo.mimetype",{"_index":313,"title":{},"body":{"controllers/FileServiceController.html":{}}}],["res.locals.session",{"_index":85,"title":{},"body":{"guards/AuthenticateGuard.html":{},"interfaces/Request.html":{}}}],["res.locals.user",{"_index":87,"title":{},"body":{"guards/AuthenticateGuard.html":{},"interfaces/Request.html":{}}}],["res.redirect",{"_index":786,"title":{},"body":{"classes/UnAuthenticatedExceptionFilter.html":{}}}],["res.redirect('/v1.0/dashboard",{"_index":445,"title":{},"body":{"classes/IsLoggedInExceptionFilter.html":{},"controllers/UserController.html":{}}}],["res.redirect('/v1.0/files",{"_index":302,"title":{},"body":{"controllers/FileServiceController.html":{}}}],["res.redirect('/v1.0/plans",{"_index":654,"title":{},"body":{"controllers/PlansController.html":{}}}],["res.redirect('/v1.0/user/profile",{"_index":833,"title":{},"body":{"controllers/UserController.html":{}}}],["res.redirect(redirecturl",{"_index":670,"title":{},"body":{"controllers/PlansController.html":{}}}],["res.render('others/index",{"_index":824,"title":{},"body":{"controllers/UserController.html":{}}}],["res.render('panel/files",{"_index":309,"title":{},"body":{"controllers/FileServiceController.html":{}}}],["res.render('panel/plans",{"_index":655,"title":{},"body":{"controllers/PlansController.html":{}}}],["res.render('panel/profile",{"_index":831,"title":{},"body":{"controllers/UserController.html":{}}}],["res.render('panel/receipt",{"_index":534,"title":{},"body":{"controllers/PaymentController.html":{}}}],["res.send",{"_index":280,"title":{},"body":{"controllers/FileServiceController.html":{}}}],["res.send(output",{"_index":667,"title":{},"body":{"controllers/PlansController.html":{}}}],["res.status(404).render('404",{"_index":478,"title":{},"body":{"classes/NotFoundExceptionFilter.html":{}}}],["reset",{"_index":14,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"modules/FileServiceModule.html":{},"modules/PaymentModule.html":{},"modules/PlansModule.html":{},"modules/UserModule.html":{},"modules/V1Module.html":{},"overview.html":{}}}],["response",{"_index":59,"title":{},"body":{"guards/AuthenticateGuard.html":{},"controllers/FileServiceController.html":{},"classes/IsLoggedInExceptionFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"controllers/PaymentController.html":{},"controllers/PlansController.html":{},"interfaces/Request.html":{},"classes/UnAuthenticatedExceptionFilter.html":{},"controllers/UserController.html":{}}}],["result",{"_index":278,"title":{},"body":{"controllers/FileServiceController.html":{},"injectables/PaymentService.html":{}}}],["result.data",{"_index":610,"title":{},"body":{"injectables/PaymentService.html":{}}}],["result.docs.map((item",{"_index":285,"title":{},"body":{"controllers/FileServiceController.html":{}}}],["result.totaldocs",{"_index":282,"title":{},"body":{"controllers/FileServiceController.html":{}}}],["results",{"_index":31,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthenticateGuard.html":{},"classes/CallBackDTO.html":{},"classes/CreatePlanDTO.html":{},"controllers/DashboardController.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"classes/FileModel.html":{},"controllers/FileServiceController.html":{},"modules/FileServiceModule.html":{},"injectables/FileServiceService.html":{},"classes/IsLoggedInException.html":{},"classes/IsLoggedInExceptionFilter.html":{},"guards/IsLoggedInGuard.html":{},"classes/LoginDTO.html":{},"classes/NotFoundExceptionFilter.html":{},"classes/OrderModel.html":{},"controllers/OthersController.html":{},"modules/OthersModule.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"controllers/PlansController.html":{},"modules/PlansModule.html":{},"injectables/PlansService.html":{},"interfaces/Request.html":{},"injectables/S3Service.html":{},"classes/ServicePlansModel.html":{},"classes/SignupDTO.html":{},"classes/UnAuthenticatedException.html":{},"classes/UnAuthenticatedExceptionFilter.html":{},"controllers/UserController.html":{},"classes/UserCreateDTO.html":{},"classes/UserModel.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/UserUpdateDTO.html":{},"classes/UsersPlanModel.html":{},"modules/V1Module.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":88,"title":{},"body":{"guards/AuthenticateGuard.html":{},"controllers/DashboardController.html":{},"controllers/FileServiceController.html":{},"injectables/FileServiceService.html":{},"guards/IsLoggedInGuard.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/PlansController.html":{},"injectables/PlansService.html":{},"interfaces/Request.html":{},"injectables/S3Service.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":55,"title":{},"body":{"guards/AuthenticateGuard.html":{},"controllers/DashboardController.html":{},"controllers/FileServiceController.html":{},"injectables/FileServiceService.html":{},"classes/IsLoggedInExceptionFilter.html":{},"guards/IsLoggedInGuard.html":{},"classes/NotFoundExceptionFilter.html":{},"controllers/OthersController.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/PlansController.html":{},"injectables/PlansService.html":{},"injectables/S3Service.html":{},"classes/UnAuthenticatedExceptionFilter.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["row",{"_index":661,"title":{},"body":{"controllers/PlansController.html":{}}}],["row.push",{"_index":666,"title":{},"body":{"controllers/PlansController.html":{}}}],["rrn",{"_index":483,"title":{},"body":{"classes/OrderModel.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{}}}],["run",{"_index":1008,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":978,"title":{},"body":{"dependencies.html":{}}}],["s3",{"_index":724,"title":{},"body":{"injectables/S3Service.html":{}}}],["s3.service",{"_index":331,"title":{},"body":{"modules/FileServiceModule.html":{},"injectables/FileServiceService.html":{}}}],["s3service",{"_index":322,"title":{"injectables/S3Service.html":{}},"body":{"modules/FileServiceModule.html":{},"injectables/FileServiceService.html":{},"injectables/S3Service.html":{},"coverage.html":{},"overview.html":{}}}],["saleable",{"_index":769,"title":{},"body":{"classes/ServicePlansModel.html":{},"miscellaneous/enumerations.html":{}}}],["saltorrounds",{"_index":894,"title":{},"body":{"injectables/UserService.html":{}}}],["scalable",{"_index":995,"title":{},"body":{"index.html":{}}}],["schema",{"_index":212,"title":{},"body":{"classes/FileModel.html":{},"classes/OrderModel.html":{},"classes/ServicePlansModel.html":{},"classes/UserModel.html":{},"classes/UsersPlanModel.html":{},"miscellaneous/variables.html":{}}}],["schemafactory",{"_index":213,"title":{},"body":{"classes/FileModel.html":{},"classes/OrderModel.html":{},"classes/ServicePlansModel.html":{},"classes/UserModel.html":{},"classes/UsersPlanModel.html":{}}}],["schemafactory.createforclass(filemodel",{"_index":229,"title":{},"body":{"classes/FileModel.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(ordermodel",{"_index":500,"title":{},"body":{"classes/OrderModel.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(serviceplansmodel",{"_index":772,"title":{},"body":{"classes/ServicePlansModel.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(usermodel",{"_index":865,"title":{},"body":{"classes/UserModel.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(usersplanmodel",{"_index":919,"title":{},"body":{"classes/UsersPlanModel.html":{},"miscellaneous/variables.html":{}}}],["scope",{"_index":850,"title":{},"body":{"classes/UserModel.html":{}}}],["sdk",{"_index":748,"title":{},"body":{"injectables/S3Service.html":{},"dependencies.html":{}}}],["secretaccesskey",{"_index":738,"title":{},"body":{"injectables/S3Service.html":{}}}],["select",{"_index":389,"title":{},"body":{"injectables/FileServiceService.html":{},"injectables/PaymentService.html":{}}}],["server",{"_index":996,"title":{},"body":{"index.html":{}}}],["service",{"_index":751,"title":{},"body":{"injectables/S3Service.html":{},"classes/ServicePlansModel.html":{}}}],["service.controller",{"_index":324,"title":{},"body":{"modules/FileServiceModule.html":{}}}],["service.controller.ts",{"_index":236,"title":{},"body":{"controllers/FileServiceController.html":{},"coverage.html":{}}}],["service.controller.ts:104",{"_index":245,"title":{},"body":{"controllers/FileServiceController.html":{}}}],["service.controller.ts:25",{"_index":256,"title":{},"body":{"controllers/FileServiceController.html":{}}}],["service.controller.ts:29",{"_index":253,"title":{},"body":{"controllers/FileServiceController.html":{}}}],["service.controller.ts:60",{"_index":260,"title":{},"body":{"controllers/FileServiceController.html":{}}}],["service.controller.ts:94",{"_index":249,"title":{},"body":{"controllers/FileServiceController.html":{}}}],["service.module",{"_index":183,"title":{},"body":{"modules/DashboardModule.html":{},"modules/UserModule.html":{},"modules/V1Module.html":{}}}],["service.module.ts",{"_index":323,"title":{},"body":{"modules/FileServiceModule.html":{}}}],["service.service",{"_index":160,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/FileServiceController.html":{},"modules/FileServiceModule.html":{},"controllers/UserController.html":{}}}],["service.service.ts",{"_index":335,"title":{},"body":{"injectables/FileServiceService.html":{},"coverage.html":{}}}],["service.service.ts:109",{"_index":351,"title":{},"body":{"injectables/FileServiceService.html":{}}}],["service.service.ts:134",{"_index":348,"title":{},"body":{"injectables/FileServiceService.html":{}}}],["service.service.ts:16",{"_index":372,"title":{},"body":{"injectables/FileServiceService.html":{}}}],["service.service.ts:19",{"_index":346,"title":{},"body":{"injectables/FileServiceService.html":{}}}],["service.service.ts:22",{"_index":363,"title":{},"body":{"injectables/FileServiceService.html":{}}}],["service.service.ts:33",{"_index":359,"title":{},"body":{"injectables/FileServiceService.html":{}}}],["service.service.ts:40",{"_index":354,"title":{},"body":{"injectables/FileServiceService.html":{}}}],["service.service.ts:58",{"_index":357,"title":{},"body":{"injectables/FileServiceService.html":{}}}],["service.service.ts:72",{"_index":370,"title":{},"body":{"injectables/FileServiceService.html":{}}}],["service.service.ts:83",{"_index":367,"title":{},"body":{"injectables/FileServiceService.html":{}}}],["service/file",{"_index":159,"title":{},"body":{"controllers/DashboardController.html":{},"modules/DashboardModule.html":{},"controllers/FileServiceController.html":{},"modules/FileServiceModule.html":{},"injectables/FileServiceService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"modules/V1Module.html":{},"coverage.html":{}}}],["service/s3.service.ts",{"_index":723,"title":{},"body":{"injectables/S3Service.html":{},"coverage.html":{}}}],["service/s3.service.ts:15",{"_index":733,"title":{},"body":{"injectables/S3Service.html":{}}}],["service/s3.service.ts:34",{"_index":729,"title":{},"body":{"injectables/S3Service.html":{}}}],["service/s3.service.ts:40",{"_index":731,"title":{},"body":{"injectables/S3Service.html":{}}}],["service/s3.service.ts:6",{"_index":746,"title":{},"body":{"injectables/S3Service.html":{}}}],["service?authsource=admin",{"_index":28,"title":{},"body":{"modules/AppModule.html":{}}}],["serviceplansdefinition",{"_index":551,"title":{},"body":{"modules/PaymentModule.html":{},"modules/PlansModule.html":{},"classes/ServicePlansModel.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["serviceplansdocument",{"_index":376,"title":{},"body":{"injectables/FileServiceService.html":{},"controllers/PaymentController.html":{},"classes/ServicePlansModel.html":{},"miscellaneous/typealiases.html":{}}}],["serviceplansdocument).name",{"_index":537,"title":{},"body":{"controllers/PaymentController.html":{}}}],["serviceplansdocument).size",{"_index":394,"title":{},"body":{"injectables/FileServiceService.html":{}}}],["serviceplansmodel",{"_index":487,"title":{"classes/ServicePlansModel.html":{}},"body":{"classes/OrderModel.html":{},"injectables/PaymentService.html":{},"injectables/PlansService.html":{},"classes/ServicePlansModel.html":{},"injectables/UserService.html":{},"classes/UsersPlanModel.html":{},"coverage.html":{}}}],["serviceplansmodel.name",{"_index":774,"title":{},"body":{"classes/ServicePlansModel.html":{},"miscellaneous/variables.html":{}}}],["serviceplansschema",{"_index":771,"title":{},"body":{"classes/ServicePlansModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["serviceplansschema.plugin(mongoosepaginate",{"_index":773,"title":{},"body":{"classes/ServicePlansModel.html":{}}}],["servicestypes",{"_index":133,"title":{},"body":{"classes/CreatePlanDTO.html":{},"injectables/PlansService.html":{},"classes/ServicePlansModel.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["servicestypes.free",{"_index":699,"title":{},"body":{"injectables/PlansService.html":{}}}],["servicestypes.starter",{"_index":700,"title":{},"body":{"injectables/PlansService.html":{},"injectables/UserService.html":{}}}],["session",{"_index":94,"title":{},"body":{"guards/AuthenticateGuard.html":{},"interfaces/Request.html":{},"dependencies.html":{}}}],["showdashboard",{"_index":150,"title":{},"body":{"controllers/DashboardController.html":{}}}],["showdashboard(@req",{"_index":166,"title":{},"body":{"controllers/DashboardController.html":{}}}],["showdashboard(req",{"_index":151,"title":{},"body":{"controllers/DashboardController.html":{}}}],["showplansindex",{"_index":631,"title":{},"body":{"controllers/PlansController.html":{}}}],["side",{"_index":997,"title":{},"body":{"index.html":{}}}],["signup",{"_index":792,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["signup(body",{"_index":806,"title":{},"body":{"controllers/UserController.html":{}}}],["signup(email",{"_index":883,"title":{},"body":{"injectables/UserService.html":{}}}],["signupdto",{"_index":461,"title":{"classes/SignupDTO.html":{}},"body":{"classes/LoginDTO.html":{},"classes/SignupDTO.html":{},"controllers/UserController.html":{},"classes/UserCreateDTO.html":{},"classes/UserUpdateDTO.html":{},"coverage.html":{}}}],["size",{"_index":116,"title":{},"body":{"classes/CreatePlanDTO.html":{},"classes/FileModel.html":{},"controllers/FileServiceController.html":{},"injectables/FileServiceService.html":{},"injectables/PlansService.html":{},"classes/ServicePlansModel.html":{}}}],["sizeinmb",{"_index":286,"title":{},"body":{"controllers/FileServiceController.html":{}}}],["sort",{"_index":379,"title":{},"body":{"injectables/FileServiceService.html":{}}}],["source",{"_index":17,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthenticateGuard.html":{},"classes/CallBackDTO.html":{},"classes/CreatePlanDTO.html":{},"controllers/DashboardController.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"classes/FileModel.html":{},"controllers/FileServiceController.html":{},"modules/FileServiceModule.html":{},"injectables/FileServiceService.html":{},"classes/IsLoggedInException.html":{},"classes/IsLoggedInExceptionFilter.html":{},"guards/IsLoggedInGuard.html":{},"classes/LoginDTO.html":{},"classes/NotFoundExceptionFilter.html":{},"classes/OrderModel.html":{},"controllers/OthersController.html":{},"modules/OthersModule.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"controllers/PlansController.html":{},"modules/PlansModule.html":{},"injectables/PlansService.html":{},"interfaces/Request.html":{},"injectables/S3Service.html":{},"classes/ServicePlansModel.html":{},"classes/SignupDTO.html":{},"classes/UnAuthenticatedException.html":{},"classes/UnAuthenticatedExceptionFilter.html":{},"controllers/UserController.html":{},"classes/UserCreateDTO.html":{},"classes/UserModel.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/UserUpdateDTO.html":{},"classes/UsersPlanModel.html":{},"modules/V1Module.html":{},"index.html":{}}}],["sponsors",{"_index":1025,"title":{},"body":{"index.html":{}}}],["src/.../file.model.ts",{"_index":984,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":987,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../order.model.ts",{"_index":982,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../serviceplans.model.ts",{"_index":983,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../user.model.ts",{"_index":1060,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../usersplan.model.ts",{"_index":985,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../utils.ts",{"_index":1062,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":19,"title":{},"body":{"modules/AppModule.html":{}}}],["src/component/exception",{"_index":434,"title":{},"body":{"classes/IsLoggedInExceptionFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"classes/UnAuthenticatedExceptionFilter.html":{},"coverage.html":{}}}],["src/component/exceptions/isloggedin.exception.ts",{"_index":427,"title":{},"body":{"classes/IsLoggedInException.html":{},"coverage.html":{}}}],["src/component/exceptions/isloggedin.exception.ts:3",{"_index":430,"title":{},"body":{"classes/IsLoggedInException.html":{}}}],["src/component/exceptions/unauthenticated.exception.ts",{"_index":778,"title":{},"body":{"classes/UnAuthenticatedException.html":{},"coverage.html":{}}}],["src/component/exceptions/unauthenticated.exception.ts:3",{"_index":779,"title":{},"body":{"classes/UnAuthenticatedException.html":{}}}],["src/component/guards/authenticate.guard.ts",{"_index":36,"title":{},"body":{"guards/AuthenticateGuard.html":{},"interfaces/Request.html":{},"coverage.html":{}}}],["src/component/guards/authenticate.guard.ts:13",{"_index":53,"title":{},"body":{"guards/AuthenticateGuard.html":{}}}],["src/component/guards/authenticate.guard.ts:9",{"_index":45,"title":{},"body":{"guards/AuthenticateGuard.html":{}}}],["src/component/guards/isloggedin.guard.ts",{"_index":447,"title":{},"body":{"guards/IsLoggedInGuard.html":{},"coverage.html":{}}}],["src/component/guards/isloggedin.guard.ts:6",{"_index":448,"title":{},"body":{"guards/IsLoggedInGuard.html":{}}}],["src/main.ts",{"_index":936,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/models/file.model.ts",{"_index":188,"title":{},"body":{"classes/FileModel.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/models/file.model.ts:17",{"_index":201,"title":{},"body":{"classes/FileModel.html":{}}}],["src/models/file.model.ts:20",{"_index":209,"title":{},"body":{"classes/FileModel.html":{}}}],["src/models/file.model.ts:23",{"_index":202,"title":{},"body":{"classes/FileModel.html":{}}}],["src/models/file.model.ts:26",{"_index":197,"title":{},"body":{"classes/FileModel.html":{}}}],["src/models/file.model.ts:33",{"_index":206,"title":{},"body":{"classes/FileModel.html":{}}}],["src/models/file.model.ts:36",{"_index":199,"title":{},"body":{"classes/FileModel.html":{}}}],["src/models/file.model.ts:38",{"_index":194,"title":{},"body":{"classes/FileModel.html":{}}}],["src/models/file.model.ts:40",{"_index":207,"title":{},"body":{"classes/FileModel.html":{}}}],["src/models/order.model.ts",{"_index":480,"title":{},"body":{"classes/OrderModel.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/models/order.model.ts:13",{"_index":493,"title":{},"body":{"classes/OrderModel.html":{}}}],["src/models/order.model.ts:16",{"_index":488,"title":{},"body":{"classes/OrderModel.html":{}}}],["src/models/order.model.ts:19",{"_index":484,"title":{},"body":{"classes/OrderModel.html":{}}}],["src/models/order.model.ts:22",{"_index":489,"title":{},"body":{"classes/OrderModel.html":{}}}],["src/models/order.model.ts:25",{"_index":485,"title":{},"body":{"classes/OrderModel.html":{}}}],["src/models/order.model.ts:32",{"_index":491,"title":{},"body":{"classes/OrderModel.html":{}}}],["src/models/order.model.ts:34",{"_index":486,"title":{},"body":{"classes/OrderModel.html":{}}}],["src/models/order.model.ts:36",{"_index":492,"title":{},"body":{"classes/OrderModel.html":{}}}],["src/models/serviceplans.model.ts",{"_index":757,"title":{},"body":{"classes/ServicePlansModel.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/models/serviceplans.model.ts:21",{"_index":760,"title":{},"body":{"classes/ServicePlansModel.html":{}}}],["src/models/serviceplans.model.ts:24",{"_index":762,"title":{},"body":{"classes/ServicePlansModel.html":{}}}],["src/models/serviceplans.model.ts:27",{"_index":759,"title":{},"body":{"classes/ServicePlansModel.html":{}}}],["src/models/serviceplans.model.ts:30",{"_index":761,"title":{},"body":{"classes/ServicePlansModel.html":{}}}],["src/models/serviceplans.model.ts:33",{"_index":764,"title":{},"body":{"classes/ServicePlansModel.html":{}}}],["src/models/serviceplans.model.ts:40",{"_index":763,"title":{},"body":{"classes/ServicePlansModel.html":{}}}],["src/models/serviceplans.model.ts:42",{"_index":758,"title":{},"body":{"classes/ServicePlansModel.html":{}}}],["src/models/serviceplans.model.ts:44",{"_index":765,"title":{},"body":{"classes/ServicePlansModel.html":{}}}],["src/models/user.model.ts",{"_index":849,"title":{},"body":{"classes/UserModel.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/models/user.model.ts:12",{"_index":853,"title":{},"body":{"classes/UserModel.html":{}}}],["src/models/user.model.ts:14",{"_index":857,"title":{},"body":{"classes/UserModel.html":{}}}],["src/models/user.model.ts:16",{"_index":854,"title":{},"body":{"classes/UserModel.html":{}}}],["src/models/user.model.ts:18",{"_index":856,"title":{},"body":{"classes/UserModel.html":{}}}],["src/models/user.model.ts:20",{"_index":851,"title":{},"body":{"classes/UserModel.html":{}}}],["src/models/user.model.ts:22",{"_index":861,"title":{},"body":{"classes/UserModel.html":{}}}],["src/models/user.model.ts:24",{"_index":855,"title":{},"body":{"classes/UserModel.html":{}}}],["src/models/user.model.ts:26",{"_index":859,"title":{},"body":{"classes/UserModel.html":{}}}],["src/models/user.model.ts:32",{"_index":860,"title":{},"body":{"classes/UserModel.html":{}}}],["src/models/usersplan.model.ts",{"_index":911,"title":{},"body":{"classes/UsersPlanModel.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/models/usersplan.model.ts:13",{"_index":917,"title":{},"body":{"classes/UsersPlanModel.html":{}}}],["src/models/usersplan.model.ts:16",{"_index":914,"title":{},"body":{"classes/UsersPlanModel.html":{}}}],["src/models/usersplan.model.ts:23",{"_index":915,"title":{},"body":{"classes/UsersPlanModel.html":{}}}],["src/models/usersplan.model.ts:25",{"_index":913,"title":{},"body":{"classes/UsersPlanModel.html":{}}}],["src/models/usersplan.model.ts:27",{"_index":912,"title":{},"body":{"classes/UsersPlanModel.html":{}}}],["src/models/usersplan.model.ts:29",{"_index":916,"title":{},"body":{"classes/UsersPlanModel.html":{}}}],["src/utils.ts",{"_index":943,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/v1/dashboard/dashboard.controller.ts",{"_index":147,"title":{},"body":{"controllers/DashboardController.html":{},"coverage.html":{}}}],["src/v1/dashboard/dashboard.controller.ts:12",{"_index":153,"title":{},"body":{"controllers/DashboardController.html":{}}}],["src/v1/dashboard/dashboard.module.ts",{"_index":179,"title":{},"body":{"modules/DashboardModule.html":{}}}],["src/v1/dashboard/dashboard.service.ts",{"_index":186,"title":{},"body":{"injectables/DashboardService.html":{},"coverage.html":{}}}],["src/v1/file",{"_index":235,"title":{},"body":{"controllers/FileServiceController.html":{},"modules/FileServiceModule.html":{},"injectables/FileServiceService.html":{},"injectables/S3Service.html":{},"coverage.html":{}}}],["src/v1/others/others.controller.ts",{"_index":506,"title":{},"body":{"controllers/OthersController.html":{},"coverage.html":{}}}],["src/v1/others/others.controller.ts:9",{"_index":509,"title":{},"body":{"controllers/OthersController.html":{}}}],["src/v1/others/others.module.ts",{"_index":515,"title":{},"body":{"modules/OthersModule.html":{}}}],["src/v1/payment/payment.controller.ts",{"_index":518,"title":{},"body":{"controllers/PaymentController.html":{},"coverage.html":{}}}],["src/v1/payment/payment.controller.ts:11",{"_index":523,"title":{},"body":{"controllers/PaymentController.html":{}}}],["src/v1/payment/payment.dto.ts",{"_index":104,"title":{},"body":{"classes/CallBackDTO.html":{},"coverage.html":{}}}],["src/v1/payment/payment.dto.ts:2",{"_index":109,"title":{},"body":{"classes/CallBackDTO.html":{}}}],["src/v1/payment/payment.dto.ts:3",{"_index":110,"title":{},"body":{"classes/CallBackDTO.html":{}}}],["src/v1/payment/payment.dto.ts:4",{"_index":111,"title":{},"body":{"classes/CallBackDTO.html":{}}}],["src/v1/payment/payment.module.ts",{"_index":546,"title":{},"body":{"modules/PaymentModule.html":{}}}],["src/v1/payment/payment.service.ts",{"_index":555,"title":{},"body":{"injectables/PaymentService.html":{},"coverage.html":{}}}],["src/v1/payment/payment.service.ts:110",{"_index":569,"title":{},"body":{"injectables/PaymentService.html":{}}}],["src/v1/payment/payment.service.ts:16",{"_index":577,"title":{},"body":{"injectables/PaymentService.html":{}}}],["src/v1/payment/payment.service.ts:18",{"_index":579,"title":{},"body":{"injectables/PaymentService.html":{}}}],["src/v1/payment/payment.service.ts:20",{"_index":564,"title":{},"body":{"injectables/PaymentService.html":{}}}],["src/v1/payment/payment.service.ts:23",{"_index":575,"title":{},"body":{"injectables/PaymentService.html":{}}}],["src/v1/payment/payment.service.ts:49",{"_index":567,"title":{},"body":{"injectables/PaymentService.html":{}}}],["src/v1/payment/payment.service.ts:69",{"_index":573,"title":{},"body":{"injectables/PaymentService.html":{}}}],["src/v1/payment/payment.service.ts:79",{"_index":571,"title":{},"body":{"injectables/PaymentService.html":{}}}],["src/v1/plans/plan.dto.ts",{"_index":113,"title":{},"body":{"classes/CreatePlanDTO.html":{},"coverage.html":{}}}],["src/v1/plans/plan.dto.ts:15",{"_index":127,"title":{},"body":{"classes/CreatePlanDTO.html":{}}}],["src/v1/plans/plan.dto.ts:22",{"_index":125,"title":{},"body":{"classes/CreatePlanDTO.html":{}}}],["src/v1/plans/plan.dto.ts:29",{"_index":132,"title":{},"body":{"classes/CreatePlanDTO.html":{}}}],["src/v1/plans/plan.dto.ts:34",{"_index":135,"title":{},"body":{"classes/CreatePlanDTO.html":{}}}],["src/v1/plans/plan.dto.ts:40",{"_index":129,"title":{},"body":{"classes/CreatePlanDTO.html":{}}}],["src/v1/plans/plans.controller.ts",{"_index":626,"title":{},"body":{"controllers/PlansController.html":{},"coverage.html":{}}}],["src/v1/plans/plans.controller.ts:25",{"_index":642,"title":{},"body":{"controllers/PlansController.html":{}}}],["src/v1/plans/plans.controller.ts:29",{"_index":634,"title":{},"body":{"controllers/PlansController.html":{}}}],["src/v1/plans/plans.controller.ts:44",{"_index":637,"title":{},"body":{"controllers/PlansController.html":{}}}],["src/v1/plans/plans.controller.ts:78",{"_index":640,"title":{},"body":{"controllers/PlansController.html":{}}}],["src/v1/plans/plans.module.ts",{"_index":676,"title":{},"body":{"modules/PlansModule.html":{}}}],["src/v1/plans/plans.service.ts",{"_index":679,"title":{},"body":{"injectables/PlansService.html":{},"coverage.html":{}}}],["src/v1/plans/plans.service.ts:21",{"_index":684,"title":{},"body":{"injectables/PlansService.html":{}}}],["src/v1/plans/plans.service.ts:25",{"_index":692,"title":{},"body":{"injectables/PlansService.html":{}}}],["src/v1/plans/plans.service.ts:28",{"_index":693,"title":{},"body":{"injectables/PlansService.html":{}}}],["src/v1/plans/plans.service.ts:30",{"_index":689,"title":{},"body":{"injectables/PlansService.html":{}}}],["src/v1/plans/plans.service.ts:70",{"_index":687,"title":{},"body":{"injectables/PlansService.html":{}}}],["src/v1/plans/plans.service.ts:79",{"_index":691,"title":{},"body":{"injectables/PlansService.html":{}}}],["src/v1/user/user.controller.ts",{"_index":788,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/v1/user/user.controller.ts:111",{"_index":796,"title":{},"body":{"controllers/UserController.html":{}}}],["src/v1/user/user.controller.ts:136",{"_index":805,"title":{},"body":{"controllers/UserController.html":{}}}],["src/v1/user/user.controller.ts:28",{"_index":802,"title":{},"body":{"controllers/UserController.html":{}}}],["src/v1/user/user.controller.ts:50",{"_index":808,"title":{},"body":{"controllers/UserController.html":{}}}],["src/v1/user/user.controller.ts:82",{"_index":799,"title":{},"body":{"controllers/UserController.html":{}}}],["src/v1/user/user.controller.ts:92",{"_index":811,"title":{},"body":{"controllers/UserController.html":{}}}],["src/v1/user/user.dto.ts",{"_index":451,"title":{},"body":{"classes/LoginDTO.html":{},"classes/SignupDTO.html":{},"classes/UserCreateDTO.html":{},"classes/UserUpdateDTO.html":{},"coverage.html":{}}}],["src/v1/user/user.dto.ts:105",{"_index":845,"title":{},"body":{"classes/UserCreateDTO.html":{}}}],["src/v1/user/user.dto.ts:17",{"_index":776,"title":{},"body":{"classes/SignupDTO.html":{}}}],["src/v1/user/user.dto.ts:23",{"_index":777,"title":{},"body":{"classes/SignupDTO.html":{}}}],["src/v1/user/user.dto.ts:29",{"_index":775,"title":{},"body":{"classes/SignupDTO.html":{}}}],["src/v1/user/user.dto.ts:36",{"_index":455,"title":{},"body":{"classes/LoginDTO.html":{}}}],["src/v1/user/user.dto.ts:42",{"_index":458,"title":{},"body":{"classes/LoginDTO.html":{}}}],["src/v1/user/user.dto.ts:50",{"_index":910,"title":{},"body":{"classes/UserUpdateDTO.html":{}}}],["src/v1/user/user.dto.ts:54",{"_index":908,"title":{},"body":{"classes/UserUpdateDTO.html":{}}}],["src/v1/user/user.dto.ts:58",{"_index":909,"title":{},"body":{"classes/UserUpdateDTO.html":{}}}],["src/v1/user/user.dto.ts:62",{"_index":907,"title":{},"body":{"classes/UserUpdateDTO.html":{}}}],["src/v1/user/user.dto.ts:70",{"_index":848,"title":{},"body":{"classes/UserCreateDTO.html":{}}}],["src/v1/user/user.dto.ts:74",{"_index":843,"title":{},"body":{"classes/UserCreateDTO.html":{}}}],["src/v1/user/user.dto.ts:78",{"_index":846,"title":{},"body":{"classes/UserCreateDTO.html":{}}}],["src/v1/user/user.dto.ts:82",{"_index":841,"title":{},"body":{"classes/UserCreateDTO.html":{}}}],["src/v1/user/user.dto.ts:87",{"_index":842,"title":{},"body":{"classes/UserCreateDTO.html":{}}}],["src/v1/user/user.dto.ts:93",{"_index":847,"title":{},"body":{"classes/UserCreateDTO.html":{}}}],["src/v1/user/user.dto.ts:99",{"_index":840,"title":{},"body":{"classes/UserCreateDTO.html":{}}}],["src/v1/user/user.module.ts",{"_index":871,"title":{},"body":{"modules/UserModule.html":{}}}],["src/v1/user/user.service.ts",{"_index":873,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/v1/user/user.service.ts:22",{"_index":890,"title":{},"body":{"injectables/UserService.html":{}}}],["src/v1/user/user.service.ts:24",{"_index":889,"title":{},"body":{"injectables/UserService.html":{}}}],["src/v1/user/user.service.ts:26",{"_index":888,"title":{},"body":{"injectables/UserService.html":{}}}],["src/v1/user/user.service.ts:27",{"_index":884,"title":{},"body":{"injectables/UserService.html":{}}}],["src/v1/user/user.service.ts:45",{"_index":882,"title":{},"body":{"injectables/UserService.html":{}}}],["src/v1/user/user.service.ts:57",{"_index":878,"title":{},"body":{"injectables/UserService.html":{}}}],["src/v1/user/user.service.ts:72",{"_index":887,"title":{},"body":{"injectables/UserService.html":{}}}],["src/v1/user/user.service.ts:80",{"_index":880,"title":{},"body":{"injectables/UserService.html":{}}}],["src/v1/v1.module.ts",{"_index":925,"title":{},"body":{"modules/V1Module.html":{}}}],["start",{"_index":274,"title":{},"body":{"controllers/FileServiceController.html":{},"controllers/PlansController.html":{},"index.html":{}}}],["start:dev",{"_index":1011,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":1013,"title":{},"body":{"index.html":{}}}],["started",{"_index":989,"title":{"index.html":{}},"body":{}}],["starter",{"_index":767,"title":{},"body":{"classes/ServicePlansModel.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["statements",{"_index":933,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":106,"title":{},"body":{"classes/CallBackDTO.html":{},"classes/FileModel.html":{},"injectables/FileServiceService.html":{},"classes/OrderModel.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"injectables/PlansService.html":{},"classes/ServicePlansModel.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{},"classes/UsersPlanModel.html":{}}}],["statustypes",{"_index":203,"title":{},"body":{"classes/FileModel.html":{},"injectables/FileServiceService.html":{},"injectables/PaymentService.html":{},"injectables/PlansService.html":{},"classes/ServicePlansModel.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{},"classes/UsersPlanModel.html":{},"miscellaneous/enumerations.html":{}}}],["statustypes.active",{"_index":227,"title":{},"body":{"classes/FileModel.html":{},"injectables/FileServiceService.html":{},"injectables/PaymentService.html":{},"injectables/PlansService.html":{},"classes/ServicePlansModel.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{},"classes/UsersPlanModel.html":{}}}],["statustypes.deleted",{"_index":425,"title":{},"body":{"injectables/FileServiceService.html":{}}}],["statustypes.expired",{"_index":707,"title":{},"body":{"injectables/PlansService.html":{}}}],["statustypes.inprogress",{"_index":408,"title":{},"body":{"injectables/FileServiceService.html":{}}}],["stay",{"_index":1035,"title":{},"body":{"index.html":{}}}],["storage",{"_index":334,"title":{},"body":{"modules/FileServiceModule.html":{}}}],["storage.iran.liara.space",{"_index":735,"title":{},"body":{"injectables/S3Service.html":{}}}],["stream",{"_index":417,"title":{},"body":{"injectables/FileServiceService.html":{}}}],["stream.on('end",{"_index":420,"title":{},"body":{"injectables/FileServiceService.html":{}}}],["string",{"_index":98,"title":{},"body":{"guards/AuthenticateGuard.html":{},"classes/CallBackDTO.html":{},"classes/CreatePlanDTO.html":{},"classes/FileModel.html":{},"controllers/FileServiceController.html":{},"injectables/FileServiceService.html":{},"classes/LoginDTO.html":{},"classes/OrderModel.html":{},"injectables/PaymentService.html":{},"controllers/PlansController.html":{},"injectables/PlansService.html":{},"interfaces/Request.html":{},"injectables/S3Service.html":{},"classes/ServicePlansModel.html":{},"classes/SignupDTO.html":{},"classes/UserCreateDTO.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{},"classes/UserUpdateDTO.html":{},"classes/UsersPlanModel.html":{}}}],["success",{"_index":107,"title":{},"body":{"classes/CallBackDTO.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{}}}],["super('loggedin",{"_index":431,"title":{},"body":{"classes/IsLoggedInException.html":{}}}],["super('unauthenticated",{"_index":780,"title":{},"body":{"classes/UnAuthenticatedException.html":{}}}],["support",{"_index":1026,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":1046,"title":{},"body":{"modules.html":{}}}],["table",{"_index":949,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":948,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":1015,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":1018,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1017,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1014,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":1024,"title":{},"body":{"index.html":{}}}],["this.activatestarterplans(createduser._id",{"_index":906,"title":{},"body":{"injectables/UserService.html":{}}}],["this.activatestarterplans(user._id",{"_index":898,"title":{},"body":{"injectables/UserService.html":{}}}],["this.confirm(trackid",{"_index":614,"title":{},"body":{"injectables/PaymentService.html":{}}}],["this.fileservice.delete(fileid",{"_index":318,"title":{},"body":{"controllers/FileServiceController.html":{}}}],["this.fileservice.dowload(id",{"_index":312,"title":{},"body":{"controllers/FileServiceController.html":{}}}],["this.fileservice.gettotalstorage(req.session.userid",{"_index":170,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/UserController.html":{}}}],["this.fileservice.getusedstorage(req.session.userid",{"_index":172,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/UserController.html":{}}}],["this.fileservice.getuserfilescount(req.session.userid",{"_index":168,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/UserController.html":{}}}],["this.fileservice.getuserfileslist",{"_index":279,"title":{},"body":{"controllers/FileServiceController.html":{}}}],["this.fileservice.upload",{"_index":301,"title":{},"body":{"controllers/FileServiceController.html":{}}}],["this.fileservice.validatefilesize(userid",{"_index":300,"title":{},"body":{"controllers/FileServiceController.html":{}}}],["this.filesrepo.countdocuments",{"_index":381,"title":{},"body":{"injectables/FileServiceService.html":{}}}],["this.filesrepo.create",{"_index":407,"title":{},"body":{"injectables/FileServiceService.html":{}}}],["this.filesrepo.find",{"_index":399,"title":{},"body":{"injectables/FileServiceService.html":{}}}],["this.filesrepo.findone",{"_index":415,"title":{},"body":{"injectables/FileServiceService.html":{}}}],["this.filesrepo.paginate",{"_index":377,"title":{},"body":{"injectables/FileServiceService.html":{}}}],["this.gettotalstorage(userid",{"_index":403,"title":{},"body":{"injectables/FileServiceService.html":{}}}],["this.getusedstorage(userid",{"_index":401,"title":{},"body":{"injectables/FileServiceService.html":{}}}],["this.ipg",{"_index":587,"title":{},"body":{"injectables/PaymentService.html":{}}}],["this.ipgservice.requestorder",{"_index":721,"title":{},"body":{"injectables/PlansService.html":{}}}],["this.orderrepo.create",{"_index":584,"title":{},"body":{"injectables/PaymentService.html":{}}}],["this.orderrepo.findone",{"_index":603,"title":{},"body":{"injectables/PaymentService.html":{}}}],["this.orderrepo.findoneandupdate",{"_index":611,"title":{},"body":{"injectables/PaymentService.html":{}}}],["this.paymentservice.getorderdetails(trackid",{"_index":533,"title":{},"body":{"controllers/PaymentController.html":{}}}],["this.paymentservice.handlecallback(trackid",{"_index":531,"title":{},"body":{"controllers/PaymentController.html":{}}}],["this.planservice.create(body",{"_index":653,"title":{},"body":{"controllers/PlansController.html":{}}}],["this.planservice.getplanslist",{"_index":657,"title":{},"body":{"controllers/PlansController.html":{}}}],["this.planservice.purchase",{"_index":669,"title":{},"body":{"controllers/PlansController.html":{}}}],["this.plansrepo.create",{"_index":718,"title":{},"body":{"injectables/PlansService.html":{}}}],["this.plansrepo.find",{"_index":902,"title":{},"body":{"injectables/UserService.html":{}}}],["this.plansrepo.findbyid(planid",{"_index":616,"title":{},"body":{"injectables/PaymentService.html":{}}}],["this.plansrepo.findone",{"_index":717,"title":{},"body":{"injectables/PlansService.html":{}}}],["this.plansrepo.paginate",{"_index":697,"title":{},"body":{"injectables/PlansService.html":{}}}],["this.s3",{"_index":749,"title":{},"body":{"injectables/S3Service.html":{}}}],["this.s3service.downloadfroms3",{"_index":418,"title":{},"body":{"injectables/FileServiceService.html":{}}}],["this.s3service.removefroms3(`/${filetoken}/${file.name",{"_index":424,"title":{},"body":{"injectables/FileServiceService.html":{}}}],["this.s3service.uploadtos3",{"_index":409,"title":{},"body":{"injectables/FileServiceService.html":{}}}],["this.usermodel.findbyid(req.session.userid",{"_index":83,"title":{},"body":{"guards/AuthenticateGuard.html":{},"interfaces/Request.html":{}}}],["this.userplansrepo.create",{"_index":617,"title":{},"body":{"injectables/PaymentService.html":{}}}],["this.userplansrepo.find",{"_index":383,"title":{},"body":{"injectables/FileServiceService.html":{},"injectables/PlansService.html":{}}}],["this.userplansrepo.findone",{"_index":720,"title":{},"body":{"injectables/PlansService.html":{}}}],["this.userrepo.create",{"_index":897,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepo.findbyid(id",{"_index":903,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepo.findbyidandupdate(id",{"_index":904,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepo.findone",{"_index":893,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.create(req.session.userid",{"_index":835,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.login(email",{"_index":818,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.signup",{"_index":825,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.updateuserbyid(req.session.userid",{"_index":830,"title":{},"body":{"controllers/UserController.html":{}}}],["throw",{"_index":79,"title":{},"body":{"guards/AuthenticateGuard.html":{},"controllers/FileServiceController.html":{},"injectables/FileServiceService.html":{},"guards/IsLoggedInGuard.html":{},"injectables/PaymentService.html":{},"injectables/PlansService.html":{},"interfaces/Request.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["timestamps",{"_index":225,"title":{},"body":{"classes/FileModel.html":{},"classes/OrderModel.html":{},"classes/ServicePlansModel.html":{},"classes/UserModel.html":{},"classes/UsersPlanModel.html":{}}}],["topromise",{"_index":594,"title":{},"body":{"injectables/PaymentService.html":{}}}],["total",{"_index":390,"title":{},"body":{"injectables/FileServiceService.html":{}}}],["totaldocs",{"_index":709,"title":{},"body":{"injectables/PlansService.html":{}}}],["totalstorage",{"_index":169,"title":{},"body":{"controllers/DashboardController.html":{},"injectables/FileServiceService.html":{},"controllers/UserController.html":{}}}],["totalstorage.value",{"_index":405,"title":{},"body":{"injectables/FileServiceService.html":{}}}],["touch",{"_index":1036,"title":{},"body":{"index.html":{}}}],["trackid",{"_index":108,"title":{},"body":{"classes/CallBackDTO.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{}}}],["transformer",{"_index":143,"title":{},"body":{"classes/CreatePlanDTO.html":{},"classes/LoginDTO.html":{},"classes/SignupDTO.html":{},"classes/UserCreateDTO.html":{},"classes/UserUpdateDTO.html":{},"dependencies.html":{}}}],["true",{"_index":89,"title":{},"body":{"guards/AuthenticateGuard.html":{},"classes/FileModel.html":{},"injectables/FileServiceService.html":{},"guards/IsLoggedInGuard.html":{},"classes/OrderModel.html":{},"interfaces/Request.html":{},"classes/ServicePlansModel.html":{},"controllers/UserController.html":{},"classes/UserModel.html":{},"classes/UsersPlanModel.html":{}}}],["try",{"_index":296,"title":{},"body":{"controllers/FileServiceController.html":{},"controllers/PaymentController.html":{},"controllers/PlansController.html":{},"controllers/UserController.html":{}}}],["twitter",{"_index":1042,"title":{},"body":{"index.html":{}}}],["type",{"_index":48,"title":{},"body":{"guards/AuthenticateGuard.html":{},"classes/CallBackDTO.html":{},"classes/CreatePlanDTO.html":{},"controllers/DashboardController.html":{},"classes/FileModel.html":{},"controllers/FileServiceController.html":{},"injectables/FileServiceService.html":{},"classes/IsLoggedInExceptionFilter.html":{},"guards/IsLoggedInGuard.html":{},"classes/LoginDTO.html":{},"classes/NotFoundExceptionFilter.html":{},"classes/OrderModel.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/PlansController.html":{},"injectables/PlansService.html":{},"interfaces/Request.html":{},"injectables/S3Service.html":{},"classes/ServicePlansModel.html":{},"classes/SignupDTO.html":{},"classes/UnAuthenticatedExceptionFilter.html":{},"controllers/UserController.html":{},"classes/UserCreateDTO.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{},"classes/UserUpdateDTO.html":{},"classes/UsersPlanModel.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type((type",{"_index":472,"title":{},"body":{"classes/LoginDTO.html":{},"classes/SignupDTO.html":{},"classes/UserCreateDTO.html":{},"classes/UserUpdateDTO.html":{}}}],["type(type",{"_index":844,"title":{},"body":{"classes/UserCreateDTO.html":{}}}],["type(undefined",{"_index":124,"title":{},"body":{"classes/CreatePlanDTO.html":{}}}],["typealiases",{"_index":1058,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":63,"title":{},"body":{"guards/AuthenticateGuard.html":{},"classes/FileModel.html":{},"injectables/FileServiceService.html":{},"classes/OrderModel.html":{},"injectables/PaymentService.html":{},"injectables/PlansService.html":{},"interfaces/Request.html":{},"injectables/UserService.html":{},"classes/UsersPlanModel.html":{}}}],["types.objectid",{"_index":96,"title":{},"body":{"guards/AuthenticateGuard.html":{},"classes/FileModel.html":{},"injectables/FileServiceService.html":{},"classes/OrderModel.html":{},"injectables/PaymentService.html":{},"injectables/PlansService.html":{},"interfaces/Request.html":{},"injectables/UserService.html":{},"classes/UsersPlanModel.html":{}}}],["types.objectid(filetoken",{"_index":423,"title":{},"body":{"injectables/FileServiceService.html":{}}}],["types.objectid(planid",{"_index":585,"title":{},"body":{"injectables/PaymentService.html":{}}}],["types.objectid(userid",{"_index":378,"title":{},"body":{"injectables/FileServiceService.html":{},"injectables/PaymentService.html":{},"injectables/PlansService.html":{}}}],["typescript",{"_index":1000,"title":{},"body":{"index.html":{}}}],["unauthenticatedexception",{"_index":61,"title":{"classes/UnAuthenticatedException.html":{}},"body":{"guards/AuthenticateGuard.html":{},"interfaces/Request.html":{},"classes/UnAuthenticatedException.html":{},"classes/UnAuthenticatedExceptionFilter.html":{},"coverage.html":{}}}],["unauthenticatedexceptionfilter",{"_index":782,"title":{"classes/UnAuthenticatedExceptionFilter.html":{}},"body":{"classes/UnAuthenticatedExceptionFilter.html":{},"coverage.html":{}}}],["unauthorizedexception",{"_index":813,"title":{},"body":{"controllers/UserController.html":{}}}],["undefined",{"_index":205,"title":{},"body":{"classes/FileModel.html":{},"classes/OrderModel.html":{},"classes/ServicePlansModel.html":{},"classes/UserModel.html":{},"classes/UsersPlanModel.html":{}}}],["unique",{"_index":852,"title":{},"body":{"classes/UserModel.html":{}}}],["unit",{"_index":397,"title":{},"body":{"injectables/FileServiceService.html":{},"index.html":{}}}],["unknown",{"_index":154,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/FileServiceController.html":{},"injectables/FileServiceService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"injectables/PlansService.html":{},"injectables/S3Service.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["unlicensed",{"_index":1057,"title":{},"body":{"properties.html":{}}}],["update",{"_index":793,"title":{},"body":{"controllers/UserController.html":{}}}],["update(body",{"_index":809,"title":{},"body":{"controllers/UserController.html":{}}}],["updatedat",{"_index":192,"title":{},"body":{"classes/FileModel.html":{},"classes/OrderModel.html":{},"classes/ServicePlansModel.html":{},"classes/UsersPlanModel.html":{}}}],["updateuserbyid",{"_index":876,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuserbyid(id",{"_index":885,"title":{},"body":{"injectables/UserService.html":{}}}],["upload",{"_index":343,"title":{},"body":{"injectables/FileServiceService.html":{},"injectables/S3Service.html":{}}}],["upload(details",{"_index":365,"title":{},"body":{"injectables/FileServiceService.html":{}}}],["uploadedfile",{"_index":264,"title":{},"body":{"controllers/FileServiceController.html":{}}}],["uploadfile",{"_index":242,"title":{},"body":{"controllers/FileServiceController.html":{}}}],["uploadfile(req",{"_index":257,"title":{},"body":{"controllers/FileServiceController.html":{}}}],["uploadtos3",{"_index":727,"title":{},"body":{"injectables/S3Service.html":{}}}],["uploadtos3(data",{"_index":732,"title":{},"body":{"injectables/S3Service.html":{}}}],["usedstorage",{"_index":171,"title":{},"body":{"controllers/DashboardController.html":{},"injectables/FileServiceService.html":{},"controllers/UserController.html":{}}}],["usedstorage.value",{"_index":406,"title":{},"body":{"injectables/FileServiceService.html":{}}}],["useguards",{"_index":156,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/FileServiceController.html":{},"controllers/OthersController.html":{},"controllers/PlansController.html":{},"controllers/UserController.html":{}}}],["useguards(authenticateguard",{"_index":165,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/FileServiceController.html":{},"controllers/PlansController.html":{},"controllers/UserController.html":{}}}],["useguards(authenticateguard)@get('/list",{"_index":636,"title":{},"body":{"controllers/PlansController.html":{}}}],["useguards(authenticateguard)@get('/purchase/:id",{"_index":639,"title":{},"body":{"controllers/PlansController.html":{}}}],["useguards(authenticateguard)@post",{"_index":633,"title":{},"body":{"controllers/PlansController.html":{}}}],["useguards(isloggedinguard",{"_index":512,"title":{},"body":{"controllers/OthersController.html":{}}}],["useinterceptors",{"_index":265,"title":{},"body":{"controllers/FileServiceController.html":{}}}],["useinterceptors(fileinterceptor('file",{"_index":295,"title":{},"body":{"controllers/FileServiceController.html":{}}}],["user",{"_index":81,"title":{},"body":{"guards/AuthenticateGuard.html":{},"interfaces/Request.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/UsersPlanModel.html":{}}}],["user._id",{"_index":819,"title":{},"body":{"controllers/UserController.html":{}}}],["user.controller",{"_index":872,"title":{},"body":{"modules/UserModule.html":{}}}],["user.dto",{"_index":816,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.email",{"_index":823,"title":{},"body":{"controllers/UserController.html":{}}}],["user.scope",{"_index":821,"title":{},"body":{"controllers/UserController.html":{}}}],["user.service",{"_index":815,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user/user.module",{"_index":926,"title":{},"body":{"modules/V1Module.html":{}}}],["usercontroller",{"_index":787,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["usercreatedto",{"_index":470,"title":{"classes/UserCreateDTO.html":{}},"body":{"classes/LoginDTO.html":{},"classes/SignupDTO.html":{},"controllers/UserController.html":{},"classes/UserCreateDTO.html":{},"injectables/UserService.html":{},"classes/UserUpdateDTO.html":{},"coverage.html":{}}}],["userdocument",{"_index":65,"title":{},"body":{"guards/AuthenticateGuard.html":{},"interfaces/Request.html":{},"classes/UserModel.html":{},"miscellaneous/typealiases.html":{}}}],["userid",{"_index":95,"title":{},"body":{"guards/AuthenticateGuard.html":{},"classes/FileModel.html":{},"controllers/FileServiceController.html":{},"injectables/FileServiceService.html":{},"classes/OrderModel.html":{},"injectables/PaymentService.html":{},"injectables/PlansService.html":{},"interfaces/Request.html":{},"injectables/UserService.html":{},"classes/UsersPlanModel.html":{}}}],["userinfo",{"_index":899,"title":{},"body":{"injectables/UserService.html":{}}}],["userinfo.password",{"_index":901,"title":{},"body":{"injectables/UserService.html":{}}}],["usermodel",{"_index":50,"title":{"classes/UserModel.html":{}},"body":{"guards/AuthenticateGuard.html":{},"classes/FileModel.html":{},"classes/OrderModel.html":{},"interfaces/Request.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["usermodel.name",{"_index":866,"title":{},"body":{"classes/UserModel.html":{},"miscellaneous/variables.html":{}}}],["usermodeldefinition",{"_index":182,"title":{},"body":{"modules/DashboardModule.html":{},"modules/FileServiceModule.html":{},"modules/PlansModule.html":{},"classes/UserModel.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usermodule",{"_index":867,"title":{"modules/UserModule.html":{}},"body":{"modules/UserModule.html":{},"modules/V1Module.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":99,"title":{},"body":{"guards/AuthenticateGuard.html":{},"classes/LoginDTO.html":{},"interfaces/Request.html":{},"classes/SignupDTO.html":{},"classes/UserCreateDTO.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{},"classes/UserUpdateDTO.html":{}}}],["userplan",{"_index":719,"title":{},"body":{"injectables/PlansService.html":{}}}],["userplans",{"_index":701,"title":{},"body":{"injectables/PlansService.html":{}}}],["userplansrepo",{"_index":337,"title":{},"body":{"injectables/FileServiceService.html":{},"injectables/PaymentService.html":{},"injectables/PlansService.html":{},"injectables/UserService.html":{}}}],["userrepo",{"_index":874,"title":{},"body":{"injectables/UserService.html":{}}}],["users",{"_index":863,"title":{},"body":{"classes/UserModel.html":{}}}],["userschema",{"_index":864,"title":{},"body":{"classes/UserModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userservice",{"_index":814,"title":{"injectables/UserService.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["usersplandefinition",{"_index":328,"title":{},"body":{"modules/FileServiceModule.html":{},"modules/PaymentModule.html":{},"modules/PlansModule.html":{},"modules/UserModule.html":{},"classes/UsersPlanModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usersplandocument",{"_index":920,"title":{},"body":{"classes/UsersPlanModel.html":{},"miscellaneous/typealiases.html":{}}}],["usersplanmodel",{"_index":375,"title":{"classes/UsersPlanModel.html":{}},"body":{"injectables/FileServiceService.html":{},"injectables/PaymentService.html":{},"injectables/PlansService.html":{},"injectables/UserService.html":{},"classes/UsersPlanModel.html":{},"coverage.html":{}}}],["usersplanmodel.name",{"_index":922,"title":{},"body":{"classes/UsersPlanModel.html":{},"miscellaneous/variables.html":{}}}],["usersplanschema",{"_index":918,"title":{},"body":{"classes/UsersPlanModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usersplanschema.plugin(mongoosepaginate",{"_index":921,"title":{},"body":{"classes/UsersPlanModel.html":{}}}],["usersplanstatustypes",{"_index":695,"title":{},"body":{"injectables/PlansService.html":{}}}],["usersplanstatustypes.active",{"_index":702,"title":{},"body":{"injectables/PlansService.html":{}}}],["userupdatedto",{"_index":463,"title":{"classes/UserUpdateDTO.html":{}},"body":{"classes/LoginDTO.html":{},"classes/SignupDTO.html":{},"controllers/UserController.html":{},"classes/UserCreateDTO.html":{},"classes/UserUpdateDTO.html":{},"coverage.html":{}}}],["utils",{"_index":647,"title":{},"body":{"controllers/PlansController.html":{},"controllers/UserController.html":{}}}],["v1.0/dashboard",{"_index":149,"title":{},"body":{"controllers/DashboardController.html":{}}}],["v1.0/files",{"_index":237,"title":{},"body":{"controllers/FileServiceController.html":{}}}],["v1.0/plans",{"_index":627,"title":{},"body":{"controllers/PlansController.html":{}}}],["v1.0/user",{"_index":817,"title":{},"body":{"controllers/UserController.html":{}}}],["v1/v1.module",{"_index":25,"title":{},"body":{"modules/AppModule.html":{}}}],["v1module",{"_index":11,"title":{"modules/V1Module.html":{}},"body":{"modules/AppModule.html":{},"modules/V1Module.html":{},"modules.html":{},"overview.html":{}}}],["v2",{"_index":217,"title":{},"body":{"classes/FileModel.html":{},"classes/OrderModel.html":{},"classes/ServicePlansModel.html":{},"classes/UsersPlanModel.html":{},"dependencies.html":{}}}],["validate(convertedclass",{"_index":1068,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validatebody",{"_index":646,"title":{},"body":{"controllers/PlansController.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["validatebody(body",{"_index":652,"title":{},"body":{"controllers/PlansController.html":{},"controllers/UserController.html":{}}}],["validatefilesize",{"_index":344,"title":{},"body":{"injectables/FileServiceService.html":{}}}],["validatefilesize(userid",{"_index":369,"title":{},"body":{"injectables/FileServiceService.html":{}}}],["validationsresult",{"_index":1067,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validator",{"_index":142,"title":{},"body":{"classes/CreatePlanDTO.html":{},"classes/LoginDTO.html":{},"classes/SignupDTO.html":{},"classes/UserCreateDTO.html":{},"classes/UserUpdateDTO.html":{},"dependencies.html":{}}}],["value",{"_index":355,"title":{},"body":{"injectables/FileServiceService.html":{},"injectables/PlansService.html":{},"injectables/S3Service.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":940,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1061,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verifyresult",{"_index":604,"title":{},"body":{"injectables/PaymentService.html":{}}}],["verifyresult.data.status",{"_index":606,"title":{},"body":{"injectables/PaymentService.html":{}}}],["version",{"_index":1055,"title":{},"body":{"properties.html":{}}}],["void",{"_index":510,"title":{},"body":{"controllers/OthersController.html":{},"controllers/PlansController.html":{},"controllers/UserController.html":{}}}],["watch",{"_index":1009,"title":{},"body":{"index.html":{}}}],["website",{"_index":1040,"title":{},"body":{"index.html":{}}}],["yarn",{"_index":1004,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":1029,"title":{},"body":{"index.html":{}}}],["zibal",{"_index":590,"title":{},"body":{"injectables/PaymentService.html":{}}}],["zolfagharifar.liara.run/bank/callback",{"_index":593,"title":{},"body":{"injectables/PaymentService.html":{}}}],["zoom",{"_index":13,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"modules/FileServiceModule.html":{},"modules/PaymentModule.html":{},"modules/PlansModule.html":{},"modules/UserModule.html":{},"modules/V1Module.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nV1Module\n\nV1Module\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nV1Module->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            V1Module\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { V1Module } from './v1/v1.module';\n\n@Module({\n  imports: [\n    MongooseModule.forRoot(\n      'mongodb://root:94cFaOgeySAiSvm2qRGBMiM8@mongodb:27017/file-service?authSource=admin',\n    ),\n    V1Module,\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthenticateGuard.html":{"url":"guards/AuthenticateGuard.html","title":"guard - AuthenticateGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthenticateGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/component/guards/authenticate.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/component/guards/authenticate.guard.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/component/guards/authenticate.guard.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\nimport { Request, Response } from 'express';\nimport UnAuthenticatedException from '../exceptions/UnAuthenticated.exception';\nimport { Model, Types } from 'mongoose';\nimport { UserDocument, UserModel } from '../../models/user.model';\nimport { InjectModel } from '@nestjs/mongoose';\n\n@Injectable()\nexport default class AuthenticateGuard implements CanActivate {\n  constructor(\n    @InjectModel(UserModel.name) private readonly userModel: Model,\n  ) {}\n  async canActivate(context: ExecutionContext): Promise {\n    const req = context.switchToHttp().getRequest();\n    const res = context.switchToHttp().getResponse();\n\n    if (!req.session.isLoggedIn) {\n      throw new UnAuthenticatedException();\n    } else {\n      const user = await this.userModel.findById(req.session.userId);\n      req.user = user;\n      res.locals.session = req.session;\n      res.locals.user = user;\n\n      return true;\n    }\n  }\n}\n\ndeclare global {\n  namespace Express {\n    interface Request {\n      user: UserDocument;\n      session: {\n        userId: Types.ObjectId;\n        access: string[];\n        username: string;\n        isLoggedIn: boolean;\n      };\n    }\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CallBackDTO.html":{"url":"classes/CallBackDTO.html","title":"class - CallBackDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CallBackDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/v1/payment/payment.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                status\n                            \n                            \n                                success\n                            \n                            \n                                trackId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/v1/payment/payment.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        success\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/v1/payment/payment.dto.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trackId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/v1/payment/payment.dto.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CallBackDTO {\n  status: string;\n  success: string;\n  trackId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePlanDTO.html":{"url":"classes/CreatePlanDTO.html","title":"class - CreatePlanDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePlanDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/v1/plans/plan.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                duration\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                price\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                size\n                            \n                            \n                                    \n                                    \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        duration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber({}, {message: 'مدت زمان باید یک عدد باشد.'})@Min(1, {message: 'مدت زمان باید بین ۱ تا ۳۶۵ روز باشد.'})@Max(365, {message: 'مدت زمان باید بین ۱ تا ۳۶۵ روز باشد.'})@IsNotEmpty({message: 'مدت زمان نمیتواند خالی باشد'})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/plans/plan.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({message: 'نام پلن باید یک رشته متنی باشد.'})@IsNotEmpty({message: 'نام پلن نمیتواند خالی باشد'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/plans/plan.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber({}, {message: 'قیمت باید یک عدد باشد.'})@Min(0, {message: 'قیمت باید بزرگ تر از ۰ باشد.'})@IsNotEmpty({message: 'قیمت نمیتواند خالی باشد'})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/plans/plan.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber({}, {message: 'حجم باید یک عدد باشد.'})@Min(5000000, {message: 'حجم باید بین ۵ تا ۱۰۰ گیگابایت باشد.'})@Max(100000000000, {message: 'حجم باید بین ۵ تا ۱۰۰ گیگابایت باشد.'})@IsNotEmpty({message: 'حجم نمیتواند خالی باشد'})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/plans/plan.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ServicesTypes\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({message: 'نوع اشتراک یک رشته متنی باشد.'})@IsEnum(ServicesTypes, {message: 'نوع اشتراک معتبر نمی باشد'})@IsNotEmpty({message: 'نوع اشتراک نمیتواند خالی باشد'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/plans/plan.dto.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ServicesTypes } from '../../models/servicePlans.model';\nimport {\n  IsEnum,\n  IsNotEmpty,\n  IsNumber,\n  IsString,\n  Max,\n  Min,\n} from 'class-validator';\nimport { Type } from 'class-transformer';\n\nexport class CreatePlanDTO {\n  @IsString({ message: 'نام پلن باید یک رشته متنی باشد.' })\n  @IsNotEmpty({ message: 'نام پلن نمیتواند خالی باشد' })\n  name: string;\n\n  @IsNumber({}, { message: 'مدت زمان باید یک عدد باشد.' })\n  @Min(1, { message: 'مدت زمان باید بین ۱ تا ۳۶۵ روز باشد.' })\n  @Max(365, { message: 'مدت زمان باید بین ۱ تا ۳۶۵ روز باشد.' })\n  @IsNotEmpty({ message: 'مدت زمان نمیتواند خالی باشد' })\n  @Type(() => Number)\n  duration: number;\n\n  @IsNumber({}, { message: 'حجم باید یک عدد باشد.' })\n  @Min(5000000, { message: 'حجم باید بین ۵ تا ۱۰۰ گیگابایت باشد.' })\n  @Max(100000000000, { message: 'حجم باید بین ۵ تا ۱۰۰ گیگابایت باشد.' })\n  @IsNotEmpty({ message: 'حجم نمیتواند خالی باشد' })\n  @Type(() => Number)\n  size: number;\n\n  @IsString({ message: 'نوع اشتراک یک رشته متنی باشد.' })\n  @IsEnum(ServicesTypes, { message: 'نوع اشتراک معتبر نمی باشد' })\n  @IsNotEmpty({ message: 'نوع اشتراک نمیتواند خالی باشد' })\n  type: ServicesTypes;\n\n  @IsNumber({}, { message: 'قیمت باید یک عدد باشد.' })\n  @Min(0, { message: 'قیمت باید بزرگ تر از ۰ باشد.' })\n  @IsNotEmpty({ message: 'قیمت نمیتواند خالی باشد' })\n  @Type(() => Number)\n  price: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DashboardController.html":{"url":"controllers/DashboardController.html","title":"controller - DashboardController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DashboardController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/v1/dashboard/dashboard.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                v1.0/dashboard\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                showDashboard\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        showDashboard\n                        \n                    \n                \n            \n            \n                \n                        \n                    showDashboard(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Render('panel/dashboard')@UseGuards(AuthenticateGuard)@Get('/')\n                \n            \n\n                    \n                        \n                            Defined in src/v1/dashboard/dashboard.controller.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                            Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Render, Req, UseGuards } from '@nestjs/common';\nimport AuthenticateGuard from '../../component/guards/authenticate.guard';\nimport { FileServiceService } from '../file-service/file-service.service';\nimport { Request } from 'express';\n\n@Controller('v1.0/dashboard')\nexport class DashboardController {\n  constructor(private readonly fileService: FileServiceService) {}\n  @Render('panel/dashboard')\n  @UseGuards(AuthenticateGuard)\n  @Get('/')\n  async showDashboard(@Req() req: Request) {\n    return {\n      filesCount: await this.fileService.getUserFilesCount(req.session.userId),\n      totalStorage: await this.fileService.getTotalStorage(req.session.userId),\n      usedStorage: await this.fileService.getUsedStorage(req.session.userId),\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DashboardModule.html":{"url":"modules/DashboardModule.html","title":"module - DashboardModule","body":"\n                   \n\n\n\n\n    Modules\n    DashboardModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DashboardModule\n\n\n\ncluster_DashboardModule_imports\n\n\n\ncluster_DashboardModule_providers\n\n\n\n\nFileServiceModule\n\nFileServiceModule\n\n\n\nDashboardModule\n\nDashboardModule\n\nDashboardModule -->\n\nFileServiceModule->DashboardModule\n\n\n\n\n\nDashboardService\n\nDashboardService\n\nDashboardModule -->\n\nDashboardService->DashboardModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/v1/dashboard/dashboard.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DashboardService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            DashboardController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FileServiceModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { DashboardController } from './dashboard.controller';\nimport { DashboardService } from './dashboard.service';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { UserModelDefinition } from '../../models/user.model';\nimport { FileServiceModule } from '../file-service/file-service.module';\n\n@Module({\n  imports: [\n    FileServiceModule,\n    MongooseModule.forFeature([UserModelDefinition]),\n  ],\n  controllers: [DashboardController],\n  providers: [DashboardService],\n})\nexport class DashboardModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DashboardService.html":{"url":"injectables/DashboardService.html","title":"injectable - DashboardService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DashboardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/v1/dashboard/dashboard.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class DashboardService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FileModel.html":{"url":"classes/FileModel.html","title":"class - FileModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FileModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/file.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                    \n                                downloadCount\n                            \n                            \n                                    \n                                mimeType\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                size\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                updatedAt\n                            \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/models/file.model.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        downloadCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number, default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/file.model.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        mimeType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop(String)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/file.model.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/file.model.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/file.model.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StatusTypes\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, enum: undefined, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/file.model.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/models/file.model.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, required: true, ref: 'UserModel'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/file.model.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModelDefinition, Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { PaginateModel, Types } from 'mongoose';\nimport * as mongoosePaginate from 'mongoose-paginate-v2';\n\nexport enum StatusTypes {\n  Active = 'ACTIVE',\n  Deleted = 'DELETED',\n  Expired = 'EXPIRED',\n  InProgress = 'IN_PROGRESS',\n}\n@Schema({ collection: 'files', timestamps: true })\nexport class FileModel {\n  @Prop({\n    type: String,\n    required: true,\n  })\n  name: string;\n\n  @Prop({ type: Types.ObjectId, required: true, ref: 'UserModel' })\n  userId: string;\n\n  @Prop({ type: Number, required: true })\n  size: number;\n\n  @Prop({ type: Number, default: 0 })\n  downloadCount: number;\n\n  @Prop({\n    type: String,\n    enum: Object.values(StatusTypes),\n    default: StatusTypes.Active,\n  })\n  status: StatusTypes;\n\n  @Prop(String)\n  mimeType: string;\n\n  createdAt!: Date;\n\n  updatedAt!: Date;\n}\n\nexport const FileSchema = SchemaFactory.createForClass(FileModel);\nexport type FileDocument = PaginateModel;\n\nFileSchema.plugin(mongoosePaginate);\nexport const FileModelDefinition: ModelDefinition = {\n  name: FileModel.name,\n  schema: FileSchema,\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FileServiceController.html":{"url":"controllers/FileServiceController.html","title":"controller - FileServiceController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FileServiceController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/v1/file-service/file-service.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /v1.0/files\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                deleteFile\n                            \n                            \n                                    \n                                    Async\n                                downloadFile\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getUserFilesList\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                getUserFilesView\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                uploadFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        deleteFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteFile(fileId: string, req: Request, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/delete/:id')@UseGuards(AuthenticateGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/v1/file-service/file-service.controller.ts:104\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                            Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        downloadFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    downloadFile(id: string, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/v1/file-service/file-service.controller.ts:94\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        getUserFilesList\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserFilesList(req: Request, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/list')@UseGuards(AuthenticateGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/v1/file-service/file-service.controller.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                            Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        getUserFilesView\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserFilesView(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/')@UseGuards(AuthenticateGuard)@Render('panel/files')\n                \n            \n\n                    \n                        \n                            Defined in src/v1/file-service/file-service.controller.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                            Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        uploadFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadFile(req: Request, file: Express.Multer.File, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/')@UseGuards(AuthenticateGuard)@UseInterceptors(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/v1/file-service/file-service.controller.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                            Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  BadRequestException,\n  Controller,\n  Get,\n  Param,\n  Post,\n  Render,\n  Req,\n  Res,\n  UploadedFile,\n  UseGuards,\n  UseInterceptors,\n} from '@nestjs/common';\nimport AuthenticateGuard from '../../component/guards/authenticate.guard';\nimport { FileServiceService } from './file-service.service';\nimport { Request, Response } from 'express';\nimport { FileInterceptor } from '@nestjs/platform-express';\n\n@Controller('/v1.0/files')\nexport class FileServiceController {\n  constructor(private fileService: FileServiceService) {}\n  @Get('/')\n  @UseGuards(AuthenticateGuard)\n  @Render('panel/files')\n  async getUserFilesView(@Req() req: Request) {}\n\n  @Get('/list')\n  @UseGuards(AuthenticateGuard)\n  async getUserFilesList(@Req() req: Request, @Res() res: Response) {\n    const { draw, start, length } = req.query;\n    const userId = req.session.userId;\n    const result = await this.fileService.getUserFilesList(\n      userId,\n      +start,\n      +length,\n    );\n\n    res.send({\n      draw: +draw,\n      recordsTotal: result.totalDocs,\n      recordsFiltered: result.totalDocs,\n      data: result.docs.map((item) => {\n        const sizeInMB = (item.size / (1024 * 1024)).toFixed(2);\n        return [\n          item.name,\n          `${sizeInMB} MB`,\n          item.downloadCount,\n          item.createdAt,\n          `{alert('لینک دانلود کپی شد')});\">`,\n          ``,\n          ``,\n        ];\n      }),\n    });\n  }\n\n  @Post('/')\n  @UseGuards(AuthenticateGuard)\n  @UseInterceptors(FileInterceptor('file'))\n  async uploadFile(\n    @Req() req: Request,\n    @UploadedFile()\n    file: Express.Multer.File,\n    @Res() res: Response,\n  ) {\n    try {\n      if (!file) {\n        throw new BadRequestException('لطفا فایل خود را انتخاب کنید');\n      }\n      const userId = req.user._id;\n      const { size, buffer, originalname: name, mimetype } = file;\n      await this.fileService.validateFileSize(userId, size);\n      await this.fileService.upload({\n        size,\n        name,\n        userId,\n        buffer,\n        mimeType: mimetype,\n      });\n\n      res.redirect('/v1.0/files');\n    } catch (e) {\n      console.log(e);\n      const errors = Array.isArray(e.response.message)\n        ? e.response.message\n        : [e.response.message];\n      return res.render('panel/files', {\n        errors: errors,\n      });\n    }\n  }\n\n  @Get('/:id')\n  async downloadFile(@Param('id') id: string, @Res() res: Response) {\n    const downloadResult = await this.fileService.dowload(id);\n\n    res.contentType(downloadResult.fileInfo.mimeType);\n    res.attachment(downloadResult.fileInfo.name);\n    downloadResult.stream.pipe(res);\n  }\n\n  @Get('/delete/:id')\n  @UseGuards(AuthenticateGuard)\n  async deleteFile(\n    @Param('id') fileId: string,\n    @Req() req: Request,\n    @Res() res: Response,\n  ) {\n    const userId = req.user._id;\n    await this.fileService.delete(fileId, userId);\n    res.redirect('/v1.0/files');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FileServiceModule.html":{"url":"modules/FileServiceModule.html","title":"module - FileServiceModule","body":"\n                   \n\n\n\n\n    Modules\n    FileServiceModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FileServiceModule\n\n\n\ncluster_FileServiceModule_providers\n\n\n\ncluster_FileServiceModule_exports\n\n\n\n\nFileServiceService \n\nFileServiceService \n\n\n\nS3Service \n\nS3Service \n\n\n\nFileServiceModule\n\nFileServiceModule\n\nFileServiceService  -->\n\nFileServiceModule->FileServiceService \n\n\n\nS3Service  -->\n\nFileServiceModule->S3Service \n\n\n\n\n\nFileServiceService\n\nFileServiceService\n\nFileServiceModule -->\n\nFileServiceService->FileServiceModule\n\n\n\n\n\nS3Service\n\nS3Service\n\nFileServiceModule -->\n\nS3Service->FileServiceModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/v1/file-service/file-service.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FileServiceService\n                        \n                        \n                            S3Service\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            FileServiceController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FileServiceService\n                        \n                        \n                            S3Service\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FileServiceController } from './file-service.controller';\nimport { FileServiceService } from './file-service.service';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { UserModelDefinition } from '../../models/user.model';\nimport { MulterModule } from '@nestjs/platform-express';\nimport { memoryStorage } from 'multer';\nimport { UsersPlanDefinition } from '../../models/usersPlan.model';\nimport { FileModelDefinition } from '../../models/file.model';\nimport { S3Service } from './s3.service';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      UserModelDefinition,\n      FileModelDefinition,\n      UsersPlanDefinition,\n    ]),\n    MulterModule.register({ storage: memoryStorage() }),\n  ],\n  controllers: [FileServiceController],\n  providers: [S3Service, FileServiceService],\n  exports: [S3Service, FileServiceService],\n})\nexport class FileServiceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FileServiceService.html":{"url":"injectables/FileServiceService.html","title":"injectable - FileServiceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FileServiceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/v1/file-service/file-service.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Private\n                                    Readonly\n                                filesRepo\n                            \n                            \n                                    \n                                    Private\n                                    Readonly\n                                userPlansRepo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                dowload\n                            \n                            \n                                    Async\n                                getTotalStorage\n                            \n                            \n                                    Async\n                                getUsedStorage\n                            \n                            \n                                    Async\n                                getUserFilesCount\n                            \n                            \n                                    Async\n                                getUserFilesList\n                            \n                            \n                                    Async\n                                upload\n                            \n                            \n                                    Async\n                                validateFileSize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(S3Service: S3Service)\n                    \n                \n                        \n                            \n                                Defined in src/v1/file-service/file-service.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        S3Service\n                                                  \n                                                        \n                                                                        S3Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(fileToken: string, userId: string | Types.ObjectId)\n                \n            \n\n\n                    \n                        \n                            Defined in src/v1/file-service/file-service.service.ts:134\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                        string | Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        dowload\n                        \n                    \n                \n            \n            \n                \n                        \n                    dowload(fileToken: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/v1/file-service/file-service.service.ts:109\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getTotalStorage\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTotalStorage(userId: string | Types.ObjectId, convertToMB)\n                \n            \n\n\n                    \n                        \n                            Defined in src/v1/file-service/file-service.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                        string | Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                convertToMB\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    true\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUsedStorage\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUsedStorage(userId: string | Types.ObjectId, convertToMB)\n                \n            \n\n\n                    \n                        \n                            Defined in src/v1/file-service/file-service.service.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                        string | Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                convertToMB\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    true\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUserFilesCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserFilesCount(userId: string | Types.ObjectId)\n                \n            \n\n\n                    \n                        \n                            Defined in src/v1/file-service/file-service.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                        string | Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUserFilesList\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserFilesList(userId: string | Types.ObjectId, offset: number, limit: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/v1/file-service/file-service.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                        string | Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                offset\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    0\n                                            \n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    10\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        upload\n                        \n                    \n                \n            \n            \n                \n                        \n                    upload(details: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/v1/file-service/file-service.service.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                details\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validateFileSize\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateFileSize(userId: string | Types.ObjectId, size: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/v1/file-service/file-service.service.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                        string | Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                size\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Private\n                            Readonly\n                        filesRepo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PaginateModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @InjectModel(FileModel.name)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/file-service/file-service.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Private\n                            Readonly\n                        userPlansRepo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PaginateModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @InjectModel(UsersPlanModel.name)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/file-service/file-service.service.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  NotFoundException,\n} from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { PaginateModel, Types } from 'mongoose';\nimport { FileModel, StatusTypes } from '../../models/file.model';\nimport { UsersPlanModel } from '../../models/usersPlan.model';\nimport { ServicePlansDocument } from '../../models/servicePlans.model';\nimport { S3Service } from './s3.service';\n\n@Injectable()\nexport class FileServiceService {\n  @InjectModel(FileModel.name)\n  private readonly filesRepo: PaginateModel;\n\n  @InjectModel(UsersPlanModel.name)\n  private readonly userPlansRepo: PaginateModel;\n\n  constructor(private readonly S3Service: S3Service) {}\n  async getUserFilesList(\n    userId: string | Types.ObjectId,\n    offset = 0,\n    limit = 10,\n  ) {\n    return this.filesRepo.paginate(\n      { userId: new Types.ObjectId(userId), status: StatusTypes.Active },\n      { sort: { createdAt: -1 }, offset, limit },\n    );\n  }\n\n  async getUserFilesCount(userId: string | Types.ObjectId) {\n    return this.filesRepo.countDocuments({\n      userId: new Types.ObjectId(userId),\n      status: StatusTypes.Active,\n    });\n  }\n\n  async getTotalStorage(userId: string | Types.ObjectId, convertToMB = true) {\n    const plans = await this.userPlansRepo.find(\n      { userId: new Types.ObjectId(userId), expiredAt: { $gt: new Date() } },\n      { planId: 1 },\n      { populate: { path: 'planId', select: 'size' } },\n    );\n    let total = 0;\n    plans.forEach(\n      (item) =>\n        (total += +(item.planId as unknown as ServicePlansDocument).size),\n    );\n    const megabytes = total / (1024 * 1024);\n    return {\n      value: convertToMB ? megabytes.toFixed(2) : total,\n      unit: convertToMB ? 'MB' : 'Byte',\n    };\n  }\n\n  async getUsedStorage(userId: string | Types.ObjectId, convertToMB = true) {\n    const files = await this.filesRepo.find(\n      { userId: new Types.ObjectId(userId), status: StatusTypes.Active },\n      { size: 1 },\n    );\n    let total = 0;\n    files.forEach((item) => (total += +item.size));\n    const megabytes = total / (1024 * 1024);\n    return {\n      value: convertToMB ? megabytes.toFixed(2) : total,\n      unit: convertToMB ? 'MB' : 'Byte',\n    };\n  }\n\n  async validateFileSize(userId: string | Types.ObjectId, size: number) {\n    const usedStorage = await this.getUsedStorage(userId, false);\n    const totalStorage = await this.getTotalStorage(userId, false);\n    const freeStorage = +totalStorage.value - +usedStorage.value;\n    if (size > freeStorage) {\n      throw new BadRequestException(\n        'فضای کافی برای ذخیره سازی فایل وجود ندارد',\n      );\n    }\n  }\n\n  async upload(details: {\n    userId: string | Types.ObjectId;\n    buffer: Buffer;\n    size: number;\n    name: string;\n    mimeType: string;\n  }) {\n    const { size, name, userId, buffer, mimeType } = details;\n    const file = await this.filesRepo.create({\n      userId: new Types.ObjectId(userId),\n      name,\n      size,\n      status: StatusTypes.InProgress,\n      mimeType,\n    });\n    await this.S3Service.uploadToS3({\n      file: buffer,\n      fileSize: size,\n      mimeType,\n      key: `/${file._id}/${name}`,\n    });\n    file.status = StatusTypes.Active;\n\n    await file.save();\n  }\n\n  async dowload(fileToken: string) {\n    const file = await this.filesRepo.findOne({\n      _id: fileToken,\n      status: StatusTypes.Active,\n    });\n\n    if (!file) {\n      throw new NotFoundException('فایل مورد نظر یافت نشد');\n    }\n\n    const stream = await this.S3Service.downloadFromS3(\n      `/${fileToken}/${file.name}`,\n    );\n\n    stream.on('end', () => {\n      file.downloadCount = ++file.downloadCount;\n      file.save();\n    });\n\n    return {\n      stream,\n      fileInfo: file,\n    };\n  }\n\n  async delete(fileToken: string, userId: string | Types.ObjectId) {\n    const file = await this.filesRepo.findOne({\n      userId: new Types.ObjectId(userId),\n      _id: new Types.ObjectId(fileToken),\n    });\n\n    if (!file) {\n      throw new NotFoundException();\n    }\n\n    await this.S3Service.removeFromS3(`/${fileToken}/${file.name}`);\n\n    file.status = StatusTypes.Deleted;\n    await file.save();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IsLoggedInException.html":{"url":"classes/IsLoggedInException.html","title":"class - IsLoggedInException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IsLoggedInException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/component/exceptions/isLoggedIn.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/component/exceptions/isLoggedIn.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException } from '@nestjs/common';\n\nexport default class IsLoggedInException extends HttpException {\n  constructor() {\n    super('LoggedIn', 403);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IsLoggedInExceptionFilter.html":{"url":"classes/IsLoggedInExceptionFilter.html","title":"class - IsLoggedInExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IsLoggedInExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/component/exception-filters/isLoggedIn.exception.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: IsLoggedInException, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/component/exception-filters/isLoggedIn.exception.filter.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                            IsLoggedInException\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter } from '@nestjs/common';\nimport { Response } from 'express';\nimport IsLoggedInException from '../exceptions/isLoggedIn.exception';\n\n@Catch(IsLoggedInException)\nexport default class IsLoggedInExceptionFilter\n  implements ExceptionFilter\n{\n  catch(exception: IsLoggedInException, host: ArgumentsHost): any {\n    const res = host.switchToHttp().getResponse();\n    res.redirect('/v1.0/dashboard');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/IsLoggedInGuard.html":{"url":"guards/IsLoggedInGuard.html","title":"guard - IsLoggedInGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    IsLoggedInGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/component/guards/isLoggedIn.guard.ts\n            \n\n\n\n\n                \n                Implements\n                \n                \n                            CanActivate\n                \n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/component/guards/isLoggedIn.guard.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext } from '@nestjs/common';\nimport { Request } from 'express';\nimport IsLoggedInException from '../exceptions/isLoggedIn.exception';\n\nexport default class IsLoggedInGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n\n    if (request.session.isLoggedIn) {\n      throw new IsLoggedInException();\n    }\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDTO.html":{"url":"classes/LoginDTO.html","title":"class - LoginDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/v1/user/user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({message: 'ایمیل باید یک رشته متنی باشد.'})@IsEmail({}, {message: 'ایمیل معتبر نمی باشد.'})@IsNotEmpty({message: 'ایمیل نمیتواند خالی باشد'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/user/user.dto.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({message: 'رمزعبور باید یک رشته متنی باشد.'})@MinLength(8, {message: 'رمز عبور باید بین ۸ تا ۳۲ کاراکتر باشد.'})@MaxLength(32, {message: 'رمز عبور باید بین ۸ تا ۳۲ کاراکتر باشد.'})@IsNotEmpty({message: 'رمزعبور نمیتواند خالی باشد'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/user/user.dto.ts:42\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsEmail,\n  IsNotEmpty,\n  IsNumber,\n  IsString,\n  Max,\n  MaxLength,\n  Min,\n  MinLength,\n} from 'class-validator';\nimport { Type } from 'class-transformer';\n\nexport class SignupDTO {\n  @IsString({ message: 'ایمیل باید یک رشته متنی باشد.' })\n  @IsEmail({}, { message: 'ایمیل معتبر نمی باشد.' })\n  @IsNotEmpty({ message: 'ایمیل نمیتواند خالی باشد' })\n  email: string;\n\n  @IsString({ message: 'رمزعبور باید یک رشته متنی باشد.' })\n  @MinLength(8, { message: 'رمز عبور باید بین ۸ تا ۳۲ کاراکتر باشد.' })\n  @MaxLength(32, { message: 'رمز عبور باید بین ۸ تا ۳۲ کاراکتر باشد.' })\n  @IsNotEmpty({ message: 'رمزعبور نمیتواند خالی باشد' })\n  password: string;\n\n  @IsString({ message: 'تکرار رمزعبور باید یک رشته متنی باشد.' })\n  @MinLength(8, { message: 'تکرار رمز عبور باید بین ۸ تا ۳۲ کاراکتر باشد.' })\n  @MaxLength(32, { message: 'تکرار رمز عبور باید بین ۸ تا ۳۲ کاراکتر باشد.' })\n  @IsNotEmpty({ message: 'تکرار رمزعبور نمیتواند خالی باشد' })\n  confirmPassword: string;\n}\n\nexport class LoginDTO {\n  @IsString({ message: 'ایمیل باید یک رشته متنی باشد.' })\n  @IsEmail({}, { message: 'ایمیل معتبر نمی باشد.' })\n  @IsNotEmpty({ message: 'ایمیل نمیتواند خالی باشد' })\n  email: string;\n\n  @IsString({ message: 'رمزعبور باید یک رشته متنی باشد.' })\n  @MinLength(8, { message: 'رمز عبور باید بین ۸ تا ۳۲ کاراکتر باشد.' })\n  @MaxLength(32, { message: 'رمز عبور باید بین ۸ تا ۳۲ کاراکتر باشد.' })\n  @IsNotEmpty({ message: 'رمزعبور نمیتواند خالی باشد' })\n  password: string;\n}\n\nexport class UserUpdateDTO {\n  @IsString({ message: 'نام کاربری باید یک رشته متنی باشد.' })\n  @MinLength(3, { message: 'نام کاربری باید بین ۳ تا ۱۶ کاراکتر باشد.' })\n  @MaxLength(16, { message: 'نام کاربری باید بین ۳ تا ۱۶ کاراکتر باشد.' })\n  @IsNotEmpty({ message: 'نام کاربری نمیتواند خالی باشد' })\n  username: string;\n  @IsString({ message: 'نام باید یک رشته متنی باشد.' })\n  @MinLength(3, { message: 'نام باید بین ۳ تا ۱۶ کاراکتر باشد.' })\n  @MaxLength(16, { message: 'نام باید بین ۳ تا ۱۶ کاراکتر باشد.' })\n  firstName: string;\n  @IsString({ message: 'نام خانوادگی باید یک رشته متنی باشد.' })\n  @MinLength(3, { message: 'نام خانوادگی باید بین ۳ تا ۱۶ کاراکتر باشد.' })\n  @MaxLength(16, { message: 'نام خانوادگی باید بین ۳ تا ۱۶ کاراکتر باشد.' })\n  lastName: string;\n  @IsString({ message: 'توضیحات باید یک رشته متنی باشد.' })\n  @MinLength(3, { message: 'توضیحات باید بین ۳ تا ۲۵۰ کاراکتر باشد.' })\n  @MaxLength(250, { message: 'توضیحات باید بین ۳ تا ۲۵۰ کاراکتر باشد.' })\n  description: string;\n}\n\nexport class UserCreateDTO {\n  @IsString({ message: 'نام کاربری باید یک رشته متنی باشد.' })\n  @MinLength(3, { message: 'نام کاربری باید بین ۳ تا ۱۶ کاراکتر باشد.' })\n  @MaxLength(16, { message: 'نام کاربری باید بین ۳ تا ۱۶ کاراکتر باشد.' })\n  @IsNotEmpty({ message: 'نام کاربری نمیتواند خالی باشد' })\n  username: string;\n  @IsString({ message: 'نام باید یک رشته متنی باشد.' })\n  @MinLength(3, { message: 'نام باید بین ۳ تا ۱۶ کاراکتر باشد.' })\n  @MaxLength(16, { message: 'نام باید بین ۳ تا ۱۶ کاراکتر باشد.' })\n  firstName: string;\n  @IsString({ message: 'نام خانوادگی باید یک رشته متنی باشد.' })\n  @MinLength(3, { message: 'نام خانوادگی باید بین ۳ تا ۱۶ کاراکتر باشد.' })\n  @MaxLength(16, { message: 'نام خانوادگی باید بین ۳ تا ۱۶ کاراکتر باشد.' })\n  lastName: string;\n  @IsString({ message: 'توضیحات باید یک رشته متنی باشد.' })\n  @MinLength(3, { message: 'توضیحات باید بین ۳ تا ۲۵۰ کاراکتر باشد.' })\n  @MaxLength(250, { message: 'توضیحات باید بین ۳ تا ۲۵۰ کاراکتر باشد.' })\n  description: string;\n\n  @IsString({ message: 'ایمیل باید یک رشته متنی باشد.' })\n  @IsEmail({}, { message: 'ایمیل معتبر نمی باشد.' })\n  @IsNotEmpty({ message: 'ایمیل نمیتواند خالی باشد' })\n  email: string;\n\n  @IsString({ message: 'رمزعبور باید یک رشته متنی باشد.' })\n  @MinLength(8, { message: 'رمز عبور باید بین ۸ تا ۳۲ کاراکتر باشد.' })\n  @MaxLength(32, { message: 'رمز عبور باید بین ۸ تا ۳۲ کاراکتر باشد.' })\n  @IsNotEmpty({ message: 'رمزعبور نمیتواند خالی باشد' })\n  password: string;\n\n  @IsString({ message: 'تکرار رمزعبور باید یک رشته متنی باشد.' })\n  @MinLength(8, { message: 'تکرار رمز عبور باید بین ۸ تا ۳۲ کاراکتر باشد.' })\n  @MaxLength(32, { message: 'تکرار رمز عبور باید بین ۸ تا ۳۲ کاراکتر باشد.' })\n  @IsNotEmpty({ message: 'تکرار رمزعبور نمیتواند خالی باشد' })\n  confirmPassword: string;\n\n  @IsNumber({}, { message: 'مقدار دسترسی ادمین معتبر نمی باشد.' })\n  @Min(0, { message: 'مقدار دسترسی ادمین معتبر نمی باشد.' })\n  @Max(1, { message: 'مقدار دسترسی ادمین معتبر نمی باشد.' })\n  @Type((type) => Number)\n  isAdmin: 0 | 1;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NotFoundExceptionFilter.html":{"url":"classes/NotFoundExceptionFilter.html","title":"class - NotFoundExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NotFoundExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/component/exception-filters/notFound.exception.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: NotFoundException, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/component/exception-filters/notFound.exception.filter.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                        NotFoundException\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ArgumentsHost,\n  Catch,\n  ExceptionFilter,\n  NotFoundException,\n} from '@nestjs/common';\nimport { Response } from 'express';\n\n@Catch(NotFoundException)\nexport default class NotFoundExceptionFilter\n  implements ExceptionFilter\n{\n  catch(exception: NotFoundException, host: ArgumentsHost): any {\n    const res = host.switchToHttp().getResponse();\n    res.status(404).render('404');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OrderModel.html":{"url":"classes/OrderModel.html","title":"class - OrderModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OrderModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/order.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                amount\n                            \n                            \n                                    \n                                bankToken\n                            \n                            \n                                createdAt\n                            \n                            \n                                    \n                                planId\n                            \n                            \n                                    \n                                RRN\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                updatedAt\n                            \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/order.model.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        bankToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/order.model.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/models/order.model.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        planId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, required: true, ref: 'ServicePlansModel'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/order.model.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        RRN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/order.model.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OrderStatusTypes\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, enum: undefined, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/order.model.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/models/order.model.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, required: true, ref: 'UserModel'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/order.model.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModelDefinition, Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { PaginateModel, Types } from 'mongoose';\nimport * as mongoosePaginate from 'mongoose-paginate-v2';\n\nexport enum OrderStatusTypes {\n  InProgress = 'IN_PROGRESS',\n  Confirm = 'CONFIRM',\n  Failed = 'FAILED',\n}\n@Schema({ collection: 'orders', timestamps: true })\nexport class OrderModel {\n  @Prop({ type: Types.ObjectId, required: true, ref: 'UserModel' })\n  userId: string;\n\n  @Prop({ type: Types.ObjectId, required: true, ref: 'ServicePlansModel' })\n  planId: string;\n\n  @Prop({ type: Number })\n  amount: number;\n\n  @Prop({ type: String })\n  RRN: string;\n\n  @Prop({ type: String })\n  bankToken: string;\n\n  @Prop({\n    type: String,\n    enum: Object.values(OrderStatusTypes),\n    default: OrderStatusTypes.InProgress,\n  })\n  status: OrderStatusTypes;\n\n  createdAt!: Date;\n\n  updatedAt!: Date;\n}\n\nexport const OrderSchema = SchemaFactory.createForClass(OrderModel);\nexport type OrderDocument = PaginateModel;\n\nOrderSchema.plugin(mongoosePaginate);\nexport const OrderDefinition: ModelDefinition = {\n  name: OrderModel.name,\n  schema: OrderSchema,\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OthersController.html":{"url":"controllers/OthersController.html","title":"controller - OthersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OthersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/v1/others/others.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                getIndexPage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getIndexPage\n                        \n                    \n                \n            \n            \n                \n                        \n                    getIndexPage()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('')@UseGuards(IsLoggedInGuard)@Render('others/index')\n                \n            \n\n                    \n                        \n                            Defined in src/v1/others/others.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Render, UseGuards } from '@nestjs/common';\nimport IsLoggedInGuard from '../../component/guards/isLoggedIn.guard';\n\n@Controller('/')\nexport class OthersController {\n  @Get('')\n  @UseGuards(IsLoggedInGuard)\n  @Render('others/index')\n  getIndexPage() {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OthersModule.html":{"url":"modules/OthersModule.html","title":"module - OthersModule","body":"\n                   \n\n\n\n\n    Modules\n    OthersModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/v1/others/others.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            OthersController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { OthersController } from './others.controller';\n\n@Module({\n  controllers: [OthersController],\n  providers: [],\n})\nexport class OthersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PaymentController.html":{"url":"controllers/PaymentController.html","title":"controller - PaymentController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PaymentController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/v1/payment/payment.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /bank\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                callback\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        callback\n                        \n                    \n                \n            \n            \n                \n                        \n                    callback(body: CallBackDTO, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/callback')\n                \n            \n\n                    \n                        \n                            Defined in src/v1/payment/payment.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            CallBackDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Query, Res } from '@nestjs/common';\nimport { CallBackDTO } from './payment.dto';\nimport { PaymentService } from './payment.service';\nimport { Response } from 'express';\nimport { ServicePlansDocument } from '../../models/servicePlans.model';\n\n@Controller('/bank')\nexport class PaymentController {\n  constructor(private readonly paymentService: PaymentService) {}\n  @Get('/callback')\n  async callback(@Query() body: CallBackDTO, @Res() res: Response) {\n    let errors: any;\n    const { success, trackId, status } = body;\n    try {\n      await this.paymentService.handleCallback(trackId, success);\n    } catch (e) {\n      errors = Array.isArray(e.response.message)\n        ? e.response.message\n        : [e.response.message];\n    }\n\n    const orderDetails = await this.paymentService.getOrderDetails(trackId);\n    return res.render('panel/receipt', {\n      status: orderDetails.status,\n      name: (orderDetails.planId as unknown as ServicePlansDocument).name,\n      price: orderDetails.amount,\n      RRN: orderDetails.RRN,\n      paymentDate: orderDetails.updatedAt,\n      errors,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PaymentModule.html":{"url":"modules/PaymentModule.html","title":"module - PaymentModule","body":"\n                   \n\n\n\n\n    Modules\n    PaymentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PaymentModule\n\n\n\ncluster_PaymentModule_exports\n\n\n\ncluster_PaymentModule_providers\n\n\n\n\nPaymentService \n\nPaymentService \n\n\n\nPaymentModule\n\nPaymentModule\n\nPaymentService  -->\n\nPaymentModule->PaymentService \n\n\n\n\n\nPaymentService\n\nPaymentService\n\nPaymentModule -->\n\nPaymentService->PaymentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/v1/payment/payment.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PaymentService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PaymentController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PaymentService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PaymentController } from './payment.controller';\nimport { PaymentService } from './payment.service';\nimport { HttpModule } from '@nestjs/axios';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { OrderDefinition } from '../../models/order.model';\nimport { ServicePlansDefinition } from '../../models/servicePlans.model';\nimport { UsersPlanDefinition } from '../../models/usersPlan.model';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      OrderDefinition,\n      ServicePlansDefinition,\n      UsersPlanDefinition,\n    ]),\n    HttpModule.register({ baseURL: 'https://gateway.zibal.ir/v1' }),\n  ],\n  controllers: [PaymentController],\n  providers: [PaymentService],\n  exports: [PaymentService],\n})\nexport class PaymentModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PaymentService.html":{"url":"injectables/PaymentService.html","title":"injectable - PaymentService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PaymentService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/v1/payment/payment.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Private\n                                    Readonly\n                                orderRepo\n                            \n                            \n                                    \n                                    Private\n                                    Readonly\n                                plansRepo\n                            \n                            \n                                    \n                                    Private\n                                    Readonly\n                                userPlansRepo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                confirm\n                            \n                            \n                                    Async\n                                getOrderDetails\n                            \n                            \n                                    Async\n                                handleCallback\n                            \n                            \n                                    Async\n                                inquiry\n                            \n                            \n                                    Async\n                                requestOrder\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ipg: HttpService)\n                    \n                \n                        \n                            \n                                Defined in src/v1/payment/payment.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ipg\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        confirm\n                        \n                    \n                \n            \n            \n                \n                        \n                    confirm(trackId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/v1/payment/payment.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                trackId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getOrderDetails\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOrderDetails(trackId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/v1/payment/payment.service.ts:110\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                trackId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        handleCallback\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleCallback(trackId: string, success: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/v1/payment/payment.service.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                trackId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                success\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        inquiry\n                        \n                    \n                \n            \n            \n                \n                        \n                    inquiry(trackId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/v1/payment/payment.service.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                trackId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        requestOrder\n                        \n                    \n                \n            \n            \n                \n                        \n                    requestOrder(orderDetails: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/v1/payment/payment.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                orderDetails\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Private\n                            Readonly\n                        orderRepo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @InjectModel(OrderModel.name)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/payment/payment.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Private\n                            Readonly\n                        plansRepo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @InjectModel(ServicePlansModel.name)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/payment/payment.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Private\n                            Readonly\n                        userPlansRepo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @InjectModel(UsersPlanModel.name)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/payment/payment.service.ts:20\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NotFoundException,\n  PreconditionFailedException,\n} from '@nestjs/common';\nimport { Model, Types } from 'mongoose';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { OrderModel, OrderStatusTypes } from '../../models/order.model';\nimport { HttpService } from '@nestjs/axios';\nimport { StatusTypes, UsersPlanModel } from '../../models/usersPlan.model';\nimport * as moment from 'moment/moment';\nimport { ServicePlansModel } from '../../models/servicePlans.model';\n\n@Injectable()\nexport class PaymentService {\n  @InjectModel(OrderModel.name) private readonly orderRepo: Model;\n  @InjectModel(ServicePlansModel.name)\n  private readonly plansRepo: Model;\n  @InjectModel(UsersPlanModel.name)\n  private readonly userPlansRepo: Model;\n\n  constructor(private readonly ipg: HttpService) {}\n  async requestOrder(orderDetails: {\n    amount: number;\n    userId: string | Types.ObjectId;\n    planId: string | Types.ObjectId;\n  }) {\n    const { amount, userId, planId } = orderDetails;\n    const order = await this.orderRepo.create({\n      planId: new Types.ObjectId(planId),\n      userId: new Types.ObjectId(userId),\n      amount,\n    });\n    const requestOrderResult = await this.ipg\n      .post('/request', {\n        merchant: 'zibal',\n        callbackUrl: 'https://' + 'zolfagharifar.liara.run/bank/callback',\n        amount,\n      })\n      .toPromise();\n    order.bankToken = order.RRN = requestOrderResult.data.trackId;\n    await order.save();\n    return {\n      orderId: order._id,\n      redirectUrl: `https://gateway.zibal.ir/start/${requestOrderResult.data.trackId}`,\n    };\n  }\n\n  async confirm(trackId: string) {\n    const order = await this.orderRepo.findOne({ bankToken: trackId });\n    if (!order) {\n      throw new NotFoundException('تراکنش مورد نظر یافت نشد');\n    }\n    const verifyResult = await this.ipg\n      .post('/verify', {\n        merchant: 'zibal',\n        trackId,\n      })\n      .toPromise();\n\n    if (verifyResult.data.status == 1) {\n      order.status = OrderStatusTypes.Confirm;\n      order.RRN = trackId;\n      await order.save();\n    }\n    return order;\n  }\n\n  async inquiry(trackId: string) {\n    const result = await this.ipg\n      .post('/inquiry', {\n        merchant: 'zibal',\n        trackId,\n      })\n      .toPromise();\n    return result.data;\n  }\n\n  async handleCallback(trackId: string, success: string) {\n    if (success == '0') {\n      await this.orderRepo.findOneAndUpdate(\n        { bankToken: trackId },\n        { status: OrderStatusTypes.Failed },\n      );\n      throw new PreconditionFailedException(\n        'پرداخت شما موفقیت آمیز نبود. در صورت کسر وجه از حساب شما مبلغ طی ۷۲ ساعت آینده بازخواهد گشت.',\n      );\n    }\n    const orderInfo = await this.confirm(trackId);\n\n    const { planId, userId } = orderInfo;\n    const plan = await this.plansRepo.findById(planId);\n\n    await this.userPlansRepo.create({\n      planId,\n      userId,\n      status: StatusTypes.Active,\n      expiredAt: moment().add(plan.duration, 'day'),\n    });\n\n    return {\n      status: orderInfo.status,\n      name: plan.name,\n      price: plan.price,\n      paymentDate: orderInfo.updatedAt,\n      RRN: orderInfo.RRN,\n    };\n  }\n\n  async getOrderDetails(trackId: string) {\n    return this.orderRepo.findOne(\n      { bankToken: trackId },\n      {},\n      { populate: { path: 'planId', select: 'name' } },\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PlansController.html":{"url":"controllers/PlansController.html","title":"controller - PlansController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PlansController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/v1/plans/plans.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                v1.0/plans\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                createPlan\n                            \n                            \n                                    \n                                    \n                                    Async\n                                plansList\n                            \n                            \n                                    \n                                    \n                                    Async\n                                purchasePlan\n                            \n                            \n                                    \n                                    \n                                    \n                                showPlansIndex\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        createPlan\n                        \n                    \n                \n            \n            \n                \n                        \n                    createPlan(body: CreatePlanDTO, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthenticateGuard)@Post('/')\n                \n            \n\n                    \n                        \n                            Defined in src/v1/plans/plans.controller.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            CreatePlanDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        plansList\n                        \n                    \n                \n            \n            \n                \n                        \n                    plansList(req: Request, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthenticateGuard)@Get('/list')\n                \n            \n\n                    \n                        \n                            Defined in src/v1/plans/plans.controller.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                            Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        purchasePlan\n                        \n                    \n                \n            \n            \n                \n                        \n                    purchasePlan(planId: string, req: Request, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthenticateGuard)@Get('/purchase/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/v1/plans/plans.controller.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                planId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                            Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        showPlansIndex\n                        \n                    \n                \n            \n            \n                \n                        \n                    showPlansIndex()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Render('panel/plans')@UseGuards(AuthenticateGuard)@Get('/')\n                \n            \n\n                    \n                        \n                            Defined in src/v1/plans/plans.controller.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  Param,\n  Post,\n  Render,\n  Req,\n  Res,\n  UseGuards,\n} from '@nestjs/common';\nimport AuthenticateGuard from '../../component/guards/authenticate.guard';\nimport { Request, Response } from 'express';\nimport { PlansService } from './plans.service';\nimport { CreatePlanDTO } from './plan.dto';\nimport { validateBody } from '../../utils';\n\n@Controller('v1.0/plans')\nexport class PlansController {\n  constructor(private readonly planService: PlansService) {}\n\n  @Render('panel/plans')\n  @UseGuards(AuthenticateGuard)\n  @Get('/')\n  showPlansIndex() {}\n\n  @UseGuards(AuthenticateGuard)\n  @Post('/')\n  async createPlan(@Body() body: CreatePlanDTO, @Res() res: Response) {\n    try {\n      await validateBody(body, CreatePlanDTO);\n      await this.planService.create(body);\n      res.redirect('/v1.0/plans');\n    } catch (e) {\n      const errors = Array.isArray(e.response.message)\n        ? e.response.message\n        : [e.response.message];\n      res.render('panel/plans', { errors });\n    }\n  }\n\n  @UseGuards(AuthenticateGuard)\n  @Get('/list')\n  async plansList(@Req() req: Request, @Res() res: Response) {\n    const { draw, start, length } = req.query;\n    const plans = await this.planService.getPlansList(\n      req.session.userId,\n      +start,\n      +length,\n    );\n    const output = {\n      draw: +draw,\n      recordsTotal: plans.totalDocs,\n      recordsFiltered: plans.totalDocs,\n      data: plans.docs.map((item) => {\n        const row = [\n          item.name,\n          `${item.size} بایت`,\n          `${item.duration} روز`,\n          `${item.price} تومان`,\n          item.purchased\n            ? 'خریداری شده'\n            : `خرید`,\n        ];\n        if (req.user.isAdmin) {\n          row.push(\n            `ویرایش`,\n          );\n        }\n        return row;\n      }),\n    };\n    res.send(output);\n  }\n\n  @UseGuards(AuthenticateGuard)\n  @Get('/purchase/:id')\n  async purchasePlan(\n    @Param('id') planId: string,\n    @Req() req: Request,\n    @Res() res: Response,\n  ) {\n    try {\n      const { redirectUrl } = await this.planService.purchase(\n        planId,\n        req.session.userId,\n      );\n      res.redirect(redirectUrl);\n    } catch (e) {\n      const errors = Array.isArray(e.response.message)\n        ? e.response.message\n        : [e.response.message];\n      res.render('panel/plans', { OrderErrors: errors });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PlansModule.html":{"url":"modules/PlansModule.html","title":"module - PlansModule","body":"\n                   \n\n\n\n\n    Modules\n    PlansModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PlansModule\n\n\n\ncluster_PlansModule_providers\n\n\n\ncluster_PlansModule_imports\n\n\n\n\nPaymentModule\n\nPaymentModule\n\n\n\nPlansModule\n\nPlansModule\n\nPlansModule -->\n\nPaymentModule->PlansModule\n\n\n\n\n\nPlansService\n\nPlansService\n\nPlansModule -->\n\nPlansService->PlansModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/v1/plans/plans.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PlansService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PlansController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PaymentModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PlansController } from './plans.controller';\nimport { PlansService } from './plans.service';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { UserModelDefinition } from '../../models/user.model';\nimport { UsersPlanDefinition } from '../../models/usersPlan.model';\nimport { ServicePlansDefinition } from '../../models/servicePlans.model';\nimport { PaymentModule } from '../payment/payment.module';\n\n@Module({\n  imports: [\n    PaymentModule,\n    MongooseModule.forFeature([\n      UserModelDefinition,\n      UsersPlanDefinition,\n      ServicePlansDefinition,\n    ]),\n  ],\n  controllers: [PlansController],\n  providers: [PlansService],\n})\nexport class PlansModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PlansService.html":{"url":"injectables/PlansService.html","title":"injectable - PlansService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PlansService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/v1/plans/plans.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Private\n                                    Readonly\n                                plansRepo\n                            \n                            \n                                    \n                                    Private\n                                    Readonly\n                                userPlansRepo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                getPlansList\n                            \n                            \n                                    Async\n                                purchase\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ipgService: PaymentService)\n                    \n                \n                        \n                            \n                                Defined in src/v1/plans/plans.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ipgService\n                                                  \n                                                        \n                                                                        PaymentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data: CreatePlanDTO)\n                \n            \n\n\n                    \n                        \n                            Defined in src/v1/plans/plans.service.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            CreatePlanDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getPlansList\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPlansList(userId: string | Types.ObjectId, offset: number, limit: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/v1/plans/plans.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                        string | Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                offset\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    0\n                                            \n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    10\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        purchase\n                        \n                    \n                \n            \n            \n                \n                        \n                    purchase(planId: string, userId: string | Types.ObjectId)\n                \n            \n\n\n                    \n                        \n                            Defined in src/v1/plans/plans.service.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                planId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                        string | Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Private\n                            Readonly\n                        plansRepo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PaginateModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @InjectModel(ServicePlansModel.name)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/plans/plans.service.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Private\n                            Readonly\n                        userPlansRepo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @InjectModel(UsersPlanModel.name)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/plans/plans.service.ts:28\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  ConflictException,\n  Injectable,\n  NotFoundException,\n} from '@nestjs/common';\nimport { Model, PaginateModel, Types } from 'mongoose';\nimport { InjectModel } from '@nestjs/mongoose';\nimport {\n  ServicePlansModel,\n  ServicesTypes,\n} from '../../models/servicePlans.model';\nimport {\n  StatusTypes,\n  StatusTypes as UsersPlanStatusTypes,\n  UsersPlanModel,\n} from '../../models/usersPlan.model';\nimport { CreatePlanDTO } from './plan.dto';\nimport { PaymentService } from '../payment/payment.service';\n\n@Injectable()\nexport class PlansService {\n  constructor(private readonly ipgService: PaymentService) {}\n\n  @InjectModel(ServicePlansModel.name)\n  private readonly plansRepo: PaginateModel;\n\n  @InjectModel(UsersPlanModel.name)\n  private readonly userPlansRepo: Model;\n\n  async getPlansList(\n    userId: string | Types.ObjectId,\n    offset: number = 0,\n    limit: number = 10,\n  ) {\n    const plans = await this.plansRepo.paginate(\n      {\n        type: { $nin: [ServicesTypes.Free, ServicesTypes.Starter] },\n        status: StatusTypes.Active,\n      },\n      { offset, limit },\n    );\n\n    const userPlans = (\n      await this.userPlansRepo.find({\n        status: UsersPlanStatusTypes.Active,\n        userId: new Types.ObjectId(userId),\n      })\n    ).filter((plan) => {\n      if (new Date().getTime() > new Date(plan.expiredAt).getTime()) {\n        plan.status = StatusTypes.Expired;\n        plan.save();\n      } else {\n        return plan;\n      }\n    });\n\n    return {\n      totalDocs: plans.totalDocs,\n      docs: plans.docs.map((plan) => {\n        return {\n          ...plan.toJSON(),\n          purchased: userPlans\n            .map((item) => item.planId.toString())\n            .includes(plan._id.toString()),\n        };\n      }),\n    };\n  }\n\n  async create(data: CreatePlanDTO) {\n    const { size, type, name, duration, price } = data;\n    const plan = await this.plansRepo.findOne({ size, duration, price });\n    if (plan) {\n      throw new ConflictException('اشتراک با این مشخصات موجود است.');\n    }\n    await this.plansRepo.create({ name, duration, price, size, type });\n  }\n\n  async purchase(planId: string, userId: string | Types.ObjectId) {\n    const userPlan = await this.userPlansRepo.findOne({\n      userId,\n      planId,\n      expiredAt: { $gt: new Date() },\n    });\n    if (userPlan)\n      throw new ConflictException('اشتراک مورد برای شما فعال میباشد.');\n    const plan = await this.plansRepo.findOne({\n      _id: planId,\n      status: StatusTypes.Active,\n    });\n    if (!plan) throw new NotFoundException('اشتراک مورد نظر یافت نشد.');\n    const order = await this.ipgService.requestOrder({\n      planId,\n      userId,\n      amount: plan.price,\n    });\n    return order;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Request.html":{"url":"interfaces/Request.html","title":"interface - Request","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Request\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/component/guards/authenticate.guard.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            session\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        session\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        session:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         UserDocument\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserDocument\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\nimport { Request, Response } from 'express';\nimport UnAuthenticatedException from '../exceptions/UnAuthenticated.exception';\nimport { Model, Types } from 'mongoose';\nimport { UserDocument, UserModel } from '../../models/user.model';\nimport { InjectModel } from '@nestjs/mongoose';\n\n@Injectable()\nexport default class AuthenticateGuard implements CanActivate {\n  constructor(\n    @InjectModel(UserModel.name) private readonly userModel: Model,\n  ) {}\n  async canActivate(context: ExecutionContext): Promise {\n    const req = context.switchToHttp().getRequest();\n    const res = context.switchToHttp().getResponse();\n\n    if (!req.session.isLoggedIn) {\n      throw new UnAuthenticatedException();\n    } else {\n      const user = await this.userModel.findById(req.session.userId);\n      req.user = user;\n      res.locals.session = req.session;\n      res.locals.user = user;\n\n      return true;\n    }\n  }\n}\n\ndeclare global {\n  namespace Express {\n    interface Request {\n      user: UserDocument;\n      session: {\n        userId: Types.ObjectId;\n        access: string[];\n        username: string;\n        isLoggedIn: boolean;\n      };\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/S3Service.html":{"url":"injectables/S3Service.html","title":"injectable - S3Service","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  S3Service\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/v1/file-service/s3.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                s3\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                downloadFromS3\n                            \n                            \n                                    Async\n                                removeFromS3\n                            \n                            \n                                    Async\n                                uploadToS3\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        downloadFromS3\n                        \n                    \n                \n            \n            \n                \n                        \n                    downloadFromS3(fileToken: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/v1/file-service/s3.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeFromS3\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeFromS3(fileToken: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/v1/file-service/s3.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        uploadToS3\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadToS3(data: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/v1/file-service/s3.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        s3\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new S3({\n    endpoint: `storage.iran.liara.space`,\n    region: 'default',\n    credentials: {\n      secretAccessKey: 'c5107f54-94ae-46ad-aa52-3cc3d2994d87',\n      accessKeyId: '033ddgevolakgllu',\n    },\n  })\n                    \n                \n                    \n                        \n                                Defined in src/v1/file-service/s3.service.ts:6\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { S3 } from 'aws-sdk';\n\n@Injectable()\nexport class S3Service {\n  private readonly s3 = new S3({\n    endpoint: `storage.iran.liara.space`,\n    region: 'default',\n    credentials: {\n      secretAccessKey: 'c5107f54-94ae-46ad-aa52-3cc3d2994d87',\n      accessKeyId: '033ddgevolakgllu',\n    },\n  });\n\n  async uploadToS3(data: {\n    key: string;\n    fileSize: number;\n    mimeType: string;\n    file: Buffer;\n  }) {\n    const { key, file, fileSize, mimeType } = data;\n\n    return await this.s3\n      .upload({\n        Body: file,\n        Bucket: 'file-service',\n        ContentLength: fileSize,\n        Key: key,\n        ContentType: mimeType,\n      })\n      .promise();\n  }\n\n  async downloadFromS3(fileToken: string) {\n    return this.s3\n      .getObject({ Bucket: 'file-service', Key: fileToken })\n      .createReadStream();\n  }\n\n  async removeFromS3(fileToken: string) {\n    return this.s3\n      .deleteObject({ Bucket: 'file-service', Key: fileToken })\n      .promise();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ServicePlansModel.html":{"url":"classes/ServicePlansModel.html","title":"class - ServicePlansModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ServicePlansModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/servicePlans.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                    \n                                duration\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                price\n                            \n                            \n                                    \n                                size\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                type\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/models/servicePlans.model.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        duration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/servicePlans.model.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/servicePlans.model.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/servicePlans.model.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/servicePlans.model.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StatusTypes\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, enum: undefined, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/servicePlans.model.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ServicesTypes\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, enum: undefined, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/servicePlans.model.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/models/servicePlans.model.ts:44\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModelDefinition, Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { HydratedDocument } from 'mongoose';\nimport * as mongoosePaginate from 'mongoose-paginate-v2';\n\nexport enum StatusTypes {\n  Active = 'ACTIVE',\n  Deleted = 'DELETED',\n}\n\nexport enum ServicesTypes {\n  Starter = 'STARTER',\n  Free = 'FREE',\n  Saleable = 'SALEABLE',\n}\n@Schema({ collection: 'service-plans', timestamps: true })\nexport class ServicePlansModel {\n  @Prop({\n    type: String,\n    required: true,\n  })\n  name: string;\n\n  @Prop({ type: Number, required: true })\n  size: string;\n\n  @Prop({ type: Number, required: true })\n  duration: string;\n\n  @Prop({ type: Number, required: true })\n  price: number;\n\n  @Prop({ type: String, enum: Object.values(ServicesTypes), required: true })\n  type: ServicesTypes;\n\n  @Prop({\n    type: String,\n    enum: Object.values(StatusTypes),\n    default: StatusTypes.Active,\n  })\n  status: StatusTypes;\n\n  createdAt!: Date;\n\n  updatedAt!: Date;\n}\n\nexport const ServicePlansSchema =\n  SchemaFactory.createForClass(ServicePlansModel);\nexport type ServicePlansDocument = HydratedDocument;\n\nServicePlansSchema.plugin(mongoosePaginate);\nexport const ServicePlansDefinition: ModelDefinition = {\n  name: ServicePlansModel.name,\n  schema: ServicePlansSchema,\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignupDTO.html":{"url":"classes/SignupDTO.html","title":"class - SignupDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignupDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/v1/user/user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                confirmPassword\n                            \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        confirmPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({message: 'تکرار رمزعبور باید یک رشته متنی باشد.'})@MinLength(8, {message: 'تکرار رمز عبور باید بین ۸ تا ۳۲ کاراکتر باشد.'})@MaxLength(32, {message: 'تکرار رمز عبور باید بین ۸ تا ۳۲ کاراکتر باشد.'})@IsNotEmpty({message: 'تکرار رمزعبور نمیتواند خالی باشد'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/user/user.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({message: 'ایمیل باید یک رشته متنی باشد.'})@IsEmail({}, {message: 'ایمیل معتبر نمی باشد.'})@IsNotEmpty({message: 'ایمیل نمیتواند خالی باشد'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/user/user.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({message: 'رمزعبور باید یک رشته متنی باشد.'})@MinLength(8, {message: 'رمز عبور باید بین ۸ تا ۳۲ کاراکتر باشد.'})@MaxLength(32, {message: 'رمز عبور باید بین ۸ تا ۳۲ کاراکتر باشد.'})@IsNotEmpty({message: 'رمزعبور نمیتواند خالی باشد'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/user/user.dto.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsEmail,\n  IsNotEmpty,\n  IsNumber,\n  IsString,\n  Max,\n  MaxLength,\n  Min,\n  MinLength,\n} from 'class-validator';\nimport { Type } from 'class-transformer';\n\nexport class SignupDTO {\n  @IsString({ message: 'ایمیل باید یک رشته متنی باشد.' })\n  @IsEmail({}, { message: 'ایمیل معتبر نمی باشد.' })\n  @IsNotEmpty({ message: 'ایمیل نمیتواند خالی باشد' })\n  email: string;\n\n  @IsString({ message: 'رمزعبور باید یک رشته متنی باشد.' })\n  @MinLength(8, { message: 'رمز عبور باید بین ۸ تا ۳۲ کاراکتر باشد.' })\n  @MaxLength(32, { message: 'رمز عبور باید بین ۸ تا ۳۲ کاراکتر باشد.' })\n  @IsNotEmpty({ message: 'رمزعبور نمیتواند خالی باشد' })\n  password: string;\n\n  @IsString({ message: 'تکرار رمزعبور باید یک رشته متنی باشد.' })\n  @MinLength(8, { message: 'تکرار رمز عبور باید بین ۸ تا ۳۲ کاراکتر باشد.' })\n  @MaxLength(32, { message: 'تکرار رمز عبور باید بین ۸ تا ۳۲ کاراکتر باشد.' })\n  @IsNotEmpty({ message: 'تکرار رمزعبور نمیتواند خالی باشد' })\n  confirmPassword: string;\n}\n\nexport class LoginDTO {\n  @IsString({ message: 'ایمیل باید یک رشته متنی باشد.' })\n  @IsEmail({}, { message: 'ایمیل معتبر نمی باشد.' })\n  @IsNotEmpty({ message: 'ایمیل نمیتواند خالی باشد' })\n  email: string;\n\n  @IsString({ message: 'رمزعبور باید یک رشته متنی باشد.' })\n  @MinLength(8, { message: 'رمز عبور باید بین ۸ تا ۳۲ کاراکتر باشد.' })\n  @MaxLength(32, { message: 'رمز عبور باید بین ۸ تا ۳۲ کاراکتر باشد.' })\n  @IsNotEmpty({ message: 'رمزعبور نمیتواند خالی باشد' })\n  password: string;\n}\n\nexport class UserUpdateDTO {\n  @IsString({ message: 'نام کاربری باید یک رشته متنی باشد.' })\n  @MinLength(3, { message: 'نام کاربری باید بین ۳ تا ۱۶ کاراکتر باشد.' })\n  @MaxLength(16, { message: 'نام کاربری باید بین ۳ تا ۱۶ کاراکتر باشد.' })\n  @IsNotEmpty({ message: 'نام کاربری نمیتواند خالی باشد' })\n  username: string;\n  @IsString({ message: 'نام باید یک رشته متنی باشد.' })\n  @MinLength(3, { message: 'نام باید بین ۳ تا ۱۶ کاراکتر باشد.' })\n  @MaxLength(16, { message: 'نام باید بین ۳ تا ۱۶ کاراکتر باشد.' })\n  firstName: string;\n  @IsString({ message: 'نام خانوادگی باید یک رشته متنی باشد.' })\n  @MinLength(3, { message: 'نام خانوادگی باید بین ۳ تا ۱۶ کاراکتر باشد.' })\n  @MaxLength(16, { message: 'نام خانوادگی باید بین ۳ تا ۱۶ کاراکتر باشد.' })\n  lastName: string;\n  @IsString({ message: 'توضیحات باید یک رشته متنی باشد.' })\n  @MinLength(3, { message: 'توضیحات باید بین ۳ تا ۲۵۰ کاراکتر باشد.' })\n  @MaxLength(250, { message: 'توضیحات باید بین ۳ تا ۲۵۰ کاراکتر باشد.' })\n  description: string;\n}\n\nexport class UserCreateDTO {\n  @IsString({ message: 'نام کاربری باید یک رشته متنی باشد.' })\n  @MinLength(3, { message: 'نام کاربری باید بین ۳ تا ۱۶ کاراکتر باشد.' })\n  @MaxLength(16, { message: 'نام کاربری باید بین ۳ تا ۱۶ کاراکتر باشد.' })\n  @IsNotEmpty({ message: 'نام کاربری نمیتواند خالی باشد' })\n  username: string;\n  @IsString({ message: 'نام باید یک رشته متنی باشد.' })\n  @MinLength(3, { message: 'نام باید بین ۳ تا ۱۶ کاراکتر باشد.' })\n  @MaxLength(16, { message: 'نام باید بین ۳ تا ۱۶ کاراکتر باشد.' })\n  firstName: string;\n  @IsString({ message: 'نام خانوادگی باید یک رشته متنی باشد.' })\n  @MinLength(3, { message: 'نام خانوادگی باید بین ۳ تا ۱۶ کاراکتر باشد.' })\n  @MaxLength(16, { message: 'نام خانوادگی باید بین ۳ تا ۱۶ کاراکتر باشد.' })\n  lastName: string;\n  @IsString({ message: 'توضیحات باید یک رشته متنی باشد.' })\n  @MinLength(3, { message: 'توضیحات باید بین ۳ تا ۲۵۰ کاراکتر باشد.' })\n  @MaxLength(250, { message: 'توضیحات باید بین ۳ تا ۲۵۰ کاراکتر باشد.' })\n  description: string;\n\n  @IsString({ message: 'ایمیل باید یک رشته متنی باشد.' })\n  @IsEmail({}, { message: 'ایمیل معتبر نمی باشد.' })\n  @IsNotEmpty({ message: 'ایمیل نمیتواند خالی باشد' })\n  email: string;\n\n  @IsString({ message: 'رمزعبور باید یک رشته متنی باشد.' })\n  @MinLength(8, { message: 'رمز عبور باید بین ۸ تا ۳۲ کاراکتر باشد.' })\n  @MaxLength(32, { message: 'رمز عبور باید بین ۸ تا ۳۲ کاراکتر باشد.' })\n  @IsNotEmpty({ message: 'رمزعبور نمیتواند خالی باشد' })\n  password: string;\n\n  @IsString({ message: 'تکرار رمزعبور باید یک رشته متنی باشد.' })\n  @MinLength(8, { message: 'تکرار رمز عبور باید بین ۸ تا ۳۲ کاراکتر باشد.' })\n  @MaxLength(32, { message: 'تکرار رمز عبور باید بین ۸ تا ۳۲ کاراکتر باشد.' })\n  @IsNotEmpty({ message: 'تکرار رمزعبور نمیتواند خالی باشد' })\n  confirmPassword: string;\n\n  @IsNumber({}, { message: 'مقدار دسترسی ادمین معتبر نمی باشد.' })\n  @Min(0, { message: 'مقدار دسترسی ادمین معتبر نمی باشد.' })\n  @Max(1, { message: 'مقدار دسترسی ادمین معتبر نمی باشد.' })\n  @Type((type) => Number)\n  isAdmin: 0 | 1;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UnAuthenticatedException.html":{"url":"classes/UnAuthenticatedException.html","title":"class - UnAuthenticatedException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UnAuthenticatedException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/component/exceptions/UnAuthenticated.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/component/exceptions/UnAuthenticated.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException } from '@nestjs/common';\n\nexport default class UnAuthenticatedException extends HttpException {\n  constructor() {\n    super('UnAuthenticated', 401);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UnAuthenticatedExceptionFilter.html":{"url":"classes/UnAuthenticatedExceptionFilter.html","title":"class - UnAuthenticatedExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UnAuthenticatedExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/component/exception-filters/UnAuthenticated.exception.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: UnAuthenticatedException, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/component/exception-filters/UnAuthenticated.exception.filter.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                            UnAuthenticatedException\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter } from '@nestjs/common';\nimport { Response } from 'express';\nimport UnAuthenticatedException from '../exceptions/UnAuthenticated.exception';\n\n@Catch(UnAuthenticatedException)\nexport default class UnAuthenticatedExceptionFilter\n  implements ExceptionFilter\n{\n  catch(exception: UnAuthenticatedException, host: ArgumentsHost): any {\n    const res = host.switchToHttp().getResponse();\n    res.redirect('/');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/v1/user/user.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                getProfileView\n                            \n                            \n                                    \n                                    Async\n                                login\n                            \n                            \n                                    \n                                    \n                                logout\n                            \n                            \n                                    \n                                    Async\n                                signup\n                            \n                            \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(body: UserCreateDTO, req: Request, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/create')@UseGuards(AuthenticateGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/v1/user/user.controller.ts:111\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            UserCreateDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                            Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        getProfileView\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProfileView(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/profile')@UseGuards(AuthenticateGuard)@Render('panel/profile')\n                \n            \n\n                    \n                        \n                            Defined in src/v1/user/user.controller.ts:82\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                            Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(body: LoginDTO, req: Request, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/login')\n                \n            \n\n                    \n                        \n                            Defined in src/v1/user/user.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            LoginDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                            Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/logout')@Redirect('/')\n                \n            \n\n                    \n                        \n                            Defined in src/v1/user/user.controller.ts:136\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                            Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        signup\n                        \n                    \n                \n            \n            \n                \n                        \n                    signup(body: SignupDTO, req: Request, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/signup')\n                \n            \n\n                    \n                        \n                            Defined in src/v1/user/user.controller.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            SignupDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                            Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(body: UserUpdateDTO, req: Request, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/update')@UseGuards(AuthenticateGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/v1/user/user.controller.ts:92\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            UserUpdateDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                            Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  Post,\n  Redirect,\n  Render,\n  Req,\n  Res,\n  UnauthorizedException,\n  UseGuards,\n} from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { LoginDTO, SignupDTO, UserCreateDTO, UserUpdateDTO } from './user.dto';\nimport { Request, Response } from 'express';\nimport AuthenticateGuard from '../../component/guards/authenticate.guard';\nimport { validateBody } from '../../utils';\nimport { FileServiceService } from '../file-service/file-service.service';\n\n@Controller({ path: '/v1.0/user' })\nexport class UserController {\n  constructor(\n    private readonly userService: UserService,\n    private readonly fileService: FileServiceService,\n  ) {}\n\n  @Post('/login')\n  async login(\n    @Body() body: LoginDTO,\n    @Req() req: Request,\n    @Res() res: Response,\n  ) {\n    try {\n      await validateBody(body, LoginDTO);\n      const { email, password } = body;\n      const user = await this.userService.login(email, password);\n      req.session.userId = user._id;\n      req.session.access = user.scope;\n      req.session.username = user.email;\n      req.session.isLoggedIn = true;\n      res.redirect('/v1.0/dashboard');\n    } catch (e) {\n      const errors = Array.isArray(e.response.message)\n        ? e.response.message\n        : [e.response.message];\n      res.render('others/index', { errors, login: true });\n    }\n  }\n  @Post('/signup')\n  async signup(\n    @Body() body: SignupDTO,\n    @Req() req: Request,\n    @Res() res: Response,\n  ) {\n    try {\n      await validateBody(body, SignupDTO);\n      const { email, confirmPassword, password } = body;\n      const user = await this.userService.signup(\n        email,\n        password,\n        confirmPassword,\n      );\n      req.session.userId = user._id;\n      req.session.access = user.scope;\n      req.session.username = user.email;\n      req.session.isLoggedIn = true;\n      res.redirect('/v1.0/dashboard');\n    } catch (e) {\n      const errors = Array.isArray(e.response.message)\n        ? e.response.message\n        : [e.response.message];\n      return res.render('others/index', {\n        errors,\n        signup: true,\n      });\n    }\n  }\n\n  @Get('/profile')\n  @UseGuards(AuthenticateGuard)\n  @Render('panel/profile')\n  async getProfileView(@Req() req: Request) {\n    return {\n      filesCount: await this.fileService.getUserFilesCount(req.session.userId),\n      totalStorage: await this.fileService.getTotalStorage(req.session.userId),\n      usedStorage: await this.fileService.getUsedStorage(req.session.userId),\n    };\n  }\n\n  @Post('/update')\n  @UseGuards(AuthenticateGuard)\n  async update(\n    @Body() body: UserUpdateDTO,\n    @Req() req: Request,\n    @Res() res: Response,\n  ) {\n    try {\n      await validateBody(body, UserUpdateDTO);\n      await this.userService.updateUserById(req.session.userId, body);\n    } catch (e) {\n      const errors = Array.isArray(e.response.message)\n        ? e.response.message\n        : [e.response.message];\n      return res.render('panel/profile', { errors, info: req.body });\n    }\n    res.redirect('/v1.0/user/profile');\n  }\n\n  @Post('/create')\n  @UseGuards(AuthenticateGuard)\n  async create(\n    @Body() body: UserCreateDTO,\n    @Req() req: Request,\n    @Res() res: Response,\n  ) {\n    try {\n      if (!req.user.isAdmin) {\n        throw new UnauthorizedException('دسترسی مجاز نمیباشد');\n      }\n      await validateBody(body, UserCreateDTO);\n      await this.userService.create(req.session.userId, body);\n    } catch (e) {\n      const errors = Array.isArray(e.response.message)\n        ? e.response.message\n        : [e.response.message];\n      return res.render('panel/profile', {\n        createUserErrors: errors,\n        info: req.body,\n      });\n    }\n    res.redirect('/v1.0/user/profile');\n  }\n\n  @Get('/logout')\n  @Redirect('/')\n  logout(@Req() req: Request) {\n    (req.session as any).destroy();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserCreateDTO.html":{"url":"classes/UserCreateDTO.html","title":"class - UserCreateDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserCreateDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/v1/user/user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                confirmPassword\n                            \n                            \n                                    \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                firstName\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                isAdmin\n                            \n                            \n                                    \n                                    \n                                    \n                                lastName\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        confirmPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({message: 'تکرار رمزعبور باید یک رشته متنی باشد.'})@MinLength(8, {message: 'تکرار رمز عبور باید بین ۸ تا ۳۲ کاراکتر باشد.'})@MaxLength(32, {message: 'تکرار رمز عبور باید بین ۸ تا ۳۲ کاراکتر باشد.'})@IsNotEmpty({message: 'تکرار رمزعبور نمیتواند خالی باشد'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/user/user.dto.ts:99\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({message: 'توضیحات باید یک رشته متنی باشد.'})@MinLength(3, {message: 'توضیحات باید بین ۳ تا ۲۵۰ کاراکتر باشد.'})@MaxLength(250, {message: 'توضیحات باید بین ۳ تا ۲۵۰ کاراکتر باشد.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/user/user.dto.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({message: 'ایمیل باید یک رشته متنی باشد.'})@IsEmail({}, {message: 'ایمیل معتبر نمی باشد.'})@IsNotEmpty({message: 'ایمیل نمیتواند خالی باشد'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/user/user.dto.ts:87\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({message: 'نام باید یک رشته متنی باشد.'})@MinLength(3, {message: 'نام باید بین ۳ تا ۱۶ کاراکتر باشد.'})@MaxLength(16, {message: 'نام باید بین ۳ تا ۱۶ کاراکتر باشد.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/user/user.dto.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        isAdmin\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"0\" | \"1\"\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber({}, {message: 'مقدار دسترسی ادمین معتبر نمی باشد.'})@Min(0, {message: 'مقدار دسترسی ادمین معتبر نمی باشد.'})@Max(1, {message: 'مقدار دسترسی ادمین معتبر نمی باشد.'})@Type(type => Number)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/user/user.dto.ts:105\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({message: 'نام خانوادگی باید یک رشته متنی باشد.'})@MinLength(3, {message: 'نام خانوادگی باید بین ۳ تا ۱۶ کاراکتر باشد.'})@MaxLength(16, {message: 'نام خانوادگی باید بین ۳ تا ۱۶ کاراکتر باشد.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/user/user.dto.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({message: 'رمزعبور باید یک رشته متنی باشد.'})@MinLength(8, {message: 'رمز عبور باید بین ۸ تا ۳۲ کاراکتر باشد.'})@MaxLength(32, {message: 'رمز عبور باید بین ۸ تا ۳۲ کاراکتر باشد.'})@IsNotEmpty({message: 'رمزعبور نمیتواند خالی باشد'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/user/user.dto.ts:93\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({message: 'نام کاربری باید یک رشته متنی باشد.'})@MinLength(3, {message: 'نام کاربری باید بین ۳ تا ۱۶ کاراکتر باشد.'})@MaxLength(16, {message: 'نام کاربری باید بین ۳ تا ۱۶ کاراکتر باشد.'})@IsNotEmpty({message: 'نام کاربری نمیتواند خالی باشد'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/user/user.dto.ts:70\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsEmail,\n  IsNotEmpty,\n  IsNumber,\n  IsString,\n  Max,\n  MaxLength,\n  Min,\n  MinLength,\n} from 'class-validator';\nimport { Type } from 'class-transformer';\n\nexport class SignupDTO {\n  @IsString({ message: 'ایمیل باید یک رشته متنی باشد.' })\n  @IsEmail({}, { message: 'ایمیل معتبر نمی باشد.' })\n  @IsNotEmpty({ message: 'ایمیل نمیتواند خالی باشد' })\n  email: string;\n\n  @IsString({ message: 'رمزعبور باید یک رشته متنی باشد.' })\n  @MinLength(8, { message: 'رمز عبور باید بین ۸ تا ۳۲ کاراکتر باشد.' })\n  @MaxLength(32, { message: 'رمز عبور باید بین ۸ تا ۳۲ کاراکتر باشد.' })\n  @IsNotEmpty({ message: 'رمزعبور نمیتواند خالی باشد' })\n  password: string;\n\n  @IsString({ message: 'تکرار رمزعبور باید یک رشته متنی باشد.' })\n  @MinLength(8, { message: 'تکرار رمز عبور باید بین ۸ تا ۳۲ کاراکتر باشد.' })\n  @MaxLength(32, { message: 'تکرار رمز عبور باید بین ۸ تا ۳۲ کاراکتر باشد.' })\n  @IsNotEmpty({ message: 'تکرار رمزعبور نمیتواند خالی باشد' })\n  confirmPassword: string;\n}\n\nexport class LoginDTO {\n  @IsString({ message: 'ایمیل باید یک رشته متنی باشد.' })\n  @IsEmail({}, { message: 'ایمیل معتبر نمی باشد.' })\n  @IsNotEmpty({ message: 'ایمیل نمیتواند خالی باشد' })\n  email: string;\n\n  @IsString({ message: 'رمزعبور باید یک رشته متنی باشد.' })\n  @MinLength(8, { message: 'رمز عبور باید بین ۸ تا ۳۲ کاراکتر باشد.' })\n  @MaxLength(32, { message: 'رمز عبور باید بین ۸ تا ۳۲ کاراکتر باشد.' })\n  @IsNotEmpty({ message: 'رمزعبور نمیتواند خالی باشد' })\n  password: string;\n}\n\nexport class UserUpdateDTO {\n  @IsString({ message: 'نام کاربری باید یک رشته متنی باشد.' })\n  @MinLength(3, { message: 'نام کاربری باید بین ۳ تا ۱۶ کاراکتر باشد.' })\n  @MaxLength(16, { message: 'نام کاربری باید بین ۳ تا ۱۶ کاراکتر باشد.' })\n  @IsNotEmpty({ message: 'نام کاربری نمیتواند خالی باشد' })\n  username: string;\n  @IsString({ message: 'نام باید یک رشته متنی باشد.' })\n  @MinLength(3, { message: 'نام باید بین ۳ تا ۱۶ کاراکتر باشد.' })\n  @MaxLength(16, { message: 'نام باید بین ۳ تا ۱۶ کاراکتر باشد.' })\n  firstName: string;\n  @IsString({ message: 'نام خانوادگی باید یک رشته متنی باشد.' })\n  @MinLength(3, { message: 'نام خانوادگی باید بین ۳ تا ۱۶ کاراکتر باشد.' })\n  @MaxLength(16, { message: 'نام خانوادگی باید بین ۳ تا ۱۶ کاراکتر باشد.' })\n  lastName: string;\n  @IsString({ message: 'توضیحات باید یک رشته متنی باشد.' })\n  @MinLength(3, { message: 'توضیحات باید بین ۳ تا ۲۵۰ کاراکتر باشد.' })\n  @MaxLength(250, { message: 'توضیحات باید بین ۳ تا ۲۵۰ کاراکتر باشد.' })\n  description: string;\n}\n\nexport class UserCreateDTO {\n  @IsString({ message: 'نام کاربری باید یک رشته متنی باشد.' })\n  @MinLength(3, { message: 'نام کاربری باید بین ۳ تا ۱۶ کاراکتر باشد.' })\n  @MaxLength(16, { message: 'نام کاربری باید بین ۳ تا ۱۶ کاراکتر باشد.' })\n  @IsNotEmpty({ message: 'نام کاربری نمیتواند خالی باشد' })\n  username: string;\n  @IsString({ message: 'نام باید یک رشته متنی باشد.' })\n  @MinLength(3, { message: 'نام باید بین ۳ تا ۱۶ کاراکتر باشد.' })\n  @MaxLength(16, { message: 'نام باید بین ۳ تا ۱۶ کاراکتر باشد.' })\n  firstName: string;\n  @IsString({ message: 'نام خانوادگی باید یک رشته متنی باشد.' })\n  @MinLength(3, { message: 'نام خانوادگی باید بین ۳ تا ۱۶ کاراکتر باشد.' })\n  @MaxLength(16, { message: 'نام خانوادگی باید بین ۳ تا ۱۶ کاراکتر باشد.' })\n  lastName: string;\n  @IsString({ message: 'توضیحات باید یک رشته متنی باشد.' })\n  @MinLength(3, { message: 'توضیحات باید بین ۳ تا ۲۵۰ کاراکتر باشد.' })\n  @MaxLength(250, { message: 'توضیحات باید بین ۳ تا ۲۵۰ کاراکتر باشد.' })\n  description: string;\n\n  @IsString({ message: 'ایمیل باید یک رشته متنی باشد.' })\n  @IsEmail({}, { message: 'ایمیل معتبر نمی باشد.' })\n  @IsNotEmpty({ message: 'ایمیل نمیتواند خالی باشد' })\n  email: string;\n\n  @IsString({ message: 'رمزعبور باید یک رشته متنی باشد.' })\n  @MinLength(8, { message: 'رمز عبور باید بین ۸ تا ۳۲ کاراکتر باشد.' })\n  @MaxLength(32, { message: 'رمز عبور باید بین ۸ تا ۳۲ کاراکتر باشد.' })\n  @IsNotEmpty({ message: 'رمزعبور نمیتواند خالی باشد' })\n  password: string;\n\n  @IsString({ message: 'تکرار رمزعبور باید یک رشته متنی باشد.' })\n  @MinLength(8, { message: 'تکرار رمز عبور باید بین ۸ تا ۳۲ کاراکتر باشد.' })\n  @MaxLength(32, { message: 'تکرار رمز عبور باید بین ۸ تا ۳۲ کاراکتر باشد.' })\n  @IsNotEmpty({ message: 'تکرار رمزعبور نمیتواند خالی باشد' })\n  confirmPassword: string;\n\n  @IsNumber({}, { message: 'مقدار دسترسی ادمین معتبر نمی باشد.' })\n  @Min(0, { message: 'مقدار دسترسی ادمین معتبر نمی باشد.' })\n  @Max(1, { message: 'مقدار دسترسی ادمین معتبر نمی باشد.' })\n  @Type((type) => Number)\n  isAdmin: 0 | 1;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserModel.html":{"url":"classes/UserModel.html","title":"class - UserModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/user.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                firstName\n                            \n                            \n                                    \n                                isAdmin\n                            \n                            \n                                    \n                                lastName\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                scope\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user.model.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, unique: true, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user.model.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user.model.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isAdmin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Boolean, default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user.model.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user.model.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user.model.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        scope\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user.model.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StatusTypes\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, enum: undefined, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user.model.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user.model.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModelDefinition, Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { HydratedDocument } from 'mongoose';\nimport { StatusTypes } from './file.model';\n\n@Schema({ collection: 'users', timestamps: true })\nexport class UserModel {\n  @Prop({\n    type: String,\n    unique: true,\n    required: true,\n  })\n  email: string;\n  @Prop({ type: String, required: true })\n  password: string;\n  @Prop({ type: String })\n  firstName: string;\n  @Prop({ type: String })\n  lastName: string;\n  @Prop({ type: String })\n  description: string;\n  @Prop({ type: String })\n  username: string;\n  @Prop({ type: Boolean, default: false })\n  isAdmin: boolean;\n  @Prop({ type: [String], default: [] })\n  scope: Array;\n  @Prop({\n    type: String,\n    enum: Object.values(StatusTypes),\n    default: StatusTypes.Active,\n  })\n  status: StatusTypes;\n}\n\nexport const UserSchema = SchemaFactory.createForClass(UserModel);\nexport type UserDocument = HydratedDocument;\nexport const UserModelDefinition: ModelDefinition = {\n  name: UserModel.name,\n  schema: UserSchema,\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_imports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nFileServiceModule\n\nFileServiceModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nFileServiceModule->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/v1/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FileServiceModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserController } from './user.controller';\nimport { UserService } from './user.service';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { UserModelDefinition } from '../../models/user.model';\nimport { ServicePlansDefinition } from '../../models/servicePlans.model';\nimport { UsersPlanDefinition } from '../../models/usersPlan.model';\nimport { FileServiceModule } from '../file-service/file-service.module';\n\n@Module({\n  imports: [\n    FileServiceModule,\n    MongooseModule.forFeature([\n      UserModelDefinition,\n      ServicePlansDefinition,\n      UsersPlanDefinition,\n    ]),\n  ],\n  controllers: [UserController],\n  providers: [UserService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/v1/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Private\n                                    Readonly\n                                plansRepo\n                            \n                            \n                                    \n                                    Private\n                                    Readonly\n                                userPlansRepo\n                            \n                            \n                                    \n                                    Private\n                                    Readonly\n                                userRepo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                activateStarterPlans\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                signup\n                            \n                            \n                                    Async\n                                updateUserById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        activateStarterPlans\n                        \n                    \n                \n            \n            \n                \n                        \n                    activateStarterPlans(userId: Types.ObjectId)\n                \n            \n\n\n                    \n                        \n                            Defined in src/v1/user/user.service.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(id: string | Types.ObjectId, user: UserCreateDTO)\n                \n            \n\n\n                    \n                        \n                            Defined in src/v1/user/user.service.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        string | Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            UserCreateDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/v1/user/user.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        signup\n                        \n                    \n                \n            \n            \n                \n                        \n                    signup(email: string, password: string, confirmPassword: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/v1/user/user.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                confirmPassword\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateUserById\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUserById(id: string | Types.ObjectId, user: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/v1/user/user.service.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        string | Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Private\n                            Readonly\n                        plansRepo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @InjectModel(ServicePlansModel.name)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/user/user.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Private\n                            Readonly\n                        userPlansRepo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @InjectModel(UsersPlanModel.name)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/user/user.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Private\n                            Readonly\n                        userRepo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @InjectModel(UserModel.name)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/user/user.service.ts:22\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  ConflictException,\n  Injectable,\n  NotFoundException,\n} from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model, Types } from 'mongoose';\nimport { UserModel } from '../../models/user.model';\nimport * as bcrypt from 'bcrypt';\nimport {\n  ServicePlansModel,\n  ServicesTypes,\n  StatusTypes,\n} from '../../models/servicePlans.model';\nimport { UsersPlanModel } from '../../models/usersPlan.model';\nimport { UserCreateDTO } from './user.dto';\nimport * as moment from 'moment';\n\n@Injectable()\nexport class UserService {\n  @InjectModel(UserModel.name) private readonly userRepo: Model;\n  @InjectModel(UsersPlanModel.name)\n  private readonly userPlansRepo: Model;\n  @InjectModel(ServicePlansModel.name)\n  private readonly plansRepo: Model;\n  async signup(email: string, password: string, confirmPassword: string) {\n    const isUserExist = await this.userRepo.findOne({ email });\n    if (isUserExist) {\n      throw new ConflictException('کاربری با این نام قبلا ثبت شده است.');\n    }\n    if (password != confirmPassword) {\n      throw new BadRequestException('رمزعبور یکسان نمی باشد.');\n    }\n    const saltOrRounds = 10;\n    const hashedPassword = await bcrypt.hash(password, saltOrRounds);\n    const user = await this.userRepo.create({\n      email,\n      password: hashedPassword,\n    });\n    await this.activateStarterPlans(user._id);\n    return user;\n  }\n\n  async login(email: string, password: string) {\n    const userInfo = await this.userRepo.findOne({ email });\n    if (!userInfo) {\n      throw new ConflictException('کاربری با این ایمیل یافت نشد.');\n    }\n\n    if (!(await bcrypt.compare(password, userInfo.password))) {\n      throw new BadRequestException('رمزعبور صحیح نمی باشد.');\n    }\n    return userInfo;\n  }\n\n  async activateStarterPlans(userId: Types.ObjectId) {\n    const plans = await this.plansRepo.find({\n      type: ServicesTypes.Starter,\n      status: StatusTypes.Active,\n    });\n    for (let i = 0; i ) {\n    const userInfo = await this.userRepo.findById(id);\n    if (!userInfo) {\n      throw new NotFoundException('کاربری با این مشخصات یافت نشد.');\n    }\n    return this.userRepo.findByIdAndUpdate(id, user);\n  }\n\n  async create(id: string | Types.ObjectId, user: UserCreateDTO) {\n    const {\n      email,\n      password,\n      confirmPassword,\n      firstName,\n      lastName,\n      username,\n      description,\n      isAdmin,\n    } = user;\n    const isUserExist = await this.userRepo.findOne({ email });\n    if (isUserExist) {\n      throw new ConflictException('کاربری با این نام قبلا ثبت شده است.');\n    }\n    if (password != confirmPassword) {\n      throw new BadRequestException('رمزعبور یکسان نمی باشد.');\n    }\n    const saltOrRounds = 10;\n    const hashedPassword = await bcrypt.hash(password, saltOrRounds);\n    const createdUser = await this.userRepo.create({\n      email,\n      password: hashedPassword,\n      isAdmin,\n      firstName,\n      lastName,\n      username,\n      description,\n    });\n    await this.activateStarterPlans(createdUser._id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserUpdateDTO.html":{"url":"classes/UserUpdateDTO.html","title":"class - UserUpdateDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserUpdateDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/v1/user/user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                firstName\n                            \n                            \n                                    \n                                    \n                                    \n                                lastName\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({message: 'توضیحات باید یک رشته متنی باشد.'})@MinLength(3, {message: 'توضیحات باید بین ۳ تا ۲۵۰ کاراکتر باشد.'})@MaxLength(250, {message: 'توضیحات باید بین ۳ تا ۲۵۰ کاراکتر باشد.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/user/user.dto.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({message: 'نام باید یک رشته متنی باشد.'})@MinLength(3, {message: 'نام باید بین ۳ تا ۱۶ کاراکتر باشد.'})@MaxLength(16, {message: 'نام باید بین ۳ تا ۱۶ کاراکتر باشد.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/user/user.dto.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({message: 'نام خانوادگی باید یک رشته متنی باشد.'})@MinLength(3, {message: 'نام خانوادگی باید بین ۳ تا ۱۶ کاراکتر باشد.'})@MaxLength(16, {message: 'نام خانوادگی باید بین ۳ تا ۱۶ کاراکتر باشد.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/user/user.dto.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({message: 'نام کاربری باید یک رشته متنی باشد.'})@MinLength(3, {message: 'نام کاربری باید بین ۳ تا ۱۶ کاراکتر باشد.'})@MaxLength(16, {message: 'نام کاربری باید بین ۳ تا ۱۶ کاراکتر باشد.'})@IsNotEmpty({message: 'نام کاربری نمیتواند خالی باشد'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/v1/user/user.dto.ts:50\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsEmail,\n  IsNotEmpty,\n  IsNumber,\n  IsString,\n  Max,\n  MaxLength,\n  Min,\n  MinLength,\n} from 'class-validator';\nimport { Type } from 'class-transformer';\n\nexport class SignupDTO {\n  @IsString({ message: 'ایمیل باید یک رشته متنی باشد.' })\n  @IsEmail({}, { message: 'ایمیل معتبر نمی باشد.' })\n  @IsNotEmpty({ message: 'ایمیل نمیتواند خالی باشد' })\n  email: string;\n\n  @IsString({ message: 'رمزعبور باید یک رشته متنی باشد.' })\n  @MinLength(8, { message: 'رمز عبور باید بین ۸ تا ۳۲ کاراکتر باشد.' })\n  @MaxLength(32, { message: 'رمز عبور باید بین ۸ تا ۳۲ کاراکتر باشد.' })\n  @IsNotEmpty({ message: 'رمزعبور نمیتواند خالی باشد' })\n  password: string;\n\n  @IsString({ message: 'تکرار رمزعبور باید یک رشته متنی باشد.' })\n  @MinLength(8, { message: 'تکرار رمز عبور باید بین ۸ تا ۳۲ کاراکتر باشد.' })\n  @MaxLength(32, { message: 'تکرار رمز عبور باید بین ۸ تا ۳۲ کاراکتر باشد.' })\n  @IsNotEmpty({ message: 'تکرار رمزعبور نمیتواند خالی باشد' })\n  confirmPassword: string;\n}\n\nexport class LoginDTO {\n  @IsString({ message: 'ایمیل باید یک رشته متنی باشد.' })\n  @IsEmail({}, { message: 'ایمیل معتبر نمی باشد.' })\n  @IsNotEmpty({ message: 'ایمیل نمیتواند خالی باشد' })\n  email: string;\n\n  @IsString({ message: 'رمزعبور باید یک رشته متنی باشد.' })\n  @MinLength(8, { message: 'رمز عبور باید بین ۸ تا ۳۲ کاراکتر باشد.' })\n  @MaxLength(32, { message: 'رمز عبور باید بین ۸ تا ۳۲ کاراکتر باشد.' })\n  @IsNotEmpty({ message: 'رمزعبور نمیتواند خالی باشد' })\n  password: string;\n}\n\nexport class UserUpdateDTO {\n  @IsString({ message: 'نام کاربری باید یک رشته متنی باشد.' })\n  @MinLength(3, { message: 'نام کاربری باید بین ۳ تا ۱۶ کاراکتر باشد.' })\n  @MaxLength(16, { message: 'نام کاربری باید بین ۳ تا ۱۶ کاراکتر باشد.' })\n  @IsNotEmpty({ message: 'نام کاربری نمیتواند خالی باشد' })\n  username: string;\n  @IsString({ message: 'نام باید یک رشته متنی باشد.' })\n  @MinLength(3, { message: 'نام باید بین ۳ تا ۱۶ کاراکتر باشد.' })\n  @MaxLength(16, { message: 'نام باید بین ۳ تا ۱۶ کاراکتر باشد.' })\n  firstName: string;\n  @IsString({ message: 'نام خانوادگی باید یک رشته متنی باشد.' })\n  @MinLength(3, { message: 'نام خانوادگی باید بین ۳ تا ۱۶ کاراکتر باشد.' })\n  @MaxLength(16, { message: 'نام خانوادگی باید بین ۳ تا ۱۶ کاراکتر باشد.' })\n  lastName: string;\n  @IsString({ message: 'توضیحات باید یک رشته متنی باشد.' })\n  @MinLength(3, { message: 'توضیحات باید بین ۳ تا ۲۵۰ کاراکتر باشد.' })\n  @MaxLength(250, { message: 'توضیحات باید بین ۳ تا ۲۵۰ کاراکتر باشد.' })\n  description: string;\n}\n\nexport class UserCreateDTO {\n  @IsString({ message: 'نام کاربری باید یک رشته متنی باشد.' })\n  @MinLength(3, { message: 'نام کاربری باید بین ۳ تا ۱۶ کاراکتر باشد.' })\n  @MaxLength(16, { message: 'نام کاربری باید بین ۳ تا ۱۶ کاراکتر باشد.' })\n  @IsNotEmpty({ message: 'نام کاربری نمیتواند خالی باشد' })\n  username: string;\n  @IsString({ message: 'نام باید یک رشته متنی باشد.' })\n  @MinLength(3, { message: 'نام باید بین ۳ تا ۱۶ کاراکتر باشد.' })\n  @MaxLength(16, { message: 'نام باید بین ۳ تا ۱۶ کاراکتر باشد.' })\n  firstName: string;\n  @IsString({ message: 'نام خانوادگی باید یک رشته متنی باشد.' })\n  @MinLength(3, { message: 'نام خانوادگی باید بین ۳ تا ۱۶ کاراکتر باشد.' })\n  @MaxLength(16, { message: 'نام خانوادگی باید بین ۳ تا ۱۶ کاراکتر باشد.' })\n  lastName: string;\n  @IsString({ message: 'توضیحات باید یک رشته متنی باشد.' })\n  @MinLength(3, { message: 'توضیحات باید بین ۳ تا ۲۵۰ کاراکتر باشد.' })\n  @MaxLength(250, { message: 'توضیحات باید بین ۳ تا ۲۵۰ کاراکتر باشد.' })\n  description: string;\n\n  @IsString({ message: 'ایمیل باید یک رشته متنی باشد.' })\n  @IsEmail({}, { message: 'ایمیل معتبر نمی باشد.' })\n  @IsNotEmpty({ message: 'ایمیل نمیتواند خالی باشد' })\n  email: string;\n\n  @IsString({ message: 'رمزعبور باید یک رشته متنی باشد.' })\n  @MinLength(8, { message: 'رمز عبور باید بین ۸ تا ۳۲ کاراکتر باشد.' })\n  @MaxLength(32, { message: 'رمز عبور باید بین ۸ تا ۳۲ کاراکتر باشد.' })\n  @IsNotEmpty({ message: 'رمزعبور نمیتواند خالی باشد' })\n  password: string;\n\n  @IsString({ message: 'تکرار رمزعبور باید یک رشته متنی باشد.' })\n  @MinLength(8, { message: 'تکرار رمز عبور باید بین ۸ تا ۳۲ کاراکتر باشد.' })\n  @MaxLength(32, { message: 'تکرار رمز عبور باید بین ۸ تا ۳۲ کاراکتر باشد.' })\n  @IsNotEmpty({ message: 'تکرار رمزعبور نمیتواند خالی باشد' })\n  confirmPassword: string;\n\n  @IsNumber({}, { message: 'مقدار دسترسی ادمین معتبر نمی باشد.' })\n  @Min(0, { message: 'مقدار دسترسی ادمین معتبر نمی باشد.' })\n  @Max(1, { message: 'مقدار دسترسی ادمین معتبر نمی باشد.' })\n  @Type((type) => Number)\n  isAdmin: 0 | 1;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UsersPlanModel.html":{"url":"classes/UsersPlanModel.html","title":"class - UsersPlanModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UsersPlanModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/usersPlan.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                    \n                                expiredAt\n                            \n                            \n                                    \n                                planId\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                updatedAt\n                            \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/models/usersPlan.model.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        expiredAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/usersPlan.model.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        planId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, required: true, ref: 'ServicePlansModel'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/usersPlan.model.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StatusTypes\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, enum: undefined, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/usersPlan.model.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/models/usersPlan.model.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, required: true, ref: 'UsersPlanModel'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/usersPlan.model.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModelDefinition, Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { PaginateModel, Types } from 'mongoose';\nimport * as mongoosePaginate from 'mongoose-paginate-v2';\n\nexport enum StatusTypes {\n  Active = 'ACTIVE',\n  Deleted = 'DELETED',\n  Expired = 'EXPIRED',\n}\n@Schema({ collection: 'user-plans', timestamps: true })\nexport class UsersPlanModel {\n  @Prop({ type: Types.ObjectId, required: true, ref: 'UsersPlanModel' })\n  userId: string;\n\n  @Prop({ type: Types.ObjectId, required: true, ref: 'ServicePlansModel' })\n  planId: string;\n\n  @Prop({\n    type: String,\n    enum: Object.values(StatusTypes),\n    default: StatusTypes.Active,\n  })\n  status: StatusTypes;\n  @Prop({ type: Date, required: true })\n  expiredAt: Date;\n\n  createdAt!: Date;\n\n  updatedAt!: Date;\n}\n\nexport const UsersPlanSchema = SchemaFactory.createForClass(UsersPlanModel);\nexport type UsersPlanDocument = PaginateModel;\n\nUsersPlanSchema.plugin(mongoosePaginate);\nexport const UsersPlanDefinition: ModelDefinition = {\n  name: UsersPlanModel.name,\n  schema: UsersPlanSchema,\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/V1Module.html":{"url":"modules/V1Module.html","title":"module - V1Module","body":"\n                   \n\n\n\n\n    Modules\n    V1Module\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_V1Module\n\n\n\ncluster_V1Module_imports\n\n\n\n\nDashboardModule\n\nDashboardModule\n\n\n\nV1Module\n\nV1Module\n\nV1Module -->\n\nDashboardModule->V1Module\n\n\n\n\n\nFileServiceModule\n\nFileServiceModule\n\nV1Module -->\n\nFileServiceModule->V1Module\n\n\n\n\n\nOthersModule\n\nOthersModule\n\nV1Module -->\n\nOthersModule->V1Module\n\n\n\n\n\nPaymentModule\n\nPaymentModule\n\nV1Module -->\n\nPaymentModule->V1Module\n\n\n\n\n\nPlansModule\n\nPlansModule\n\nV1Module -->\n\nPlansModule->V1Module\n\n\n\n\n\nUserModule\n\nUserModule\n\nV1Module -->\n\nUserModule->V1Module\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/v1/v1.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            DashboardModule\n                        \n                        \n                            FileServiceModule\n                        \n                        \n                            OthersModule\n                        \n                        \n                            PaymentModule\n                        \n                        \n                            PlansModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FileServiceModule } from './file-service/file-service.module';\nimport { UserModule } from './user/user.module';\nimport { DashboardModule } from './dashboard/dashboard.module';\nimport { OthersModule } from './others/others.module';\nimport { PaymentModule } from './payment/payment.module';\nimport { PlansModule } from './plans/plans.module';\n\n@Module({\n  imports: [\n    FileServiceModule,\n    UserModule,\n    DashboardModule,\n    OthersModule,\n    PaymentModule,\n    PlansModule,\n  ],\n})\nexport class V1Module {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/component/exception-filters/UnAuthenticated.exception.filter.ts\n            \n            class\n            UnAuthenticatedExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/component/exception-filters/isLoggedIn.exception.filter.ts\n            \n            class\n            IsLoggedInExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/component/exception-filters/notFound.exception.filter.ts\n            \n            class\n            NotFoundExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/component/exceptions/UnAuthenticated.exception.ts\n            \n            class\n            UnAuthenticatedException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/component/exceptions/isLoggedIn.exception.ts\n            \n            class\n            IsLoggedInException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/component/guards/authenticate.guard.ts\n            \n            interface\n            Request\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/component/guards/authenticate.guard.ts\n            \n            guard\n            AuthenticateGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/component/guards/isLoggedIn.guard.ts\n            \n            guard\n            IsLoggedInGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/file.model.ts\n            \n            class\n            FileModel\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/models/file.model.ts\n            \n            variable\n            FileModelDefinition\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/file.model.ts\n            \n            variable\n            FileSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/order.model.ts\n            \n            class\n            OrderModel\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/models/order.model.ts\n            \n            variable\n            OrderDefinition\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/order.model.ts\n            \n            variable\n            OrderSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/servicePlans.model.ts\n            \n            class\n            ServicePlansModel\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/models/servicePlans.model.ts\n            \n            variable\n            ServicePlansDefinition\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/servicePlans.model.ts\n            \n            variable\n            ServicePlansSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/user.model.ts\n            \n            class\n            UserModel\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/models/user.model.ts\n            \n            variable\n            UserModelDefinition\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/user.model.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/usersPlan.model.ts\n            \n            class\n            UsersPlanModel\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/models/usersPlan.model.ts\n            \n            variable\n            UsersPlanDefinition\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/usersPlan.model.ts\n            \n            variable\n            UsersPlanSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils.ts\n            \n            variable\n            validateBody\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/v1/dashboard/dashboard.controller.ts\n            \n            controller\n            DashboardController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/v1/dashboard/dashboard.service.ts\n            \n            injectable\n            DashboardService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/v1/file-service/file-service.controller.ts\n            \n            controller\n            FileServiceController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/v1/file-service/file-service.service.ts\n            \n            injectable\n            FileServiceService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/v1/file-service/s3.service.ts\n            \n            injectable\n            S3Service\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/v1/others/others.controller.ts\n            \n            controller\n            OthersController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/v1/payment/payment.controller.ts\n            \n            controller\n            PaymentController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/v1/payment/payment.dto.ts\n            \n            class\n            CallBackDTO\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/v1/payment/payment.service.ts\n            \n            injectable\n            PaymentService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/v1/plans/plan.dto.ts\n            \n            class\n            CreatePlanDTO\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/v1/plans/plans.controller.ts\n            \n            controller\n            PlansController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/v1/plans/plans.service.ts\n            \n            injectable\n            PlansService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/v1/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/v1/user/user.dto.ts\n            \n            class\n            LoginDTO\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/v1/user/user.dto.ts\n            \n            class\n            SignupDTO\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/v1/user/user.dto.ts\n            \n            class\n            UserCreateDTO\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/v1/user/user.dto.ts\n            \n            class\n            UserUpdateDTO\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/v1/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/9)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/axios : ^3.0.1\n        \n            @nestjs/common : ^10.2.9\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/mongoose : ^10.0.2\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            aws-sdk : ^2.1525.0\n        \n            axios : ^1.6.2\n        \n            bcrypt : ^5.1.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            connect-redis : ^7.1.0\n        \n            express-session : ^1.17.3\n        \n            ioredis : ^5.3.2\n        \n            method-override : ^3.0.0\n        \n            moment : ^2.29.4\n        \n            mongoose-paginate-v2 : ^1.7.4\n        \n            pug : ^3.0.2\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.8.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            OrderStatusTypes   (src/.../order.model.ts)\n                        \n                        \n                            ServicesTypes   (src/.../servicePlans.model.ts)\n                        \n                        \n                            StatusTypes   (src/.../file.model.ts)\n                        \n                        \n                            StatusTypes   (src/.../servicePlans.model.ts)\n                        \n                        \n                            StatusTypes   (src/.../usersPlan.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/models/order.model.ts\n    \n        \n            \n                \n                    \n                        \n                        OrderStatusTypes\n                    \n                \n                        \n                            \n                                 InProgress\n                            \n                        \n                        \n                            \n                                Value : IN_PROGRESS\n                            \n                        \n                        \n                            \n                                 Confirm\n                            \n                        \n                        \n                            \n                                Value : CONFIRM\n                            \n                        \n                        \n                            \n                                 Failed\n                            \n                        \n                        \n                            \n                                Value : FAILED\n                            \n                        \n            \n        \n\n    src/models/servicePlans.model.ts\n    \n        \n            \n                \n                    \n                        \n                        ServicesTypes\n                    \n                \n                        \n                            \n                                 Starter\n                            \n                        \n                        \n                            \n                                Value : STARTER\n                            \n                        \n                        \n                            \n                                 Free\n                            \n                        \n                        \n                            \n                                Value : FREE\n                            \n                        \n                        \n                            \n                                 Saleable\n                            \n                        \n                        \n                            \n                                Value : SALEABLE\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        StatusTypes\n                    \n                \n                        \n                            \n                                 Active\n                            \n                        \n                        \n                            \n                                Value : ACTIVE\n                            \n                        \n                        \n                            \n                                 Deleted\n                            \n                        \n                        \n                            \n                                Value : DELETED\n                            \n                        \n            \n        \n\n    src/models/file.model.ts\n    \n        \n            \n                \n                    \n                        \n                        StatusTypes\n                    \n                \n                        \n                            \n                                 Active\n                            \n                        \n                        \n                            \n                                Value : ACTIVE\n                            \n                        \n                        \n                            \n                                 Deleted\n                            \n                        \n                        \n                            \n                                Value : DELETED\n                            \n                        \n                        \n                            \n                                 Expired\n                            \n                        \n                        \n                            \n                                Value : EXPIRED\n                            \n                        \n                        \n                            \n                                 InProgress\n                            \n                        \n                        \n                            \n                                Value : IN_PROGRESS\n                            \n                        \n            \n        \n\n    src/models/usersPlan.model.ts\n    \n        \n            \n                \n                    \n                        \n                        StatusTypes\n                    \n                \n                        \n                            \n                                 Active\n                            \n                        \n                        \n                            \n                                Value : ACTIVE\n                            \n                        \n                        \n                            \n                                 Deleted\n                            \n                        \n                        \n                            \n                                Value : DELETED\n                            \n                        \n                        \n                            \n                                 Expired\n                            \n                        \n                        \n                            \n                                Value : EXPIRED\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\nExample :$ yarn installRunning the app\nExample :# development\n$ yarn run start\n\n# watch mode\n$ yarn run start:dev\n\n# production mode\n$ yarn run start:prodTest\nExample :# unit tests\n$ yarn run test\n\n# e2e tests\n$ yarn run test:e2e\n\n# test coverage\n$ yarn run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DashboardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FileServiceModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OthersModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PaymentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PlansModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        V1Module\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_DashboardModule\n\n\n\ncluster_DashboardModule_imports\n\n\n\ncluster_DashboardModule_providers\n\n\n\ncluster_FileServiceModule\n\n\n\ncluster_FileServiceModule_exports\n\n\n\ncluster_FileServiceModule_providers\n\n\n\ncluster_PaymentModule\n\n\n\ncluster_PaymentModule_exports\n\n\n\ncluster_PaymentModule_providers\n\n\n\ncluster_PlansModule\n\n\n\ncluster_PlansModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\ncluster_V1Module\n\n\n\ncluster_V1Module_imports\n\n\n\n\nV1Module\n\nV1Module\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nV1Module->AppModule\n\n\n\n\n\nFileServiceModule\n\nFileServiceModule\n\nV1Module -->\n\nFileServiceModule->V1Module\n\n\n\n\n\nDashboardModule\n\nDashboardModule\n\nDashboardModule -->\n\nFileServiceModule->DashboardModule\n\n\n\n\n\nFileServiceService \n\nFileServiceService \n\nFileServiceService  -->\n\nFileServiceModule->FileServiceService \n\n\n\n\n\nS3Service \n\nS3Service \n\nS3Service  -->\n\nFileServiceModule->S3Service \n\n\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nFileServiceModule->UserModule\n\n\n\nV1Module -->\n\nDashboardModule->V1Module\n\n\n\n\n\nDashboardService\n\nDashboardService\n\nDashboardModule -->\n\nDashboardService->DashboardModule\n\n\n\n\n\nFileServiceService\n\nFileServiceService\n\nFileServiceModule -->\n\nFileServiceService->FileServiceModule\n\n\n\n\n\nS3Service\n\nS3Service\n\nFileServiceModule -->\n\nS3Service->FileServiceModule\n\n\n\n\n\nPaymentService \n\nPaymentService \n\n\n\nPaymentModule\n\nPaymentModule\n\nV1Module -->\n\nPaymentModule->V1Module\n\n\n\nPaymentService  -->\n\nPaymentModule->PaymentService \n\n\n\n\n\nPlansModule\n\nPlansModule\n\nPlansModule -->\n\nPaymentModule->PlansModule\n\n\n\n\n\nPaymentService\n\nPaymentService\n\nPaymentModule -->\n\nPaymentService->PaymentModule\n\n\n\nV1Module -->\n\nPlansModule->V1Module\n\n\n\n\n\nPlansService\n\nPlansService\n\nPlansModule -->\n\nPlansService->PlansModule\n\n\n\nV1Module -->\n\nUserModule->V1Module\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\nOthersModule\n\nOthersModule\n\nV1Module -->\n\nOthersModule->V1Module\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        8 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    16 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            FileDocument   (src/.../file.model.ts)\n                        \n                        \n                            OrderDocument   (src/.../order.model.ts)\n                        \n                        \n                            ServicePlansDocument   (src/.../servicePlans.model.ts)\n                        \n                        \n                            UserDocument   (src/.../user.model.ts)\n                        \n                        \n                            UsersPlanDocument   (src/.../usersPlan.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/models/file.model.ts\n    \n    \n        \n            \n                \n                    \n                    FileDocument\n                \n            \n            \n                \n                            PaginateModel\n\n                \n            \n        \n    \n    src/models/order.model.ts\n    \n    \n        \n            \n                \n                    \n                    OrderDocument\n                \n            \n            \n                \n                            PaginateModel\n\n                \n            \n        \n    \n    src/models/servicePlans.model.ts\n    \n    \n        \n            \n                \n                    \n                    ServicePlansDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/models/user.model.ts\n    \n    \n        \n            \n                \n                    \n                    UserDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/models/usersPlan.model.ts\n    \n    \n        \n            \n                \n                    \n                    UsersPlanDocument\n                \n            \n            \n                \n                            PaginateModel\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            FileModelDefinition   (src/.../file.model.ts)\n                        \n                        \n                            FileSchema   (src/.../file.model.ts)\n                        \n                        \n                            OrderDefinition   (src/.../order.model.ts)\n                        \n                        \n                            OrderSchema   (src/.../order.model.ts)\n                        \n                        \n                            ServicePlansDefinition   (src/.../servicePlans.model.ts)\n                        \n                        \n                            ServicePlansSchema   (src/.../servicePlans.model.ts)\n                        \n                        \n                            UserModelDefinition   (src/.../user.model.ts)\n                        \n                        \n                            UserSchema   (src/.../user.model.ts)\n                        \n                        \n                            UsersPlanDefinition   (src/.../usersPlan.model.ts)\n                        \n                        \n                            UsersPlanSchema   (src/.../usersPlan.model.ts)\n                        \n                        \n                            validateBody   (src/.../utils.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/models/file.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FileModelDefinition\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModelDefinition\n\n                    \n                \n                \n                    \n                        Default value : {\n  name: FileModel.name,\n  schema: FileSchema,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FileSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(FileModel)\n                    \n                \n\n\n        \n    \n\n    src/models/order.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        OrderDefinition\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModelDefinition\n\n                    \n                \n                \n                    \n                        Default value : {\n  name: OrderModel.name,\n  schema: OrderSchema,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        OrderSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(OrderModel)\n                    \n                \n\n\n        \n    \n\n    src/models/servicePlans.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ServicePlansDefinition\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModelDefinition\n\n                    \n                \n                \n                    \n                        Default value : {\n  name: ServicePlansModel.name,\n  schema: ServicePlansSchema,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ServicePlansSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(ServicePlansModel)\n                    \n                \n\n\n        \n    \n\n    src/models/user.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UserModelDefinition\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModelDefinition\n\n                    \n                \n                \n                    \n                        Default value : {\n  name: UserModel.name,\n  schema: UserSchema,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UserSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(UserModel)\n                    \n                \n\n\n        \n    \n\n    src/models/usersPlan.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UsersPlanDefinition\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModelDefinition\n\n                    \n                \n                \n                    \n                        Default value : {\n  name: UsersPlanModel.name,\n  schema: UsersPlanSchema,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UsersPlanSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(UsersPlanModel)\n                    \n                \n\n\n        \n    \n\n    src/utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        validateBody\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (data: Object, dto: new () => any) => {\n  const convertedClass = plainToClass(dto, data);\n  const validationsResult = await validate(convertedClass);\n  const errors = validationsResult\n    .map((value) => Object.values(value.constraints))\n    .flat();\n\n  if (errors.length) {\n    throw new BadRequestException(errors);\n  }\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
